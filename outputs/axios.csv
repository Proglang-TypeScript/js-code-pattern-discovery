Found 3255 patterns and 596 unique patterns, 0 files could not be parsed:
{
    "typeof('A: Identifier')": 143,
    "!('A: Identifier')": 120,
    "!('A: CallExpression')": 105,
    "('A: string' + 'B: Identifier')": 81,
    "-(1)": 68,
    "typeof('A: MemberExpression')": 66,
    "('A: Identifier' && 'B: MemberExpression')": 48,
    "('A: Identifier' && 'B: CallExpression')": 46,
    "!('A: MemberExpression')": 44,
    "('A: CallExpression' && 'B: CallExpression')": 40,
    "(('A: string' + 'B: Identifier') + 'C: string')": 40,
    "('A: Identifier' + 'B: string')": 39,
    "('A: Identifier' || 'B: ObjectExpression')": 36,
    "!(0)": 36,
    "('A: string' === 'B: Identifier')": 33,
    "(typeof('A: Identifier') !== 'undefined')": 31,
    "void(0)": 31,
    "('A: MemberExpression' === 'B: string')": 30,
    "delete('A: MemberExpression')": 29,
    "('A: Identifier' < 'B: Identifier')": 27,
    "('A: MemberExpression' || 'B: MemberExpression')": 26,
    "('A: Identifier' === 'B: Identifier')": 25,
    "('A: Identifier' && 'B: AssignmentExpression')": 24,
    "('A: string' + 'B: CallExpression')": 24,
    "!(1)": 24,
    "('A: UpdateExpression' > 0)": 23,
    "('A: string' === 'B: CallExpression')": 22,
    "('A: MemberExpression' && 'B: CallExpression')": 22,
    "('A: string' + 'B: MemberExpression')": 22,
    "('A: Identifier' instanceof 'B: Identifier')": 20,
    "(null === 'A: Identifier')": 18,
    "('A: MemberExpression' && 'B: MemberExpression')": 18,
    "('A: CallExpression' ? 'B: CallExpression' : 'C: Identifier')": 18,
    "(\"undefined\" != typeof('A: Identifier'))": 18,
    "('A: MemberExpression' || 'B: Identifier')": 17,
    "('A: Identifier' !== 'B: Identifier')": 17,
    "('A: Identifier' || 'B: Identifier')": 16,
    "('A: Identifier' === 'B: CallExpression')": 16,
    "('A: MemberExpression' + 'B: string')": 16,
    "('A: string' in 'B: Identifier')": 16,
    "('A: CallExpression' || 'B: CallExpression')": 15,
    "(!('A: CallExpression') && 'B: CallExpression')": 14,
    "('A: CallExpression' > -(1))": 14,
    "('A: Identifier' - 'B: Identifier')": 14,
    "('A: MemberExpression' ? 'B: CallExpression' : 'C: CallExpression')": 13,
    "('A: Identifier' * 'B: Identifier')": 13,
    "('A: MemberExpression' === 'B: Identifier')": 12,
    "(null == 'A: Identifier')": 12,
    "(!('A: Identifier') || 'B: CallExpression')": 12,
    "('A: CallExpression' - 'B: number')": 12,
    "('A: MemberExpression' ? 'B: CallExpression' : '')": 12,
    "('A: MemberExpression' || 'B: ObjectExpression')": 12,
    "('A: Identifier' !== null)": 11,
    "(typeof('A: MemberExpression') === 'function')": 11,
    "(true === 'A: Identifier')": 11,
    "('A: CallExpression' ? 'B: CallExpression' : 'C: CallExpression')": 11,
    "('A: Identifier' + 1)": 11,
    "('A: MemberExpression' === 'B: MemberExpression')": 11,
    "((('A: string' + 'B: Identifier') + 'C: string') + 'D: Identifier')": 11,
    "((('A: BinaryExpression' + 'B: string') + 'C: string') + 'D: string')": 11,
    "(typeof('A: Identifier') === 'function')": 10,
    "('A: Identifier' !== 'B: MemberExpression')": 10,
    "-('A: number')": 10,
    "(!('A: Identifier') && 'B: CallExpression')": 10,
    "(('A: CallExpression' + 'B: string') + 'C: CallExpression')": 10,
    "('A: CallExpression' + 'B: string')": 10,
    "('A: Identifier' || 'B: MemberExpression')": 10,
    "('A: Identifier' && !('B: MemberExpression'))": 10,
    "('A: Identifier' in 'B: Identifier')": 10,
    "('A: string' !== 'B: Identifier')": 10,
    "('A: Identifier' !== -(1))": 9,
    "(!('A: Identifier') && 'B: Identifier')": 9,
    "('A: MemberExpression' || '')": 9,
    "('A: MemberExpression' === 0)": 9,
    "('A: number' * 'B: number')": 9,
    "(typeof('A: Identifier') === 'undefined')": 8,
    "('A: Identifier' && !('B: CallExpression'))": 8,
    "(('A: string' + 'B: MemberExpression') + 'C: string')": 8,
    "(void(0) === 'A: Identifier')": 8,
    "(typeof('A: MemberExpression') == \"function\")": 8,
    "('A: MemberExpression' ? 'B: CallExpression' : \"\")": 8,
    "(typeof('A: Identifier') !== \"undefined\")": 8,
    "(typeof('A: Identifier') === 'object')": 7,
    "('A: Identifier' && (!('B: Identifier') || 'C: CallExpression'))": 7,
    "('A: CallExpression' === -(1))": 7,
    "+('A: Identifier')": 7,
    "(('A: Identifier' + 'B: string') + 'C: CallExpression')": 7,
    "(('A: Identifier' + 'B: string') + 'C: Identifier')": 7,
    "(!('A: Identifier') || 'B: MemberExpression')": 7,
    "('A: Identifier' ? 'B: CallExpression' : 'C: Identifier')": 7,
    "((('A: BinaryExpression' + 'B: string') + 'C: Identifier') + 'D: string')": 7,
    "(false === 'A: Identifier')": 7,
    "('A: Identifier' !== true)": 7,
    "(typeof('A: Identifier') == \"object\")": 7,
    "(typeof('A: Identifier') == \"function\")": 7,
    "('A: Identifier' + 'B: Identifier')": 7,
    "(typeof('A: Identifier') !== 'object')": 6,
    "('A: Identifier' > 'B: MemberExpression')": 6,
    "('A: CallExpression' !== -(1))": 6,
    "('A: MemberExpression' - 1)": 6,
    "('A: MemberExpression' ? (('B: string' + 'C: MemberExpression') + 'D: string') : 'E: string')": 6,
    "('A: MemberExpression' ? 'B: MemberExpression' : 'C: MemberExpression')": 6,
    "('A: Identifier' !== 'B: string')": 6,
    "((!('A: Identifier') || 'B: MemberExpression') ? 'C: NewExpression' : 'D: Identifier')": 6,
    "(typeof('A: Identifier') === 'B: Identifier')": 6,
    "((('A: BinaryExpression' + 'B: Identifier') + 'C: string') + 'D: Identifier')": 6,
    "('A: Identifier' ? ('B: string' + 'C: Identifier') : '')": 6,
    "(null !== 'A: Identifier')": 6,
    "(-(1) !== 'A: Identifier')": 6,
    "('A: MemberExpression' && 'B: AssignmentExpression')": 6,
    "('A: Identifier' && 'B: SequenceExpression')": 6,
    "('A: MemberExpression' || 'B: AssignmentExpression')": 5,
    "(('A: Identifier' && 'B: MemberExpression') && 'C: CallExpression')": 5,
    "(typeof('A: Identifier') === 'string')": 5,
    "((null === 'A: Identifier') || ('B: MemberExpression' === 'C: Identifier'))": 5,
    "('A: Identifier' && (('B: LogicalExpression' || 'C: BinaryExpression') || ('D: CallExpression' && 'E: BinaryExpression')))": 5,
    "((('A: BinaryExpression' && 'B: BinaryExpression') || ('C: Identifier' === 'D: CallExpression')) || ('E: CallExpression' && ('F: Identifier' === 'G: CallExpression')))": 5,
    "('A: CallExpression' && ('B: Identifier' === 'C: CallExpression'))": 5,
    "('A: Identifier' && (typeof('B: Identifier') === 'function'))": 5,
    "('A: number' === 'B: CallExpression')": 5,
    "(('A: Identifier' && ('B: UnaryExpression' || 'C: CallExpression')) && ('D: Identifier' !== 'E: MemberExpression'))": 5,
    "('A: Identifier' !== false)": 5,
    "('A: Identifier' && ('B: Identifier' instanceof 'C: Identifier'))": 5,
    "('A: AssignmentExpression' && !('B: MemberExpression'))": 5,
    "(('A: MemberExpression' && 'B: MemberExpression') ? 'C: MemberExpression' : null)": 5,
    "((!('A: Identifier') && 'B: Identifier') ? (('C: string' + 'D: Identifier') + 'E: string') : 'F: Identifier')": 5,
    "('A: CallExpression' && !('B: CallExpression'))": 5,
    "('A: Identifier' || 'B: NewExpression')": 5,
    "('A: Identifier' && !('B: Identifier'))": 5,
    "('A: Identifier' ? 'B: Identifier' : 'C: CallExpression')": 5,
    "('A: CallExpression' && 'B: AssignmentExpression')": 5,
    "((null === 'A: Identifier') ? 'B: Identifier' : ('C: Identifier' + 'D: string'))": 5,
    "('A: Identifier' ? 'B: CallExpression' : 'C: ArrayExpression')": 5,
    "('A: Identifier' ? 'B: FunctionExpression' : 'C: Identifier')": 5,
    "(('A: Identifier' && 'B: MemberExpression') || 'C: Identifier')": 5,
    "('A: Identifier' ? 'B: MemberExpression' : null)": 5,
    "('A: CallExpression' === 'B: CallExpression')": 5,
    "('A: Identifier' >= 'B: MemberExpression')": 5,
    "((!('A: Identifier') && 'B: CallExpression') ? 'C: MemberExpression' : 'D: Identifier')": 5,
    "('A: MemberExpression' / 'B: number')": 5,
    "('A: Identifier' ? 'B: CallExpression' : null)": 5,
    "('A: Identifier' ? (('B: CallExpression' + 'C: string') + 'D: CallExpression') : 'E: Identifier')": 5,
    "('A: MemberExpression' ? (('B: MemberExpression' + 'C: string') + 'D: Identifier') : 'E: Identifier')": 5,
    "(('A: MemberExpression' + 'B: string') + 'C: Identifier')": 5,
    "(('A: string' === 'B: CallExpression') ? 'C: MemberExpression' : ('D: string' + 'E: MemberExpression'))": 5,
    "(('A: MemberExpression' === 'B: MemberExpression') && ('C: MemberExpression' === 'D: MemberExpression'))": 5,
    "((null == 'A: Identifier') ? 'B: string' : 'C: Identifier')": 5,
    "(('A: Identifier' && 'B: MemberExpression') || '')": 5,
    "(!('A: Identifier') || ('B: string' === 'C: Identifier'))": 5,
    "('A: MemberExpression' && (0 === 'B: CallExpression'))": 5,
    "(0 === 'A: CallExpression')": 5,
    "(('A: MemberExpression' || 'B: CallExpression') && 'C: MemberExpression')": 5,
    "('A: MemberExpression' || 'B: CallExpression')": 5,
    "!(!('A: MemberExpression'))": 5,
    "((('A: LogicalExpression' || 'B: CallExpression') || 'C: CallExpression') || 'D: CallExpression')": 5,
    "((('A: CallExpression' || 'B: CallExpression') || 'C: CallExpression') || 'D: CallExpression')": 5,
    "(('A: CallExpression' || 'B: CallExpression') || 'C: CallExpression')": 5,
    "('A: AssignmentExpression' || ('B: CallExpression' > -(1)))": 5,
    "('A: Identifier' ? 'B: ObjectExpression' : 'C: Identifier')": 5,
    "('A: Identifier' && 'B: NewExpression')": 5,
    "(('A: Identifier' && 'B: CallExpression') && (('C: Identifier' && 'D: UnaryExpression') || 'E: Identifier'))": 5,
    "(('A: Identifier' && !('B: MemberExpression')) || 'C: Identifier')": 5,
    "(('A: Identifier' >= 'B: number') && ('C: Identifier' < 'D: number'))": 5,
    "('A: Identifier' >= 'B: number')": 5,
    "('A: Identifier' < 'B: number')": 5,
    "('A: ThisExpression' || 'B: Identifier')": 5,
    "!(('A: Identifier' && 'B: MemberExpression'))": 5,
    "(('A: CallExpression' && ('B: Identifier' !== 'C: Identifier')) || 'D: AssignmentExpression')": 5,
    "('A: CallExpression' && ('B: Identifier' !== 'C: Identifier'))": 5,
    "((typeof('A: Identifier') === 'B: Identifier') || (('C: string' + 'D: ConditionalExpression') + 'E: Identifier'))": 5,
    "(('A: string' + ('B: BinaryExpression' ? 'C: string' : 'D: string')) + 'E: Identifier')": 5,
    "('A: string' + (('B: Identifier' < 1) ? 'C: string' : 'D: string'))": 5,
    "(('A: Identifier' < 1) ? 'B: string' : 'C: string')": 5,
    "('A: Identifier' < 1)": 5,
    "('A: Identifier' ? 'B: ObjectExpression' : 'C: ObjectExpression')": 5,
    "('A: CallExpression' ? 'B: NewExpression' : 'C: Identifier')": 5,
    "('A: Identifier' && 'B: Identifier')": 5,
    "((typeof('A: Identifier') !== 'undefined') && 'B: Identifier')": 4,
    "(('A: Identifier' !== 'B: Identifier') && ('C: CallExpression' === 'D: CallExpression'))": 4,
    "('A: MemberExpression' && ('B: CallExpression' >= 0))": 4,
    "('A: CallExpression' >= 0)": 4,
    "('A: MemberExpression' ? 'B: MemberExpression' : 'C: ArrayExpression')": 4,
    "('A: MemberExpression' !== 'B: string')": 4,
    "(\"object\" != typeof('A: Identifier'))": 4,
    "(typeof('A: Identifier') == \"string\")": 4,
    "('A: CallExpression' ? 'B: AssignmentExpression' : 'C: AssignmentExpression')": 4,
    "('A: Identifier' && (typeof('B: Identifier') == \"function\"))": 4,
    "('A: MemberExpression' ? 'B: CallExpression' : 'C: AssignmentExpression')": 4,
    "(!(0) === 'A: Identifier')": 4,
    "(-(1) !== 'A: CallExpression')": 4,
    "(-(1) === 'A: CallExpression')": 4,
    "('A: Identifier' && ('B: string' !== 'C: Identifier'))": 4,
    "('A: CallExpression' ? ('B: CallExpression' ? void(0) : 'C: CallExpression') : 'D: CallExpression')": 4,
    "('A: CallExpression' ? void(0) : 'B: CallExpression')": 4,
    "('A: Identifier' ? ('B: string' + 'C: Identifier') : \"\")": 4,
    "(!(0) !== 'A: Identifier')": 4,
    "('A: Identifier' ? 'B: CallExpression' : 'C: CallExpression')": 4,
    "('A: Identifier' ? 'B: Identifier' : 'C: Identifier')": 4,
    "('A: Identifier' ? 'B: string' : 'C: string')": 4,
    "(typeof('A: Identifier') === \"function\")": 4,
    "('A: MemberExpression' !== 'B: Identifier')": 4,
    "((('A: BinaryExpression' && 'B: UnaryExpression') && ('C: MemberExpression' !== null)) && !('D: CallExpression'))": 3,
    "((('A: Identifier' !== null) && !('B: CallExpression')) && ('C: MemberExpression' !== null))": 3,
    "(('A: Identifier' !== null) && !('B: CallExpression'))": 3,
    "('A: MemberExpression' !== null)": 3,
    "((typeof('A: Identifier') !== 'undefined') && 'B: MemberExpression')": 3,
    "(('A: Identifier' !== null) && (typeof('B: Identifier') === 'object'))": 3,
    "('A: CallExpression' !== 'object')": 3,
    "((('A: UnaryExpression' === 'function') && ('B: Identifier' instanceof 'C: Identifier')) || ('D: Identifier' === 'E: CallExpression'))": 3,
    "((typeof('A: Identifier') === 'function') && ('B: Identifier' instanceof 'C: Identifier'))": 3,
    "((typeof('A: Identifier') !== 'undefined') && (('B: BinaryExpression' || 'C: BinaryExpression') || ('D: string' === 'E: Identifier')))": 3,
    "((('A: string' === 'B: AssignmentExpression') || ('C: string' === 'D: Identifier')) || ('E: string' === 'F: Identifier'))": 3,
    "(('A: string' === 'B: AssignmentExpression') || ('C: string' === 'D: Identifier'))": 3,
    "('A: string' === 'B: AssignmentExpression')": 3,
    "((typeof('A: Identifier') !== 'undefined') && (typeof('B: Identifier') !== 'undefined'))": 3,
    "((null === 'A: Identifier') || (typeof('B: Identifier') === 'undefined'))": 3,
    "((!('A: Identifier') || 'B: CallExpression') && !('C: MemberExpression'))": 3,
    "(('A: Identifier' !== false) && 'B: CallExpression')": 3,
    "(('A: Identifier' === 'B: Identifier') || ('C: Identifier' > 'D: MemberExpression'))": 3,
    "(('A: Identifier' !== -(1)) && ('B: Identifier' === 'C: Identifier'))": 3,
    "((typeof('A: Identifier') !== 'undefined') && 'B: CallExpression')": 3,
    "('A: AssignmentExpression' !== null)": 3,
    "('A: Identifier' ? 'B: string' : '')": 3,
    "((('A: Identifier' && 'B: CallExpression') && ('C: MemberExpression' === 'D: string')) && 'E: MemberExpression')": 3,
    "(('A: Identifier' && 'B: CallExpression') && ('C: MemberExpression' === 'D: string'))": 3,
    "('A: MemberExpression' || (('B: UnaryExpression' !== 'undefined') && 'C: Identifier'))": 3,
    "(('A: Identifier' && ('B: UnaryExpression' === 'function')) ? 'C: NewExpression' : 'D: CallExpression')": 3,
    "(('A: Identifier' && !('B: Identifier')) && (typeof('C: Identifier') === 'object'))": 3,
    "(('A: CallExpression' && 'B: CallExpression') || ('C: CallExpression' || ('D: CallExpression' && 'E: AssignmentExpression')))": 3,
    "('A: CallExpression' || ('B: CallExpression' && 'C: AssignmentExpression'))": 3,
    "((true === 'A: Identifier') ? 'B: CallExpression' : ((null === 'C: Identifier') ? 'D: Identifier' : ('E: Identifier' + 'F: string')))": 3,
    "((('A: CallExpression' === 'B: UnaryExpression') ? 'C: string' : 'D: string') + 'E: Identifier')": 3,
    "(('A: CallExpression' === -(1)) ? 'B: string' : 'C: string')": 3,
    "('A: Identifier' ? 'B: MemberExpression' : false)": 3,
    "((typeof('A: Identifier') !== 'undefined') ? 'B: Identifier' : 'C: Identifier')": 3,
    "(('A: MemberExpression' === 'B: string') ? '' : ('C: MemberExpression' || 'D: MemberExpression'))": 3,
    "(!('A: MemberExpression') || !('B: CallExpression'))": 3,
    "((!('A: MemberExpression') || !('B: Identifier')) || 'C: CallExpression')": 3,
    "(!('A: MemberExpression') || !('B: Identifier'))": 3,
    "((('A: UnaryExpression' || 'B: BinaryExpression') || ('C: string' === 'D: Identifier')) ? 'E: MemberExpression' : 'F: MemberExpression')": 3,
    "((!('A: Identifier') || ('B: string' === 'C: Identifier')) || ('D: string' === 'E: Identifier'))": 3,
    "(!('A: Identifier') || ('B: MemberExpression' !== 'C: number'))": 3,
    "('A: MemberExpression' !== 'B: number')": 3,
    "(('A: MemberExpression' === 0) && !(('B: MemberExpression' && 'C: BinaryExpression')))": 3,
    "!(('A: MemberExpression' && (0 === 'B: CallExpression')))": 3,
    "('A: Identifier' && ('B: Identifier' !== 'C: string'))": 3,
    "((typeof('A: MemberExpression') === 'function') && 'B: MemberExpression')": 3,
    "('A: Identifier' && ('B: CallExpression' === -(1)))": 3,
    "((typeof('A: Identifier') !== 'undefined') && ('B: string' === 'C: CallExpression'))": 3,
    "!(!(('A: Identifier' && 'B: MemberExpression')))": 3,
    "((('A: BinaryExpression' + 'B: string') + 'C: Identifier') + ('D: Identifier' ? ('E: string' + 'F: Identifier') : ''))": 3,
    "('A: string' + ('B: Identifier' ? ('C: string' + 'D: Identifier') : ''))": 3,
    "('A: Identifier' ? 'B: CallExpression' : true)": 3,
    "(('A: Identifier' === 'B: Identifier') || 'C: CallExpression')": 3,
    "((typeof('A: MemberExpression') === 'function') && (false === 'B: CallExpression'))": 3,
    "(false === 'A: CallExpression')": 3,
    "(typeof('A: Identifier') !== 'function')": 3,
    "('A: CallExpression' && ('B: MemberExpression' === true))": 3,
    "('A: MemberExpression' === true)": 3,
    "('A: MemberExpression' === 'B: number')": 3,
    "(('A: string' in 'B: Identifier') && 'C: CallExpression')": 3,
    "('A: string' + 'B: string')": 3,
    "('A: MemberExpression' > -(1))": 3,
    "('A: Identifier' <= 'B: Identifier')": 3,
    "('A: Identifier' / 'B: Identifier')": 3,
    "('A: number' * 'B: Identifier')": 3,
    "('A: Identifier' - 'B: MemberExpression')": 3,
    "(typeof('A: Identifier') === \"object\")": 3,
    "((('A: LogicalExpression' && 'B: UnaryExpression') && ('C: UnaryExpression' === 'function')) && 'D: CallExpression')": 2,
    "((('A: LogicalExpression' && 'B: BinaryExpression') && !('C: CallExpression')) && (typeof('D: MemberExpression') === 'function'))": 2,
    "(typeof('A: Identifier') === 'number')": 2,
    "((typeof('A: Identifier') == 'object') ? 'B: MemberExpression' : 'C: MemberExpression')": 2,
    "(typeof('A: Identifier') == 'object')": 2,
    "(('A: string' in 'B: Identifier') ? 'C: CallExpression' : null)": 2,
    "((('A: MemberExpression' || 'B: CallExpression') && 'C: MemberExpression') ? 'D: CallExpression' : 'E: Identifier')": 2,
    "((typeof('A: Identifier') === 'undefined') && ('B: string' === 'C: CallExpression'))": 2,
    "(typeof('A: Identifier') == \"number\")": 2,
    "((null !== 'A: Identifier') && (typeof('B: Identifier') == \"object\"))": 2,
    "(\"object\" !== 'A: CallExpression')": 2,
    "(null != 'A: Identifier')": 2,
    "((\"object\" != typeof('A: Identifier')) && 'B: AssignmentExpression')": 2,
    "((\"undefined\" != typeof('A: Identifier')) && 'B: CallExpression')": 2,
    "((('A: LogicalExpression' && 'B: UnaryExpression') && ('C: UnaryExpression' == \"function\")) && 'D: CallExpression')": 2,
    "((('A: LogicalExpression' && 'B: BinaryExpression') && !('C: CallExpression')) && (typeof('D: MemberExpression') == \"function\"))": 2,
    "((('A: BinaryExpression' && 'B: UnaryExpression') && (null !== 'C: MemberExpression')) && !('D: CallExpression'))": 2,
    "(((null !== 'A: Identifier') && !('B: CallExpression')) && (null !== 'C: MemberExpression'))": 2,
    "((null !== 'A: Identifier') && !('B: CallExpression'))": 2,
    "(null !== 'A: MemberExpression')": 2,
    "((('A: UnaryExpression' == \"function\") && ('B: Identifier' instanceof 'C: Identifier')) || ('D: Identifier' === 'E: CallExpression'))": 2,
    "((typeof('A: Identifier') == \"function\") && ('B: Identifier' instanceof 'C: Identifier'))": 2,
    "(((\"undefined\" != 'A: UnaryExpression') && 'B: MemberExpression') ? 'C: CallExpression' : (('D: Identifier' && 'E: MemberExpression') && 'F: CallExpression'))": 2,
    "((\"undefined\" != typeof('A: Identifier')) && 'B: MemberExpression')": 2,
    "((('A: UnaryExpression' == \"undefined\") || ('B: LogicalExpression' && 'C: BinaryExpression')) && ((\"undefined\" != 'D: UnaryExpression') && (\"undefined\" != 'E: UnaryExpression')))": 2,
    "((typeof('A: Identifier') == \"undefined\") || (('B: BinaryExpression' && 'C: BinaryExpression') && ('D: string' !== 'E: Identifier')))": 2,
    "(typeof('A: Identifier') == \"undefined\")": 2,
    "((('A: string' !== 'B: AssignmentExpression') && ('C: string' !== 'D: Identifier')) && ('E: string' !== 'F: Identifier'))": 2,
    "(('A: string' !== 'B: AssignmentExpression') && ('C: string' !== 'D: Identifier'))": 2,
    "('A: string' !== 'B: AssignmentExpression')": 2,
    "((\"undefined\" != typeof('A: Identifier')) && (\"undefined\" != typeof('B: Identifier')))": 2,
    "(('A: CallExpression' && 'B: CallExpression') ? 'C: AssignmentExpression' : ('D: CallExpression' ? 'E: AssignmentExpression' : ('F: CallExpression' ? 'G: AssignmentExpression' : 'H: AssignmentExpression')))": 2,
    "('A: CallExpression' ? 'B: AssignmentExpression' : ('C: CallExpression' ? 'D: AssignmentExpression' : 'E: AssignmentExpression'))": 2,
    "(('A: Identifier' && ('B: UnaryExpression' == \"function\")) ? 'C: CallExpression' : 'D: Identifier')": 2,
    "(('A: number' === 'B: CallExpression') && 'C: AssignmentExpression')": 2,
    "((('A: Identifier' && 'B: UnaryExpression') || 'C: MemberExpression') || 'D: SequenceExpression')": 2,
    "(('A: Identifier' && !('B: CallExpression')) || 'C: MemberExpression')": 2,
    "((!(1) !== 'A: Identifier') && 'B: CallExpression')": 2,
    "(!(1) !== 'A: Identifier')": 2,
    "((('A: UnaryExpression' === 'B: Identifier') || ('C: Identifier' > 'D: MemberExpression')) && 'E: AssignmentExpression')": 2,
    "((void(0) === 'A: Identifier') || ('B: Identifier' > 'C: MemberExpression'))": 2,
    "((-(1) !== 'A: Identifier') && ('B: Identifier' === 'C: Identifier'))": 2,
    "(null !== 'A: AssignmentExpression')": 2,
    "((typeof('A: Identifier') == \"object\") ? 'B: MemberExpression' : 'C: MemberExpression')": 2,
    "('A: Identifier' ? 'B: string' : \"\")": 2,
    "(('A: MemberExpression' || ('B: BinaryExpression' && 'C: Identifier')) && (('D: LogicalExpression' && 'E: BinaryExpression') && 'F: MemberExpression'))": 2,
    "('A: MemberExpression' || ((\"undefined\" != 'B: UnaryExpression') && 'C: Identifier'))": 2,
    "((\"undefined\" != typeof('A: Identifier')) && 'B: Identifier')": 2,
    "((('A: AssignmentExpression' && 'B: CallExpression') && ('C: MemberExpression' === 'D: string')) && 'E: MemberExpression')": 2,
    "(('A: AssignmentExpression' && 'B: CallExpression') && ('C: MemberExpression' === 'D: string'))": 2,
    "('A: AssignmentExpression' && 'B: CallExpression')": 2,
    "(('A: CallExpression' || 'B: CallExpression') ? (('C: Identifier' && 'D: BinaryExpression') ? 'E: NewExpression' : 'F: CallExpression') : 'G: Identifier')": 2,
    "(('A: Identifier' && ('B: UnaryExpression' == \"function\")) ? 'C: NewExpression' : 'D: CallExpression')": 2,
    "(('A: Identifier' && !('B: Identifier')) && (typeof('C: Identifier') == \"object\"))": 2,
    "((('A: CallExpression' && 'B: CallExpression') || 'C: CallExpression') || ('D: CallExpression' && 'E: AssignmentExpression'))": 2,
    "(('A: CallExpression' && 'B: CallExpression') || 'C: CallExpression')": 2,
    "((!(0) === 'A: Identifier') ? 'B: CallExpression' : ((null === 'C: Identifier') ? 'D: Identifier' : ('E: Identifier' + 'F: string')))": 2,
    "(!(!('A: CallExpression')) || 'B: SequenceExpression')": 2,
    "!(!('A: CallExpression'))": 2,
    "((!(0) === ('A: UnaryExpression' && 'B: CallExpression')) && 'C: CallExpression')": 2,
    "(!(0) === (!('A: CallExpression') && 'B: CallExpression'))": 2,
    "((-(1) !== 'A: Identifier') && 'B: AssignmentExpression')": 2,
    "((('A: UnaryExpression' === 'B: CallExpression') ? 'C: string' : 'D: string') + 'E: Identifier')": 2,
    "((-(1) === 'A: CallExpression') ? 'B: string' : 'C: string')": 2,
    "(!(!('A: Identifier')) && 'B: MemberExpression')": 2,
    "!(!('A: Identifier'))": 2,
    "((null !== 'A: Identifier') && 'B: CallExpression')": 2,
    "((('A: Identifier' !== 'B: Identifier') && ('C: CallExpression' === 'D: CallExpression')) && 'E: SequenceExpression')": 2,
    "((\"undefined\" != typeof('A: Identifier')) ? 'B: Identifier' : 'C: Identifier')": 2,
    "('A: Identifier' ? 'B: SequenceExpression' : 'C: SequenceExpression')": 2,
    "(('A: MemberExpression' && 'B: CallExpression') || 'C: AssignmentExpression')": 2,
    "(('A: CallExpression' && 'B: CallExpression') && 'C: AssignmentExpression')": 2,
    "(('A: MemberExpression' === 'B: string') ? \"\" : ('C: MemberExpression' || 'D: MemberExpression'))": 2,
    "('A: CallExpression' ? 'B: ObjectExpression' : 'C: ObjectExpression')": 2,
    "((!(0) === 'A: Identifier') && 'B: CallExpression')": 2,
    "(('A: Identifier' && !('B: CallExpression')) ? 'C: CallExpression' : 'D: Identifier')": 2,
    "('A: CallExpression' ? 'B: CallExpression' : 'C: FunctionExpression')": 2,
    "(('A: CallExpression' && 'B: CallExpression') && delete('C: MemberExpression'))": 2,
    "('A: MemberExpression' || \"\")": 2,
    "(('A: string' in 'B: Identifier') ? 'C: SequenceExpression' : null)": 2,
    "('A: Identifier' ? 'B: SequenceExpression' : 'C: Identifier')": 2,
    "(('A: string' === 'B: Identifier') ? 'C: CallExpression' : ('D: MemberExpression' ? ('E: BinaryExpression' + 'F: Identifier') : 'G: Identifier'))": 2,
    "((('A: MemberExpression' && 'B: Identifier') && !('C: CallExpression')) ? 'D: CallExpression' : 'E: CallExpression')": 2,
    "(('A: MemberExpression' && 'B: Identifier') && !('C: CallExpression'))": 2,
    "('A: MemberExpression' && 'B: Identifier')": 2,
    "((('A: Identifier' && 'B: BinaryExpression') && ('C: string' !== 'D: Identifier')) ? 'E: MemberExpression' : 'F: MemberExpression')": 2,
    "(('A: Identifier' && ('B: string' !== 'C: Identifier')) && ('D: string' !== 'E: Identifier'))": 2,
    "(('A: string' in 'B: Identifier') ? 'C: AssignmentExpression' : 'D: AssignmentExpression')": 2,
    "((('A: Identifier' && 'B: BinaryExpression') && ('C: BinaryExpression' || 'D: LogicalExpression')) && 'E: CallExpression')": 2,
    "(('A: Identifier' && ('B: MemberExpression' === 'C: number')) && ((0 !== 'D: MemberExpression') || ('E: MemberExpression' && 'F: BinaryExpression')))": 2,
    "('A: Identifier' && ('B: MemberExpression' === 'C: number'))": 2,
    "((0 !== 'A: MemberExpression') || ('B: MemberExpression' && (0 === 'C: CallExpression')))": 2,
    "(0 !== 'A: MemberExpression')": 2,
    "((('A: MemberExpression' || 'B: CallExpression') && 'C: MemberExpression') ? 'D: CallExpression' : void(0))": 2,
    "((('A: UnaryExpression' === 'B: Identifier') && ('C: string' === 'D: CallExpression')) ? delete('E: MemberExpression') : 'F: CallExpression')": 2,
    "((void(0) === 'A: Identifier') && ('B: string' === 'C: CallExpression'))": 2,
    "('A: CallExpression' || 'B: AssignmentExpression')": 2,
    "(('A: Identifier' && ('B: string' !== 'C: Identifier')) && 'D: AssignmentExpression')": 2,
    "((typeof('A: MemberExpression') == \"function\") && 'B: CallExpression')": 2,
    "((('A: UnaryExpression' == \"function\") && 'B: MemberExpression') && 'C: CallExpression')": 2,
    "((typeof('A: MemberExpression') == \"function\") && 'B: MemberExpression')": 2,
    "(('A: MemberExpression' || 'B: MemberExpression') && 'C: SequenceExpression')": 2,
    "('A: MemberExpression' && ('B: MemberExpression' ? 'C: CallExpression' : 'D: CallExpression'))": 2,
    "('A: Identifier' || 'B: AssignmentExpression')": 2,
    "(('A: AssignmentExpression' && 'B: MemberExpression') || \"\")": 2,
    "('A: AssignmentExpression' && 'B: MemberExpression')": 2,
    "(('A: Identifier' && ('B: UnaryExpression' === 'C: CallExpression')) ? 'D: CallExpression' : 'E: CallExpression')": 2,
    "('A: Identifier' && (-(1) === 'B: CallExpression'))": 2,
    "((!('A: CallExpression') && 'B: CallExpression') && 'C: AssignmentExpression')": 2,
    "(((\"undefined\" != 'A: UnaryExpression') || ('B: BinaryExpression' && 'C: BinaryExpression')) && 'D: AssignmentExpression')": 2,
    "((\"undefined\" != typeof('A: Identifier')) || ((\"undefined\" != 'B: UnaryExpression') && ('C: string' === 'D: CallExpression')))": 2,
    "((\"undefined\" != typeof('A: Identifier')) && ('B: string' === 'C: CallExpression'))": 2,
    "(('A: Identifier' && 'B: MemberExpression') || \"\")": 2,
    "(('A: Identifier' && 'B: CallExpression') && 'C: AssignmentExpression')": 2,
    "(('A: Identifier' && 'B: Identifier') ? 'C: CallExpression' : 'D: Identifier')": 2,
    "(('A: MemberExpression' && 'B: CallExpression') ? 'C: SequenceExpression' : 'D: CallExpression')": 2,
    "(('A: Identifier' || 'B: Identifier') ? 'C: SequenceExpression' : 'D: Identifier')": 2,
    "('A: string' !== 'B: MemberExpression')": 2,
    "(!(('A: Identifier' && 'B: MemberExpression')) && 'C: Identifier')": 2,
    "!((!('A: Identifier') || !('B: MemberExpression')))": 2,
    "(!('A: Identifier') || !('B: MemberExpression'))": 2,
    "('A: CallExpression' || 'B: SequenceExpression')": 2,
    "(('A: Identifier' && 'B: MemberExpression') && 'C: AssignmentExpression')": 2,
    "(('A: CallExpression' && 'B: CallExpression') ? 'C: CallExpression' : ('D: CallExpression' ? 'E: CallExpression' : ('F: CallExpression' ? 'G: CallExpression' : 'H: Identifier')))": 2,
    "('A: CallExpression' ? 'B: CallExpression' : ('C: CallExpression' ? 'D: CallExpression' : 'E: Identifier'))": 2,
    "(('A: Identifier' in 'B: Identifier') ? 'C: CallExpression' : (('D: Identifier' in 'E: Identifier') ? 'F: CallExpression' : void(0)))": 2,
    "(('A: Identifier' in 'B: Identifier') ? 'C: CallExpression' : void(0))": 2,
    "((('A: BinaryExpression' + 'B: string') + 'C: Identifier') + ('D: Identifier' ? ('E: string' + 'F: Identifier') : \"\"))": 2,
    "(!(1) === 'A: Identifier')": 2,
    "('A: string' + ('B: Identifier' ? ('C: string' + 'D: Identifier') : \"\"))": 2,
    "(('A: Identifier' && !('B: MemberExpression')) && 'C: SequenceExpression')": 2,
    "((void(0) === 'A: Identifier') || 'B: CallExpression')": 2,
    "((typeof('A: Identifier') == \"string\") ? 'B: AssignmentExpression' : 'C: AssignmentExpression')": 2,
    "('A: MemberExpression' ? 'B: AssignmentExpression' : ('C: MemberExpression' ? 'D: AssignmentExpression' : 'E: AssignmentExpression'))": 2,
    "('A: MemberExpression' ? 'B: AssignmentExpression' : 'C: AssignmentExpression')": 2,
    "((void(0) !== 'A: Identifier') && 'B: CallExpression')": 2,
    "(void(0) !== 'A: Identifier')": 2,
    "((('A: UnaryExpression' == \"function\") && ('B: UnaryExpression' === 'C: CallExpression')) || 'D: SequenceExpression')": 2,
    "((typeof('A: MemberExpression') == \"function\") && (!(1) === 'B: CallExpression'))": 2,
    "(!(1) === 'A: CallExpression')": 2,
    "(\"function\" != typeof('A: Identifier'))": 2,
    "('A: MemberExpression' || 'B: SequenceExpression')": 2,
    "('A: MemberExpression' ? 'B: CallExpression' : ('C: MemberExpression' ? 'D: CallExpression' : 'E: AssignmentExpression'))": 2,
    "((-(1) !== 'A: Identifier') && 'B: CallExpression')": 2,
    "('A: CallExpression' && (!(0) === 'B: MemberExpression'))": 2,
    "(!(0) === 'A: MemberExpression')": 2,
    "((('A: string' + 'B: string') + 'C: string') + 'D: string')": 2,
    "(('A: string' + 'B: string') + 'C: string')": 2,
    "('A: Identifier' || 'B: string')": 2,
    "(('A: string' + 'B: CallExpression') + 'C: string')": 2,
    "('A: CallExpression' && 'B: MemberExpression')": 2,
    "(!('A: Identifier') && ('B: Identifier' !== false))": 2,
    "('A: MemberExpression' ? ('B: string' + 'C: MemberExpression') : '')": 2,
    "('A: MemberExpression' !== false)": 2,
    "('A: Identifier' ? ('B: Identifier' / 'C: Identifier') : 'D: Identifier')": 2,
    "(('A: Identifier' - 'B: Identifier') / 'C: Identifier')": 2,
    "('A: CallExpression' + 'B: Identifier')": 2,
    "('A: number' / 'B: Identifier')": 2,
    "('A: Identifier' > 'B: Identifier')": 2,
    "(('A: Identifier' - 'B: Identifier') > 'C: Identifier')": 2,
    "(('A: Identifier' + 1) % 'B: Identifier')": 2,
    "((typeof('A: Identifier') === \"object\") && ('B: Identifier' !== null))": 2,
    "('A: number' === 'B: Identifier')": 2,
    "(('A: MemberExpression' === 'B: Identifier') && ('C: Identifier' < 'D: Identifier'))": 2,
    "(('A: Identifier' === 'B: Identifier') && !('C: Identifier'))": 2,
    "('A: number' * ('B: number' * 'C: number'))": 2,
    "(1 / 'A: Identifier')": 2,
    "('A: string' in 'B: MemberExpression')": 2,
    "('A: Identifier' <= 'B: number')": 2,
    "(('A: Identifier' * 'B: Identifier') / 'C: Identifier')": 2,
    "((('A: Identifier' + 'B: Identifier') / 'C: Identifier') / 'D: Identifier')": 2,
    "(('A: Identifier' + 'B: Identifier') / 'C: Identifier')": 2,
    "('A: CallExpression' < 'B: number')": 2,
    "('A: Identifier' && ('B: MemberExpression' > 'C: number'))": 1,
    "('A: MemberExpression' > 'B: number')": 1,
    "('A: Identifier' ? 'B: ArrayExpression' : 'C: Identifier')": 1,
    "((('A: UnaryExpression' === 'object') && ('B: UnaryExpression' !== 'undefined')) ? 'C: AssignmentExpression' : (('D: BinaryExpression' && 'E: MemberExpression') ? 'F: CallExpression' : 'G: SequenceExpression'))": 1,
    "((typeof('A: Identifier') === 'object') && (typeof('B: Identifier') !== 'undefined'))": 1,
    "((('A: UnaryExpression' === 'function') && 'B: MemberExpression') ? 'C: CallExpression' : 'D: SequenceExpression')": 1,
    "((typeof('A: Identifier') === 'function') && 'B: MemberExpression')": 1,
    "((typeof('A: Identifier') !== 'undefined') ? 'B: Identifier' : ('C: Identifier' || 'D: Identifier'))": 1,
    "((('A: UnaryExpression' == \"object\") && (\"undefined\" != 'B: UnaryExpression')) ? 'C: AssignmentExpression' : (('D: BinaryExpression' && 'E: MemberExpression') ? 'F: CallExpression' : 'G: AssignmentExpression'))": 1,
    "((typeof('A: Identifier') == \"object\") && (\"undefined\" != typeof('B: Identifier')))": 1,
    "((('A: UnaryExpression' == \"function\") && 'B: MemberExpression') ? 'C: CallExpression' : 'D: AssignmentExpression')": 1,
    "((typeof('A: Identifier') == \"function\") && 'B: MemberExpression')": 1,
    "((\"undefined\" != typeof('A: Identifier')) ? 'B: Identifier' : ('C: Identifier' || 'D: Identifier'))": 1,
    "((('A: BinaryExpression' + 'B: string') + 'C: CallExpression') + 'D: string')": 1,
    "((('A: BinaryExpression' + 'B: string') + 'C: string') + 'D: CallExpression')": 1,
    "(('A: string' === 'B: Identifier') || ('C: string' === 'D: Identifier'))": 1,
    "('A: MemberExpression' || 'B: number')": 1,
    "(('A: string' === 'B: CallExpression') && ('C: Identifier' >= 'D: Identifier'))": 1,
    "('A: Identifier' >= 'B: Identifier')": 1,
    "(('A: CallExpression' && 'B: MemberExpression') && ('C: MemberExpression' === 'D: number'))": 1,
    "((('A: MemberExpression' || '') + 'B: string') + ('C: MemberExpression' || ''))": 1,
    "(('A: MemberExpression' || '') + 'B: string')": 1,
    "('A: MemberExpression' + ('B: MemberExpression' ? ('C: string' + 'D: MemberExpression') : ''))": 1,
    "(('A: MemberExpression' > -(1)) && ('B: MemberExpression' > 'C: MemberExpression'))": 1,
    "('A: MemberExpression' > 'B: MemberExpression')": 1,
    "+('A: CallExpression')": 1,
    "('A: Identifier' && ('B: Identifier' || 'C: Identifier'))": 1,
    "(!('A: Identifier') && 'B: MemberExpression')": 1,
    "((('A: BinaryExpression' + 'B: MemberExpression') + ('C: MemberExpression' ? 'D: BinaryExpression' : '')) + 'E: MemberExpression')": 1,
    "((('A: Identifier' + 'B: string') + 'C: MemberExpression') + ('D: MemberExpression' ? ('E: string' + 'F: MemberExpression') : ''))": 1,
    "(('A: Identifier' + 'B: string') + 'C: MemberExpression')": 1,
    "('A: Identifier' ? 'B: MemberExpression' : 'C: MemberExpression')": 1,
    "(('A: Identifier' && ('B: MemberExpression' === 0)) && 'C: MemberExpression')": 1,
    "('A: Identifier' && ('B: MemberExpression' === 0))": 1,
    "+('A: MemberExpression')": 1,
    "(('A: MemberExpression' > 1) ? 'B: CallExpression' : 'C: MemberExpression')": 1,
    "('A: MemberExpression' > 1)": 1,
    "(('A: MemberExpression' > -(1)) && ('B: Identifier' > 'C: MemberExpression'))": 1,
    "(('A: MemberExpression' === 1) ? 'B: MemberExpression' : 'C: CallExpression')": 1,
    "('A: MemberExpression' === 1)": 1,
    "(!('A: Identifier') && !('B: Identifier'))": 1,
    "('A: CallExpression' ? 'B: TemplateLiteral' : 'C: TemplateLiteral')": 1,
    "('A: MemberExpression' ? 'B: MemberExpression' : 'C: Identifier')": 1,
    "((('A: Identifier' && 'B: Identifier') && 'C: Identifier') ? (('D: Identifier' - 'E: Identifier') / 'F: Identifier') : 'G: Identifier')": 1,
    "(('A: Identifier' && 'B: Identifier') && 'C: Identifier')": 1,
    "((('A: MemberExpression' || 'B: CallExpression') && 'C: MemberExpression') && 'D: CallExpression')": 1,
    "(('A: Identifier' === 'B: Identifier') && 'C: CallExpression')": 1,
    "((('A: UnaryExpression' && 'B: BinaryExpression') && ('C: Identifier' !== 0)) && ('D: Identifier' !== ''))": 1,
    "((!('A: Identifier') && ('B: Identifier' !== false)) && ('C: Identifier' !== 0))": 1,
    "('A: Identifier' !== 0)": 1,
    "('A: Identifier' !== '')": 1,
    "(('A: MemberExpression' || 'B: MemberExpression') || 'C: string')": 1,
    "((false === 'A: Identifier') || (null == 'B: Identifier'))": 1,
    "('A: Identifier' || null)": 1,
    "(('A: Identifier' && ('B: Identifier' !== true)) && (('C: MemberExpression' === false) || (false === 'D: Identifier')))": 1,
    "('A: Identifier' && ('B: Identifier' !== true))": 1,
    "(('A: MemberExpression' === false) || (false === 'B: Identifier'))": 1,
    "('A: MemberExpression' === false)": 1,
    "!(!(('A: Identifier' && 'B: LogicalExpression')))": 1,
    "!(('A: Identifier' && ('B: UnaryExpression' || 'C: CallExpression')))": 1,
    "('A: MemberExpression' || null)": 1,
    "((null == 'A: Identifier') || (false === 'B: Identifier'))": 1,
    "(('A: Identifier' instanceof 'B: ThisExpression') ? 'C: Identifier' : 'D: NewExpression')": 1,
    "('A: Identifier' instanceof 'B: ThisExpression')": 1,
    "('A: Identifier' ? 'B: MemberExpression' : 'C: Identifier')": 1,
    "('A: CallExpression' || '')": 1,
    "('A: MemberExpression' * 'B: MemberExpression')": 1,
    "((('A: Identifier' && 'B: Identifier') && ('C: Identifier' <= 'D: Identifier')) ? (('E: Identifier' - 'F: Identifier') / 'G: Identifier') : 'H: Identifier')": 1,
    "(('A: Identifier' && 'B: Identifier') && ('C: Identifier' <= 'D: Identifier'))": 1,
    "(('A: MemberExpression' !== false) ? 'B: CallExpression' : 0)": 1,
    "(!('A: MemberExpression') || ('B: AssignmentExpression' >= 'C: Identifier'))": 1,
    "('A: AssignmentExpression' >= 'B: Identifier')": 1,
    "(('A: Identifier' < 0) ? -('B: Identifier') : 0)": 1,
    "('A: Identifier' < 0)": 1,
    "-('A: Identifier')": 1,
    "('A: Identifier' <= 0)": 1,
    "(('A: Identifier' && ('B: Identifier' > 'C: Identifier')) && (('D: Identifier' - 'E: Identifier') > 'F: Identifier'))": 1,
    "('A: Identifier' && ('B: Identifier' > 'C: Identifier'))": 1,
    "('A: Identifier' ? 'B: ArrowFunctionExpression' : 'C: Identifier')": 1,
    "((('A: BinaryExpression' + 'B: string') + ('C: Identifier' ? 'D: BinaryExpression' : '')) + 'E: string')": 1,
    "((('A: string' + 'B: Identifier') + 'C: string') + ('D: Identifier' ? ('E: BinaryExpression' + 'F: string') : ''))": 1,
    "('A: Identifier' ? (('B: string' + 'C: Identifier') + 'D: string') : '')": 1,
    "(('A: Identifier' && 'B: MemberExpression') || 'C: MemberExpression')": 1,
    "(('A: Identifier' === 'B: Identifier') && 'C: Identifier')": 1,
    "('A: MemberExpression' ? 'B: CallExpression' : 'C: Identifier')": 1,
    "('A: MemberExpression' + 1)": 1,
    "(!('A: Identifier') || ('B: MemberExpression' && 'C: MemberExpression'))": 1,
    "('A: Identifier' || 'B: number')": 1,
    "(('A: Identifier' !== 'B: Identifier') ? 'C: Identifier' : 'D: number')": 1,
    "('A: Identifier' % 'B: Identifier')": 1,
    "(('A: Identifier' - 'B: Identifier') < 'C: Identifier')": 1,
    "('A: Identifier' && ('B: Identifier' - 'C: Identifier'))": 1,
    "(('A: number' * 'B: Identifier') / 'C: Identifier')": 1,
    "('A: Identifier' || (('B: Identifier' - 'C: Identifier') > 'D: Identifier'))": 1,
    "('A: Identifier' - ('B: Identifier' - 'C: Identifier'))": 1,
    "((('A: UnaryExpression' !== 'undefined') && 'B: Identifier') || null)": 1,
    "((('A: LogicalExpression' && 'B: UnaryExpression') && 'C: CallExpression') && 'D: CallExpression')": 1,
    "((('A: LogicalExpression' && 'B: BinaryExpression') && !('C: CallExpression')) && 'D: CallExpression')": 1,
    "((true === 'A: Identifier') || (false === 'B: Identifier'))": 1,
    "('A: CallExpression' !== false)": 1,
    "('A: CallExpression' ? 'B: Identifier' : 'C: Identifier')": 1,
    "('A: Identifier' ? 'B: ArrayExpression' : 'C: ArrayExpression')": 1,
    "('A: MemberExpression' || 'B: ArrayExpression')": 1,
    "(('A: string' + 'B: NewExpression') + 'C: string')": 1,
    "('A: string' + 'B: NewExpression')": 1,
    "((typeof('A: Identifier') === \"function\") || (('B: UnaryExpression' === \"object\") && ('C: Identifier' !== null)))": 1,
    "((typeof('A: Identifier') !== \"undefined\") ? 'B: Identifier' : 'C: Identifier')": 1,
    "((typeof('A: Identifier') !== \"undefined\") && ('B: string' === 'C: CallExpression'))": 1,
    "((('A: UnaryExpression' !== \"undefined\") && ('B: UnaryExpression' !== \"undefined\")) && (typeof('C: Identifier') !== \"undefined\"))": 1,
    "((typeof('A: Identifier') !== \"undefined\") && (typeof('B: Identifier') !== \"undefined\"))": 1,
    "('A: UpdateExpression' % 'B: number')": 1,
    "(('A: Identifier' === 'B: Identifier') && (typeof('C: Identifier') === \"function\"))": 1,
    "('A: string' + ('B: MemberExpression' || 'C: string'))": 1,
    "('A: MemberExpression' || 'B: string')": 1,
    "('A: MemberExpression' !== 0)": 1,
    "((0 === 'A: Identifier') && 'B: MemberExpression')": 1,
    "(0 === 'A: Identifier')": 1,
    "('A: Identifier' < 'B: MemberExpression')": 1,
    "('A: MemberExpression' || 0)": 1,
    "(('A: MemberExpression' === 'B: Identifier') && ('C: MemberExpression' !== 'D: Identifier'))": 1,
    "(('A: Identifier' && ('B: UnaryExpression' === \"object\")) && ('C: MemberExpression' === 'D: Identifier'))": 1,
    "('A: Identifier' && (typeof('B: Identifier') === \"object\"))": 1,
    "!(('A: ThisExpression' instanceof 'B: Identifier'))": 1,
    "('A: ThisExpression' instanceof 'B: Identifier')": 1,
    "((('A: Identifier' === 'B: Identifier') && !('C: Identifier')) || (('D: Identifier' === 'E: Identifier') && !('F: Identifier')))": 1,
    "('A: Identifier' - 1)": 1,
    "(('A: Identifier' && ('B: string' === 'C: CallExpression')) && !('D: MemberExpression'))": 1,
    "('A: Identifier' && ('B: string' === 'C: CallExpression'))": 1,
    "((typeof('A: Identifier') === \"function\") && 'B: MemberExpression')": 1,
    "((typeof('A: Identifier') !== \"undefined\") && 'B: MemberExpression')": 1,
    "(typeof('A: ThisExpression') !== \"undefined\")": 1,
    "typeof('A: ThisExpression')": 1,
    "('A: Identifier' * ('B: Identifier' * 'C: Identifier'))": 1,
    "('A: UpdateExpression' > 'B: Identifier')": 1,
    "((typeof('A: Identifier') === 'function') ? 'B: Identifier' : 'C: Identifier')": 1,
    "!(('A: Identifier' instanceof 'B: Identifier'))": 1,
    "('A: CallExpression' instanceof 'B: Identifier')": 1,
    "('A: MemberExpression' * 'B: Identifier')": 1,
    "('A: CallExpression' - ('B: number' * ('C: number' * 'D: BinaryExpression')))": 1,
    "('A: number' * ('B: number' * ('C: number' * 'D: number')))": 1,
    "((('A: string' + 'B: CallExpression') + 'C: string') + 'D: string')": 1,
    "('A: number' + 'B: number')": 1,
    "('A: Identifier' !== 'B: number')": 1,
    "('A: MemberExpression' * 'B: number')": 1,
    "('A: CallExpression' * 'B: CallExpression')": 1,
    "(('A: MemberExpression' + 'B: string') + 'C: CallExpression')": 1,
    "(1 + (1 / 'A: Identifier'))": 1,
    "((('A: Identifier' - 'B: Identifier') > 0) ? ('C: Identifier' < ('D: Identifier' * 'E: Identifier')) : ('F: Identifier' > ('G: Identifier' * 'H: Identifier')))": 1,
    "(('A: Identifier' - 'B: Identifier') > 0)": 1,
    "('A: Identifier' < ('B: Identifier' * 'C: Identifier'))": 1,
    "('A: Identifier' > ('B: Identifier' * 'C: Identifier'))": 1,
    "(('A: Identifier' > 'B: Identifier') ? 'C: Identifier' : 'D: Identifier')": 1,
    "('A: CallExpression' !== 'B: string')": 1,
    "('A: Identifier' instanceof 'B: MemberExpression')": 1,
    "('A: MemberExpression' === (('B: string' + 'C: Identifier') + 'D: string'))": 1
}