Found 202 patterns and 110 unique patterns, 0 files could not be parsed:
{
    "('A: string' === 'B: Identifier')": 11,
    "-(1)": 7,
    "('A: MemberExpression' === 'B: string')": 7,
    "('A: string' in 'B: Identifier')": 7,
    "('A: Identifier' + 'B: Identifier')": 6,
    "('A: string' + 'B: CallExpression')": 5,
    "('A: Identifier' === 'B: Identifier')": 5,
    "('A: Identifier' / 'B: number')": 5,
    "(('A: string' + 'B: CallExpression') + 'C: string')": 4,
    "!('A: Identifier')": 4,
    "('A: Identifier' !== -(1))": 4,
    "('A: Identifier' >= 'B: number')": 4,
    "('A: Identifier' % 'B: number')": 3,
    "('A: CallExpression' + 'B: string')": 3,
    "('A: number' + 'B: Identifier')": 3,
    "('A: Identifier' < 'B: number')": 3,
    "('A: Identifier' - 'B: number')": 3,
    "('A: number' * 'B: CallExpression')": 3,
    "('A: number' * ('B: Identifier' / 'C: number'))": 3,
    "(0 === 'A: Identifier')": 3,
    "(('A: CallExpression' || 'B: CallExpression') || 'C: CallExpression')": 3,
    "('A: CallExpression' || 'B: CallExpression')": 3,
    "('A: CallExpression' >= 'B: number')": 3,
    "('A: MemberExpression' === 0)": 2,
    "((('A: LogicalExpression' || 'B: BinaryExpression') || ('C: string' === 'D: Identifier')) || ('E: string' === 'F: Identifier'))": 2,
    "('A: Identifier' ? 'B: MemberExpression' : 0)": 2,
    "('A: MemberExpression' === 1)": 2,
    "('A: Identifier' !== 'B: Identifier')": 2,
    "(-(1) === 'A: Identifier')": 2,
    "('A: CallExpression' + 'B: Identifier')": 2,
    "('A: Identifier' - 1)": 2,
    "(('A: Identifier' >> 'B: number') & 'C: number')": 2,
    "('A: Identifier' >> 'B: number')": 2,
    "('A: CallExpression' / 'B: number')": 2,
    "((('A: CallExpression' || 'B: CallExpression') || 'C: CallExpression') || 'D: CallExpression')": 2,
    "('A: MemberExpression' || 'B: string')": 2,
    "(!('A: Identifier') || ('B: MemberExpression' === 0))": 1,
    "('A: number' / 'B: MemberExpression')": 1,
    "(('A: Identifier' + 'B: Identifier') % 'C: number')": 1,
    "('A: Identifier' < ('B: number' * 'C: number'))": 1,
    "('A: number' * 'B: number')": 1,
    "((('A: LogicalExpression' || 'B: BinaryExpression') || ('C: string' === 'D: Identifier')) || 'E: CallExpression')": 1,
    "((('A: BinaryExpression' || 'B: BinaryExpression') || ('C: string' === 'D: Identifier')) || ('E: string' === 'F: Identifier'))": 1,
    "((('A: string' === 'B: Identifier') || ('C: string' === 'D: Identifier')) || ('E: string' === 'F: Identifier'))": 1,
    "(('A: string' === 'B: Identifier') || ('C: string' === 'D: Identifier'))": 1,
    "('A: MemberExpression' && !(('B: LogicalExpression' && 'C: BinaryExpression')))": 1,
    "!((('A: CallExpression' && 'B: BinaryExpression') && ('C: MemberExpression' <= 'D: number')))": 1,
    "(('A: CallExpression' && ('B: MemberExpression' >= 0)) && ('C: MemberExpression' <= 'D: number'))": 1,
    "('A: CallExpression' && ('B: MemberExpression' >= 0))": 1,
    "('A: MemberExpression' >= 0)": 1,
    "('A: MemberExpression' <= 'B: number')": 1,
    "(('A: MemberExpression' === 'B: Identifier') ? 'C: Identifier' : 'D: MemberExpression')": 1,
    "('A: MemberExpression' === 'B: Identifier')": 1,
    "(('A: string' + 'B: CallExpression') + 'C: CallExpression')": 1,
    "('A: MemberExpression' + 'B: Identifier')": 1,
    "('A: Identifier' + 'B: MemberExpression')": 1,
    "(('A: MemberExpression' === 1) ? ('' + 'B: MemberExpression') : 'C: CallExpression')": 1,
    "('' + 'A: MemberExpression')": 1,
    "(('A: MemberExpression' <= 0) || !('B: Identifier'))": 1,
    "('A: MemberExpression' <= 0)": 1,
    "('A: MemberExpression' ? '' : 'B: Identifier')": 1,
    "(('A: Identifier' + 'B: Identifier') + 'C: Identifier')": 1,
    "(('A: CallExpression' + 'B: Identifier') + 'C: Identifier')": 1,
    "((('A: CallExpression' + 'B: Identifier') + ('C: Identifier' ? 'D: string' : 'E: string')) + 'F: Identifier')": 1,
    "(('A: CallExpression' + 'B: Identifier') + ('C: Identifier' ? 'D: string' : 'E: string'))": 1,
    "('A: Identifier' ? ('B: Identifier' - 1) : 'C: Identifier')": 1,
    "('A: Identifier' ? 'B: string' : 'C: string')": 1,
    "('A: Identifier' + 1)": 1,
    "(('A: Identifier' === 'B: Identifier') && ('C: Identifier' === 'D: Identifier'))": 1,
    "('A: Identifier' > 'B: number')": 1,
    "('A: CallExpression' + 'B: number')": 1,
    "('A: number' * (('B: Identifier' - 'C: number') / 'D: number'))": 1,
    "(('A: Identifier' - 'B: number') / 'C: number')": 1,
    "((('A: number' + 'B: BinaryExpression') + ('C: number' * 'D: CallExpression')) + 'E: CallExpression')": 1,
    "(('A: number' + ('B: number' * 'C: CallExpression')) + ('D: number' * 'E: CallExpression'))": 1,
    "('A: number' + ('B: number' * 'C: CallExpression'))": 1,
    "('A: MemberExpression' === 'B: number')": 1,
    "('A: Identifier' & 'B: number')": 1,
    "('A: number' + ('B: Identifier' - 'C: number'))": 1,
    "((('A: number' * 'B: BinaryExpression') + 'C: number') / 'D: number')": 1,
    "(('A: number' * ('B: Identifier' - 'C: number')) + 'D: number')": 1,
    "('A: number' * ('B: Identifier' - 'C: number'))": 1,
    "(('A: Identifier' % 'B: number') / 'C: number')": 1,
    "('A: number' + (('B: BinaryExpression' | 'C: BinaryExpression') | 'D: CallExpression'))": 1,
    "((('A: CallExpression' << 'B: number') | ('C: CallExpression' << 1)) | 'D: CallExpression')": 1,
    "(('A: CallExpression' << 'B: number') | ('C: CallExpression' << 1))": 1,
    "('A: CallExpression' << 'B: number')": 1,
    "('A: CallExpression' << 1)": 1,
    "('A: number' === 'B: Identifier')": 1,
    "('A: MemberExpression' ? 'B: CallExpression' : 'C: CallExpression')": 1,
    "('A: Identifier' ? 'B: ObjectExpression' : false)": 1,
    "('A: CallExpression' ? '' : (('B: MemberExpression' === 1) ? 'C: string' : 'D: string'))": 1,
    "(('A: MemberExpression' === 1) ? 'B: string' : 'C: string')": 1,
    "(('A: Identifier' !== -(1)) && (('B: UnaryExpression' === 'C: Identifier') || ('D: Identifier' < 'E: Identifier')))": 1,
    "((-(1) === 'A: Identifier') || ('B: Identifier' < 'C: Identifier'))": 1,
    "('A: Identifier' < 'B: Identifier')": 1,
    "(('A: MemberExpression' === 0) ? 1 : 'B: CallExpression')": 1,
    "('A: Identifier' ? 'B: Identifier' : 'C: Identifier')": 1,
    "(('A: Identifier' && !('B: Identifier')) && ('C: Identifier' === 'D: Identifier'))": 1,
    "('A: Identifier' && !('B: Identifier'))": 1,
    "('A: Identifier' || 0)": 1,
    "(('A: CallExpression' >= 'B: number') && ('C: CallExpression' >= 'D: number'))": 1,
    "(('A: CallExpression' >= 'B: number') ? 'C: number' : 'D: number')": 1,
    "('A: CallExpression' || ('B: MemberExpression' === 'C: string'))": 1,
    "('A: Identifier' in 'B: Identifier')": 1,
    "('A: CallExpression' ? 1 : 0)": 1,
    "(('A: string' in 'B: Identifier') && ('C: string' in 'D: Identifier'))": 1,
    "('A: MemberExpression' || '')": 1,
    "(('A: Identifier' >= 'B: number') ? 'C: number' : 'D: number')": 1,
    "('A: Identifier' && 'B: MemberExpression')": 1
}