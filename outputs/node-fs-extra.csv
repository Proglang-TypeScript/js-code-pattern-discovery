Found 676 patterns and 120 unique patterns, 0 files could not be parsed:
{
    "!('A: CallExpression')": 82,
    "('A: string' === 'B: Identifier')": 56,
    "('A: MemberExpression' === 'B: string')": 53,
    "!('A: Identifier')": 35,
    "('A: CallExpression' + 'B: string')": 28,
    "('A: Identifier' > 'B: number')": 25,
    "typeof('A: Identifier')": 23,
    "('A: CallExpression' >= 0)": 20,
    "(typeof('A: Identifier') === 'function')": 17,
    "('A: Identifier' < 'B: Identifier')": 16,
    "('A: MemberExpression' & 'B: number')": 14,
    "typeof('A: MemberExpression')": 12,
    "(('A: string' === 'B: Identifier') || ('C: string' === 'D: Identifier'))": 12,
    "('A: CallExpression' * 'B: CallExpression')": 12,
    "('A: Identifier' && 'B: CallExpression')": 11,
    "('A: CallExpression' !== 'B: string')": 8,
    "('A: Identifier' instanceof 'B: Identifier')": 8,
    "(0 === 'A: CallExpression')": 8,
    "-(1)": 6,
    "('A: MemberExpression' !== 'B: string')": 6,
    "(0 === 'A: Identifier')": 5,
    "('A: Identifier' || 'B: ObjectExpression')": 5,
    "!('A: MemberExpression')": 5,
    "(('A: MemberExpression' === 'B: string') || ('C: MemberExpression' === 'D: string'))": 5,
    "(typeof('A: MemberExpression') === 'function')": 5,
    "(('A: string' + 'B: CallExpression') + 'C: CallExpression')": 5,
    "('A: string' + 'B: CallExpression')": 5,
    "('A: MemberExpression' === 'B: Identifier')": 5,
    "('A: MemberExpression' - 'B: Identifier')": 4,
    "('A: MemberExpression' === 'B: MemberExpression')": 4,
    "('A: string' in 'B: Identifier')": 4,
    "!(!('A: MemberExpression'))": 4,
    "('A: CallExpression' && 'B: CallExpression')": 4,
    "('A: Identifier' && ('B: MemberExpression' === 'C: string'))": 4,
    "('A: Identifier' + 'B: string')": 4,
    "('A: MemberExpression' || 'B: MemberExpression')": 4,
    "('A: CallExpression' + '')": 4,
    "(('A: number' * ('B: number' * 'C: number')) + 'D: number')": 3,
    "('A: number' * ('B: number' * 'C: number'))": 3,
    "('A: number' * 'B: number')": 3,
    "delete('A: MemberExpression')": 3,
    "('A: Identifier' < 'B: number')": 3,
    "('A: UpdateExpression' === 0)": 3,
    "((('A: MemberExpression' === 'B: string') || ('C: MemberExpression' === 'D: string')) || ('E: MemberExpression' === 'F: string'))": 3,
    "(('A: MemberExpression' === 'B: string') ? 'C: MemberExpression' : 'D: Identifier')": 2,
    "(('A: CallExpression' / 'B: number') - 'C: number')": 2,
    "('A: CallExpression' / 'B: number')": 2,
    "('A: Identifier' + 'B: Identifier')": 2,
    "('A: CallExpression' ? 'B: number' : 'C: number')": 2,
    "(('A: MemberExpression' === 'B: CallExpression') ? 'C: number' : 'D: number')": 2,
    "('A: MemberExpression' === 'B: CallExpression')": 2,
    "(('A: CallExpression' !== 'B: string') && !('C: CallExpression'))": 2,
    "('A: Identifier' > 1)": 2,
    "!(~('A: CallExpression'))": 2,
    "~('A: CallExpression')": 2,
    "('A: CallExpression' < 'B: Identifier')": 2,
    "(('A: CallExpression' !== 'B: string') && ('C: CallExpression' > 'D: Identifier'))": 2,
    "('A: CallExpression' > 'B: Identifier')": 2,
    "(('A: string' in 'B: Identifier') ? !(!('C: MemberExpression')) : true)": 2,
    "(('A: string' in 'B: Identifier') ? !(!('C: MemberExpression')) : 'D: MemberExpression')": 2,
    "('A: MemberExpression' && ('B: MemberExpression' === 'C: string'))": 2,
    "('A: string' + 'B: string')": 2,
    "('A: MemberExpression' && !('B: CallExpression'))": 2,
    "('A: MemberExpression' ? 'B: MemberExpression' : 'C: MemberExpression')": 2,
    "(('A: CallExpression' || 'B: CallExpression') || 'C: CallExpression')": 2,
    "('A: CallExpression' || 'B: CallExpression')": 2,
    "(0 === ('A: Identifier' & 'B: number'))": 2,
    "('A: Identifier' & 'B: number')": 2,
    "('A: Identifier' | 'B: number')": 2,
    "(!('A: Identifier') && 'B: CallExpression')": 2,
    "((typeof('A: Identifier') === 'function') ? 'B: Identifier' : 'C: Identifier')": 2,
    "((typeof('A: Identifier') === 'function') ? false : 'B: Identifier')": 2,
    "(('A: Identifier' && 'B: CallExpression') ? 'C: string' : 'D: string')": 2,
    "('A: CallExpression' ? 'B: Identifier' : 'C: MemberExpression')": 2,
    "('A: Identifier' / 'B: number')": 2,
    "('A: MemberExpression' - 1)": 2,
    "(('A: string' === 'B: Identifier') ? 'C: string' : 'D: Identifier')": 2,
    "('A: Identifier' && ('B: MemberExpression' & 'C: number'))": 2,
    "('A: CallExpression' * (1 << 'B: number'))": 2,
    "(1 << 'A: number')": 2,
    "(('A: UpdateExpression' === 0) ? 'B: CallExpression' : 'C: Identifier')": 2,
    "(('A: MemberExpression' === 'B: string') ? 'C: Identifier' : 'D: MemberExpression')": 2,
    "('A: Identifier' ? 'B: MemberExpression' : 'C: Identifier')": 2,
    "(('A: MemberExpression' || 'B: MemberExpression') || false)": 2,
    "('A: Identifier' ? 'B: CallExpression' : 'C: CallExpression')": 2,
    "(('A: MemberExpression' === 'B: string') ? null : 'C: Identifier')": 2,
    "('A: MemberExpression' ? 'B: ArrowFunctionExpression' : 'C: ArrowFunctionExpression')": 2,
    "((('A: string' === 'B: Identifier') && ('C: Identifier' !== 'D: Identifier')) && ('E: CallExpression' === 'F: CallExpression'))": 2,
    "(('A: string' === 'B: Identifier') && ('C: Identifier' !== 'D: Identifier'))": 2,
    "('A: Identifier' !== 'B: Identifier')": 2,
    "('A: CallExpression' === 'B: CallExpression')": 2,
    "('A: CallExpression' && !('B: CallExpression'))": 2,
    "(!('A: CallExpression') && 'B: CallExpression')": 2,
    "(('A: Identifier' === 'B: Identifier') || ('C: MemberExpression' === 'D: Identifier'))": 2,
    "('A: Identifier' === 'B: Identifier')": 2,
    "((0 === 'A: CallExpression') || ('B: MemberExpression' === 0))": 1,
    "('A: MemberExpression' === 0)": 1,
    "('A: string' === 'B: CallExpression')": 1,
    "('A: Identifier' > 0)": 1,
    "((typeof('A: Identifier') === 'function') && !('B: Identifier'))": 1,
    "('A: Identifier' || 'B: FunctionExpression')": 1,
    "(typeof('A: Identifier') === 'number')": 1,
    "(!('A: Identifier') && 'B: Identifier')": 1,
    "('A: MemberExpression' || 'B: number')": 1,
    "((('A: BinaryExpression' || 'B: BinaryExpression') || ('C: MemberExpression' === 'D: string')) && ('E: Identifier' < 'F: MemberExpression'))": 1,
    "('A: Identifier' < 'B: MemberExpression')": 1,
    "('A: number' * 'B: Identifier')": 1,
    "(('A: Identifier' && ('B: MemberExpression' === 'C: string')) && 'D: Identifier')": 1,
    "('A: Identifier' && (('B: BinaryExpression' || 'C: BinaryExpression') || ('D: MemberExpression' === 'E: string')))": 1,
    "(('A: MemberExpression' === 'B: string') && 'C: Identifier')": 1,
    "(('A: CallExpression' - 'B: Identifier') < 'C: number')": 1,
    "('A: CallExpression' - 'B: Identifier')": 1,
    "('A: MemberExpression' > 'B: number')": 1,
    "((('A: MemberExpression' && 'B: MemberExpression') && ('C: MemberExpression' === 'D: MemberExpression')) && ('E: MemberExpression' === 'F: MemberExpression'))": 1,
    "(('A: MemberExpression' && 'B: MemberExpression') && ('C: MemberExpression' === 'D: MemberExpression'))": 1,
    "('A: MemberExpression' && 'B: MemberExpression')": 1,
    "('A: Identifier' && ('B: MemberExpression' === 'C: Identifier'))": 1,
    "('A: Identifier' || 'B: Identifier')": 1,
    "('A: CallExpression' !== ('B: MemberExpression' - 'C: MemberExpression'))": 1,
    "('A: MemberExpression' - 'B: MemberExpression')": 1
}