Found 13105 patterns and 1035 unique patterns, 1035 files could not be parsed:
{
    "('A: MemberExpression' === 'B: number')": 995,
    "typeof('A: Identifier')": 693,
    "('A: number' === 'B: Identifier')": 495,
    "('A: string' + 'B: string')": 467,
    "('A: string' === 'B: Identifier')": 313,
    "('A: MemberExpression' === 'B: string')": 294,
    "!('A: Identifier')": 243,
    "('A: MemberExpression' === 'B: Identifier')": 208,
    "(null === 'A: Identifier')": 186,
    "('A: Identifier' && 'B: MemberExpression')": 180,
    "void(0)": 171,
    "('A: Identifier' === 'B: Identifier')": 166,
    "(typeof('A: Identifier') !== \"function\")": 156,
    "(('A: string' + 'B: string') + 'C: string')": 153,
    "!('A: CallExpression')": 151,
    "('A: string' + 'B: Identifier')": 136,
    "('A: Identifier' - 'B: Identifier')": 135,
    "('A: Identifier' !== 'B: Identifier')": 128,
    "-(1)": 127,
    "('A: MemberExpression' || 'B: MemberExpression')": 127,
    "('A: Identifier' - 1)": 126,
    "('A: Identifier' + 'B: string')": 120,
    "typeof('A: MemberExpression')": 119,
    "('A: Identifier' + 'B: Identifier')": 116,
    "('A: Identifier' + 1)": 114,
    "!('A: MemberExpression')": 106,
    "('A: Identifier' < 'B: MemberExpression')": 102,
    "(typeof('A: Identifier') === 'function')": 99,
    "('A: Identifier' && 'B: CallExpression')": 96,
    "('A: MemberExpression' && 'B: MemberExpression')": 93,
    "('A: MemberExpression' !== 'B: string')": 85,
    "('A: Identifier' !== null)": 81,
    "('A: Identifier' ? 'B: CallExpression' : null)": 81,
    "('A: Identifier' && ('B: MemberExpression' || 'C: MemberExpression'))": 79,
    "((null === 'A: Identifier') || (('B: UnaryExpression' !== \"object\") && ('C: UnaryExpression' !== \"function\")))": 78,
    "((typeof('A: Identifier') !== \"object\") && (typeof('B: Identifier') !== \"function\"))": 78,
    "(typeof('A: Identifier') !== \"object\")": 78,
    "((('A: string' + 'B: string') + 'C: string') + 'D: string')": 77,
    "(('A: string' + 'B: Identifier') + 'C: string')": 75,
    "((('A: BinaryExpression' + 'B: string') + 'C: string') + 'D: string')": 74,
    "('A: Identifier' * 'B: Identifier')": 72,
    "('A: Identifier' < 'B: Identifier')": 71,
    "('A: TemplateLiteral' + 'B: TemplateLiteral')": 70,
    "(typeof('A: Identifier') === 'object')": 69,
    "(typeof('A: Identifier') === 'string')": 64,
    "('A: Identifier' ? 'B: Identifier' : 'C: Identifier')": 62,
    "(null == 'A: Identifier')": 58,
    "('A: Identifier' || 'B: Identifier')": 58,
    "(('A: Identifier' + 'B: string') + 'C: Identifier')": 54,
    "('A: Identifier' != null)": 53,
    "('A: string' + 'B: CallExpression')": 53,
    "(('A: string' === 'B: Identifier') || ('C: string' === 'D: Identifier'))": 53,
    "('A: MemberExpression' !== 'B: Identifier')": 52,
    "('A: MemberExpression' > 0)": 51,
    "('A: Identifier' !== 'B: string')": 50,
    "(void(0) === 'A: Identifier')": 49,
    "('A: Identifier' <= 'B: Identifier')": 49,
    "('A: MemberExpression' === 0)": 47,
    "('A: Identifier' > 0)": 45,
    "(('A: TemplateLiteral' + 'B: TemplateLiteral') + 'C: TemplateLiteral')": 45,
    "!(0)": 44,
    "('A: Identifier' && 'B: Identifier')": 39,
    "('A: Identifier' > 'B: Identifier')": 38,
    "('A: Identifier' / 'B: number')": 37,
    "(0 === 'A: Identifier')": 37,
    "('A: MemberExpression' === 'B: MemberExpression')": 37,
    "('A: MemberExpression' < 'B: Identifier')": 37,
    "('A: Identifier' >= 'B: Identifier')": 37,
    "('A: Identifier' !== '')": 36,
    "('A: Identifier' ? 'B: string' : 'C: string')": 35,
    "('A: Identifier' || 'B: string')": 34,
    "!(1)": 34,
    "('A: MemberExpression' + 'B: MemberExpression')": 33,
    "((('A: LogicalExpression' || 'B: BinaryExpression') || ('C: MemberExpression' === 'D: Identifier')) || ('E: MemberExpression' === 'F: Identifier'))": 32,
    "((typeof('A: Identifier') === 'object') && ('B: Identifier' !== null))": 31,
    "((('A: TemplateLiteral' + 'B: TemplateLiteral') + 'C: TemplateLiteral') + 'D: TemplateLiteral')": 30,
    "('A: CallExpression' !== -(1))": 30,
    "-('A: Identifier')": 30,
    "(typeof('A: Identifier') !== 'object')": 29,
    "delete('A: MemberExpression')": 29,
    "(('A: Identifier' - 'B: Identifier') / 'C: number')": 29,
    "('A: Identifier' >= 0)": 28,
    "(('A: MemberExpression' < 'B: Identifier') ? 'C: string' : 'D: string')": 28,
    "((('A: LogicalExpression' || 'B: BinaryExpression') || ('C: Identifier' === 'D: Identifier')) || ('E: Identifier' === 'F: Identifier'))": 26,
    "('A: MemberExpression' != null)": 26,
    "('A: MemberExpression' !== 'B: MemberExpression')": 26,
    "(('A: Identifier' && 'B: MemberExpression') ? 'C: Identifier' : 'D: ObjectExpression')": 26,
    "('A: TemplateLiteral' + 'B: string')": 25,
    "((('A: BinaryExpression' + 'B: string') + 'C: Identifier') + 'D: string')": 25,
    "(typeof('A: Identifier') === 'number')": 25,
    "(typeof('A: MemberExpression') === 'function')": 25,
    "-('A: number')": 25,
    "(('A: Identifier' * 'B: Identifier') - 'C: Identifier')": 24,
    "(('A: string' + 'B: string') + (('C: string' + 'D: ConditionalExpression') + 'E: string'))": 24,
    "(('A: string' + ('B: BinaryExpression' ? 'null' : 'C: UnaryExpression')) + 'D: string')": 24,
    "('A: string' + ((null === 'B: Identifier') ? 'null' : typeof('C: Identifier')))": 24,
    "((null === 'A: Identifier') ? 'null' : typeof('B: Identifier'))": 24,
    "('' + 'A: Identifier')": 23,
    "(('A: string' + 'B: CallExpression') + 'C: string')": 22,
    "(('A: MemberExpression' === 'B: string') || ('C: MemberExpression' === 'D: string'))": 22,
    "('A: Identifier' + 'B: CallExpression')": 22,
    "(typeof('A: MemberExpression') === 'string')": 21,
    "((('A: BinaryExpression' + 'B: Identifier') + 'C: string') + 'D: Identifier')": 21,
    "('A: CallExpression' || 'B: CallExpression')": 20,
    "('A: Identifier' instanceof 'B: Identifier')": 20,
    "('A: CallExpression' && !('B: CallExpression'))": 20,
    "('A: MemberExpression' !== null)": 20,
    "(('A: Identifier' >= ('B: Identifier' - 'C: Identifier')) && ('D: Identifier' <= ('E: Identifier' + 'F: Identifier')))": 20,
    "('A: Identifier' >= ('B: Identifier' - 'C: Identifier'))": 20,
    "('A: Identifier' <= ('B: Identifier' + 'C: Identifier'))": 20,
    "('A: Identifier' + (('B: Identifier' - 'C: Identifier') / 'D: number'))": 20,
    "(('A: Identifier' >= 'B: Identifier') && ('C: Identifier' <= 'D: Identifier'))": 20,
    "('A: MemberExpression' || 'B: string')": 19,
    "('A: Identifier' !== 'B: MemberExpression')": 19,
    "((typeof('A: Identifier') === 'function') && 'B: MemberExpression')": 19,
    "('A: MemberExpression' === 1)": 18,
    "('A: MemberExpression' + 'B: string')": 18,
    "((('A: Identifier' + 'B: string') + 'C: Identifier') + 'D: string')": 18,
    "(('A: MemberExpression' === 'B: Identifier') || ('C: MemberExpression' === 'D: Identifier'))": 18,
    "((void(0) === 'A: Identifier') && 'B: AssignmentExpression')": 18,
    "(typeof('A: Identifier') !== 'number')": 18,
    "('A: Identifier' && !('B: CallExpression'))": 16,
    "(('A: Identifier' !== 'B: string') && ('C: Identifier' !== 'D: string'))": 16,
    "(void(0) !== 'A: Identifier')": 16,
    "((('A: BinaryExpression' + 'B: TemplateLiteral') + 'C: TemplateLiteral') + 'D: TemplateLiteral')": 16,
    "('' === 'A: Identifier')": 16,
    "(('A: Identifier' - 'B: Identifier') - 'C: Identifier')": 16,
    "(('A: Identifier' || 'B: Identifier') || 'C: string')": 16,
    "((('A: string' + 'B: Identifier') + 'C: string') + 'D: Identifier')": 15,
    "('A: CallExpression' + 'B: string')": 15,
    "(typeof('A: MemberExpression') === 'number')": 15,
    "(('A: TemplateLiteral' + 'B: string') + 'C: string')": 15,
    "((('A: Identifier' + 'B: Identifier') + 'C: Identifier') + 'D: Identifier')": 15,
    "(('A: Identifier' + 'B: Identifier') + 'C: Identifier')": 15,
    "('A: Identifier' / 'B: Identifier')": 15,
    "('A: string' + 'B: MemberExpression')": 14,
    "('A: MemberExpression' - 1)": 14,
    "('' + 'A: MemberExpression')": 14,
    "('A: Identifier' < 'B: CallExpression')": 14,
    "(typeof('A: Identifier') !== 'undefined')": 14,
    "('A: CallExpression' || 'B: string')": 13,
    "('A: Identifier' < 0)": 13,
    "((('A: string' + 'B: string') + 'C: TemplateLiteral') + 'D: TemplateLiteral')": 13,
    "(('A: string' + 'B: string') + 'C: TemplateLiteral')": 13,
    "(('A: MemberExpression' === 'B: string') && ('C: MemberExpression' === 'D: string'))": 13,
    "('A: MemberExpression' * 'B: Identifier')": 13,
    "('A: Identifier' + 'B: number')": 13,
    "(0 === 'A: CallExpression')": 12,
    "('A: CallExpression' === -(1))": 12,
    "('A: Identifier' > 1)": 12,
    "((void(0) !== 'A: Identifier') && 'B: AssignmentExpression')": 12,
    "('A: MemberExpression' !== 0)": 12,
    "(('A: Identifier' && ('B: string' !== 'C: Identifier')) ? 1 : 'D: CallExpression')": 12,
    "('A: Identifier' && ('B: string' !== 'C: Identifier'))": 12,
    "('A: string' !== 'B: Identifier')": 12,
    "(('A: string' + ('B: BinaryExpression' ? \"null\" : 'C: UnaryExpression')) + 'D: string')": 12,
    "('A: string' + ((null === 'B: Identifier') ? \"null\" : typeof('C: Identifier')))": 12,
    "((null === 'A: Identifier') ? \"null\" : typeof('B: Identifier'))": 12,
    "(('A: Identifier' - 'B: Identifier') - 1)": 12,
    "(('A: Identifier' < ('B: Identifier' - 1)) && ('C: Identifier' < 'D: Identifier'))": 12,
    "('A: Identifier' < ('B: Identifier' - 1))": 12,
    "((('A: Identifier' * 'B: Identifier') - 'C: Identifier') + 'D: Identifier')": 12,
    "('A: Identifier' > ('B: Identifier' + 'C: CallExpression'))": 12,
    "((('A: Identifier' + 'B: Identifier') - 'C: Identifier') / 'D: Identifier')": 12,
    "(('A: Identifier' + 'B: Identifier') - 'C: Identifier')": 12,
    "(('A: Identifier' + 'B: Identifier') - 1)": 12,
    "((!('A: Identifier') || ('B: string' === 'C: Identifier')) ? 'D: CallExpression' : 1)": 12,
    "(!('A: Identifier') || ('B: string' === 'C: Identifier'))": 12,
    "((('A: LogicalExpression' || 'B: BinaryExpression') || ('C: string' === 'D: Identifier')) || ('E: string' === 'F: Identifier'))": 12,
    "((null === 'A: Identifier') || (typeof('B: Identifier') !== 'object'))": 11,
    "(typeof('A: MemberExpression') !== 'function')": 11,
    "((typeof('A: Identifier') === 'function') ? (('B: MemberExpression' || 'C: MemberExpression') || 'D: string') : 'E: Identifier')": 11,
    "(('A: MemberExpression' || 'B: MemberExpression') || 'C: string')": 11,
    "((null === 'A: Identifier') || ('B: Identifier' === 'C: Identifier'))": 11,
    "(('A: Identifier' === 'B: Identifier') || (('C: BinaryExpression' && 'D: BinaryExpression') && ('E: MemberExpression' === 0)))": 11,
    "((('A: UnaryExpression' === 'object') && ('B: Identifier' !== null)) && ('C: MemberExpression' === 0))": 11,
    "(('A: Identifier' !== 'B: Identifier') && ('C: MemberExpression' === 'D: Identifier'))": 11,
    "('A: MemberExpression' - 'B: Identifier')": 11,
    "(typeof('A: Identifier') == \"number\")": 11,
    "(('A: string' + 'B: string') + 'C: Identifier')": 10,
    "('A: number' * 'B: number')": 10,
    "!(('A: Identifier' instanceof 'B: Identifier'))": 10,
    "((('A: UnaryExpression' === 'object') && ('B: Identifier' !== null)) && ('C: MemberExpression' === 'D: Identifier'))": 10,
    "((typeof('A: Identifier') === 'string') ? 'B: Identifier' : ('C: MemberExpression' || 'D: MemberExpression'))": 10,
    "((!('A: MemberExpression') || 'B: MemberExpression') || ('C: MemberExpression' != null))": 10,
    "(!('A: MemberExpression') || 'B: MemberExpression')": 10,
    "(('A: Identifier' && 'B: MemberExpression') && ('C: MemberExpression' !== 'D: MemberExpression'))": 10,
    "(((null === 'A: Identifier') || ('B: Identifier' === 'C: Identifier')) || (typeof('D: Identifier') === 'string'))": 10,
    "((typeof('A: Identifier') === 'object') && (('B: MemberExpression' === 'C: Identifier') || ('D: MemberExpression' === 'E: Identifier')))": 10,
    "(('A: MemberExpression' !== 'B: Identifier') && !('C: Identifier'))": 10,
    "((typeof('A: MemberExpression') === 'function') && !('B: MemberExpression'))": 10,
    "(void(0) !== 'A: MemberExpression')": 10,
    "('A: CallExpression' || 'B: ThisExpression')": 10,
    "(typeof('A: Identifier') == \"function\")": 10,
    "(('A: string' === 'B: Identifier') && 'C: AssignmentExpression')": 10,
    "((('A: Identifier' >= 'B: BinaryExpression') && ('C: Identifier' <= 'D: BinaryExpression')) ? 'E: string' : 'F: string')": 10,
    "(('A: Identifier' < 'B: Identifier') ? 'C: Identifier' : 'D: Identifier')": 10,
    "('A: Identifier' ? 'B: string' : 'C: Identifier')": 10,
    "('A: MemberExpression' - 'B: MemberExpression')": 9,
    "('A: number' * 'B: Identifier')": 9,
    "((('A: BinaryExpression' || 'B: BinaryExpression') || ('C: Identifier' === 'D: Identifier')) || ('E: Identifier' === 'F: Identifier'))": 9,
    "((('A: BinaryExpression' + 'B: Identifier') + 'C: string') + 'D: string')": 9,
    "(('A: string' === 'B: Identifier') ? 'C: string' : 'D: string')": 9,
    "(('A: MemberExpression' === 'B: Identifier') && ('C: MemberExpression' === 'D: Identifier'))": 9,
    "(('A: Identifier' || 'B: Identifier') || 'C: Identifier')": 9,
    "(\"number\" != typeof('A: Identifier'))": 9,
    "('A: Identifier' ? 'B: Identifier' : 'C: string')": 9,
    "(('A: Identifier' !== 'B: Identifier') ? 'C: CallExpression' : 'D: Identifier')": 9,
    "(typeof('A: Identifier') !== 'function')": 9,
    "(-(1) === 'A: Identifier')": 8,
    "('A: MemberExpression' || 'B: number')": 8,
    "('A: MemberExpression' > 1)": 8,
    "(('A: MemberExpression' === 'B: string') ? 'C: string' : 'D: string')": 8,
    "(('A: Identifier' && 'B: MemberExpression') || 'C: MemberExpression')": 8,
    "(('A: Identifier' > 1) ? ('B: Identifier' - 1) : 0)": 8,
    "((typeof('A: Identifier') === 'string') || (typeof('B: Identifier') === 'function'))": 8,
    "((('A: LogicalExpression' || 'B: BinaryExpression') || ('C: Identifier' === 'D: Identifier')) || 'E: Identifier')": 8,
    "((('A: MemberExpression' === 'B: Identifier') || ('C: Identifier' === 'D: Identifier')) || ('E: Identifier' === 'F: Identifier'))": 8,
    "(('A: MemberExpression' === 'B: Identifier') || ('C: Identifier' === 'D: Identifier'))": 8,
    "((('A: BinaryExpression' || 'B: BinaryExpression') || ('C: MemberExpression' === 'D: Identifier')) || ('E: MemberExpression' === 'F: Identifier'))": 8,
    "((('A: MemberExpression' === 'B: Identifier') || ('C: MemberExpression' === 'D: Identifier')) || ('E: MemberExpression' === 'F: Identifier'))": 8,
    "((('A: BinaryExpression' + 'B: string') + 'C: MemberExpression') + 'D: string')": 8,
    "(('A: MemberExpression' || 'B: MemberExpression') || '')": 8,
    "('A: MemberExpression' || (('B: Identifier' !== '') ? ('C: BinaryExpression' + 'D: string') : 'E: Identifier'))": 8,
    "(('A: Identifier' !== '') ? (('B: BinaryExpression' + 'C: Identifier') + 'D: string') : 'E: Identifier')": 8,
    "(('A: MemberExpression' || 'B: MemberExpression') || null)": 8,
    "((('A: BinaryExpression' + 'B: UnaryExpression') + 'C: string') + 'D: string')": 8,
    "((('A: BinaryExpression' + 'B: string') + typeof('C: MemberExpression')) + 'D: string')": 8,
    "((('A: BinaryExpression' + 'B: string') + 'C: string') + typeof('D: MemberExpression'))": 8,
    "((('A: LogicalExpression' + 'B: string') + 'C: Identifier') + 'D: string')": 8,
    "((('A: Identifier' || 'B: string') + 'C: string') + 'D: Identifier')": 8,
    "(('A: Identifier' || 'B: string') + 'C: string')": 8,
    "('A: Identifier' && !(('B: Identifier' instanceof 'C: Identifier')))": 8,
    "(('A: Identifier' instanceof 'B: Identifier') && !(('C: MemberExpression' in 'D: Identifier')))": 8,
    "!(('A: MemberExpression' in 'B: Identifier'))": 8,
    "('A: MemberExpression' in 'B: Identifier')": 8,
    "(('A: string' + ('B: CallExpression' || 'C: string')) + 'D: string')": 8,
    "('A: string' + ('B: CallExpression' || 'C: string'))": 8,
    "((typeof('A: Identifier') === \"function\") && 'B: MemberExpression')": 8,
    "(typeof('A: Identifier') === \"function\")": 8,
    "((void(0) !== 'A: MemberExpression') && 'B: AssignmentExpression')": 8,
    "('A: CallExpression' != null)": 8,
    "('A: string' in 'B: Identifier')": 8,
    "(typeof('A: Identifier') == \"object\")": 8,
    "((null !== 'A: MemberExpression') && 'B: CallExpression')": 8,
    "(null !== 'A: MemberExpression')": 8,
    "(null != 'A: MemberExpression')": 8,
    "((typeof('A: Identifier') == \"number\") && 'B: AssignmentExpression')": 8,
    "((void(0) === 'A: Identifier') ? 'B: Identifier' : 'C: Identifier')": 8,
    "((('A: Identifier' || 'B: Identifier') || 'C: Identifier') || 1)": 8,
    "((0 === 'A: Identifier') || (0 === 'B: Identifier'))": 8,
    "(('A: Identifier' > 0) ? 'B: MemberExpression' : 0)": 8,
    "(('A: string' === 'B: Identifier') ? 'C: MemberExpression' : 'D: MemberExpression')": 8,
    "(('A: Identifier' < 'B: Identifier') && ('C: MemberExpression' < 'D: Identifier'))": 8,
    "((('A: string' === 'B: Identifier') || ('C: string' === 'D: Identifier')) ? 'E: Identifier' : 'F: Identifier')": 8,
    "((('A: BinaryExpression' - 'B: Identifier') + 'C: Identifier') + 'D: Identifier')": 8,
    "('A: CallExpression' + 'B: CallExpression')": 8,
    "((('A: Identifier' === 'B: Identifier') || ('C: Identifier' === 'D: Identifier')) || ('E: Identifier' === 'F: Identifier'))": 8,
    "(('A: Identifier' === 'B: Identifier') || ('C: Identifier' === 'D: Identifier'))": 8,
    "((('A: string' + 'B: Identifier') + 'C: string') + 'D: MemberExpression')": 7,
    "('A: MemberExpression' ? 'B: string' : 'C: string')": 7,
    "(('A: MemberExpression' + 'B: string') + 'C: CallExpression')": 7,
    "('A: string' === 'B: CallExpression')": 6,
    "('A: MemberExpression' - 'B: number')": 6,
    "('' === 'A: CallExpression')": 6,
    "(typeof('A: MemberExpression') !== 'string')": 6,
    "(('A: string' + ('B: Identifier' || 'C: string')) + 'D: Identifier')": 6,
    "('A: string' + ('B: Identifier' || 'C: string'))": 6,
    "(('A: MemberExpression' === 'B: Identifier') ? 'C: MemberExpression' : null)": 6,
    "((typeof('A: MemberExpression') === 'string') && 'B: MemberExpression')": 6,
    "(('A: Identifier' >= 1) && ('B: Identifier' >= 0))": 6,
    "('A: Identifier' >= 1)": 6,
    "('A: Identifier' ? 'B: MemberExpression' : null)": 6,
    "('A: Identifier' in 'B: Identifier')": 6,
    "('A: MemberExpression' === null)": 6,
    "(('A: MemberExpression' === 'B: string') && ('C: MemberExpression' === 'D: Identifier'))": 6,
    "('A: MemberExpression' ? 'B: MemberExpression' : 'C: Identifier')": 6,
    "('A: MemberExpression' || null)": 6,
    "((('A: Identifier' != null) && ('B: UnaryExpression' === 'object')) && 'C: CallExpression')": 6,
    "(('A: Identifier' != null) && (typeof('B: Identifier') === 'object'))": 6,
    "('A: MemberExpression' + 'B: TemplateLiteral')": 6,
    "(typeof('A: MemberExpression') == \"function\")": 6,
    "('A: CallExpression' - 'B: Identifier')": 6,
    "((typeof('A: MemberExpression') == \"number\") ? 'B: MemberExpression' : 0)": 6,
    "(typeof('A: MemberExpression') == \"number\")": 6,
    "(('A: Identifier' > 'B: Identifier') ? 'C: Identifier' : 0)": 6,
    "(('A: Identifier' >= 'B: Identifier') && 'C: AssignmentExpression')": 6,
    "('A: Identifier' + ('B: Identifier' * ('C: BinaryExpression' - 1)))": 6,
    "('A: Identifier' * (('B: Identifier' - 'C: Identifier') - 1))": 6,
    "((('A: Identifier' >= 'B: Identifier') && ('C: Identifier' <= 'D: Identifier')) ? 'E: Identifier' : (('F: Identifier' > 'G: Identifier') ? 'H: Identifier' : ('I: BinaryExpression' ? 'J: Identifier' : 'K: Identifier')))": 6,
    "(('A: Identifier' > 'B: Identifier') ? 'C: Identifier' : (('D: Identifier' < 'E: Identifier') ? 'F: Identifier' : 'G: Identifier'))": 6,
    "(('A: Identifier' < 'B: CallExpression') ? 0 : (('C: Identifier' > 'D: BinaryExpression') ? 'E: Identifier' : 'F: Identifier'))": 6,
    "(('A: Identifier' > ('B: Identifier' + 'C: CallExpression')) ? 'D: Identifier' : 'E: Identifier')": 6,
    "((typeof('A: MemberExpression') === 'number') ? 'B: MemberExpression' : 0)": 6,
    "(('A: string' + 'B: string') + (('C: string' + 'D: Identifier') + 'E: string'))": 6,
    "((('A: string' === 'B: Identifier') || ('C: string' === 'D: Identifier')) || ('E: string' === 'F: Identifier'))": 6,
    "('A: CallExpression' && 'B: MemberExpression')": 6,
    "((('A: string' + 'B: string') + 'C: Identifier') + 'D: string')": 6,
    "('A: Identifier' ? 'B: ArrayExpression' : 'C: ArrayExpression')": 6,
    "(('A: Identifier' !== 'B: Identifier') && ('C: Identifier' !== 'D: Identifier'))": 6,
    "('A: Identifier' < 'B: number')": 5,
    "(('A: Identifier' === 'B: Identifier') || 'C: CallExpression')": 5,
    "(true === 'A: Identifier')": 5,
    "('A: MemberExpression' || 'B: Identifier')": 5,
    "('A: Identifier' && 'B: NewExpression')": 5,
    "('A: number' * ('B: number' * 'C: number'))": 5,
    "((('A: BinaryExpression' && 'B: MemberExpression') && 'C: Identifier') && ('D: MemberExpression' !== 'E: Identifier'))": 5,
    "((('A: UnaryExpression' === 'string') && 'B: MemberExpression') && 'C: Identifier')": 5,
    "(('A: TemplateLiteral' + 'B: TemplateLiteral') + 'C: string')": 5,
    "('A: MemberExpression' == null)": 5,
    "('A: Identifier' && ('B: MemberExpression' === 'C: string'))": 5,
    "('A: Identifier' !== 0)": 5,
    "(!('A: Identifier') && !('B: Identifier'))": 5,
    "(('A: MemberExpression' - 'B: Identifier') + 'C: Identifier')": 5,
    "(('A: string' === 'B: Identifier') ? 'C: CallExpression' : 'D: CallExpression')": 5,
    "('A: CallExpression' && 'B: CallExpression')": 5,
    "('A: MemberExpression' === true)": 5,
    "(('A: string' + 'B: TemplateLiteral') + 'C: string')": 5,
    "('A: string' + 'B: TemplateLiteral')": 5,
    "(('A: Identifier' - 'B: Identifier') / 'C: Identifier')": 4,
    "('A: MemberExpression' > 'B: Identifier')": 4,
    "(typeof('A: Identifier') === 'undefined')": 4,
    "('A: MemberExpression' > 'B: number')": 4,
    "('A: MemberExpression' || 'B: ObjectExpression')": 4,
    "('A: Identifier' && 'B: string')": 4,
    "('A: CallExpression' !== 'B: string')": 4,
    "('A: MemberExpression' && 'B: CallExpression')": 4,
    "(\"\" + 'A: Identifier')": 4,
    "(\"\" + 'A: MemberExpression')": 4,
    "(('A: CallExpression' && !('B: CallExpression')) && 'C: AssignmentExpression')": 4,
    "((void(0) === 'A: MemberExpression') && 'B: AssignmentExpression')": 4,
    "(void(0) === 'A: MemberExpression')": 4,
    "('A: Identifier' !== 1)": 4,
    "(typeof('A: Identifier') !== 'string')": 4,
    "('A: MemberExpression' || false)": 4,
    "((('A: TemplateLiteral' + 'B: TemplateLiteral') + 'C: string') + 'D: string')": 4,
    "((('A: TemplateLiteral' + 'B: string') + 'C: string') + 'D: string')": 4,
    "((('A: MemberExpression' === 'B: string') || ('C: MemberExpression' === 'D: string')) || ('E: MemberExpression' === 'F: string'))": 4,
    "(('A: MemberExpression' !== 'B: string') && ('C: MemberExpression' !== 'D: string'))": 4,
    "((('A: MemberExpression' === 'B: string') && ('C: MemberExpression' === 'D: string')) && ('E: MemberExpression' === 'F: string'))": 4,
    "(('A: MemberExpression' === 'B: string') && !('C: MemberExpression'))": 4,
    "('A: Identifier' === 'B: CallExpression')": 4,
    "(('A: Identifier' + 'B: Identifier') > 'C: Identifier')": 4,
    "('A: Identifier' > 'B: MemberExpression')": 4,
    "(('A: Identifier' != null) ? 'B: TemplateLiteral' : null)": 4,
    "!(!('A: CallExpression'))": 4,
    "(\"undefined\" != typeof('A: Identifier'))": 4,
    "(('A: CallExpression' - 'B: Identifier') >= 'C: Identifier')": 4,
    "((null === 'A: Identifier') || 'B: Identifier')": 4,
    "(('A: MemberExpression' + 'B: string') + 'C: Identifier')": 4,
    "((typeof('A: Identifier') == \"function\") ? 'B: CallExpression' : (('C: LogicalExpression' && 'D: CallExpression') && 'E: AssignmentExpression'))": 4,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && 'C: CallExpression') && 'D: AssignmentExpression')": 4,
    "(((null != 'A: Identifier') && ('B: UnaryExpression' == \"object\")) && 'C: CallExpression')": 4,
    "((null != 'A: Identifier') && (typeof('B: Identifier') == \"object\"))": 4,
    "(null != 'A: Identifier')": 4,
    "((void(0) === 'A: Identifier') ? 'B: string' : 'C: Identifier')": 4,
    "((-(1) === 'A: Identifier') || 'B: Identifier')": 4,
    "((void(0) !== 'A: Identifier') ? 'B: CallExpression' : 'C: Identifier')": 4,
    "('A: MemberExpression' && (null != 'B: MemberExpression'))": 4,
    "(('A: Identifier' > 0) && 'B: Identifier')": 4,
    "('A: Identifier' ? 'B: Identifier' : void(0))": 4,
    "('A: Identifier' ? 'B: string' : void(0))": 4,
    "(('A: Identifier' && !('B: CallExpression')) && 'C: SequenceExpression')": 4,
    "(('A: string' === 'B: Identifier') ? 'C: SequenceExpression' : 'D: SequenceExpression')": 4,
    "((('A: BinaryExpression' ? 'B: MemberExpression' : 0) >= 'C: Identifier') ? 'D: CallExpression' : 'E: CallExpression')": 4,
    "((('A: Identifier' > 0) ? 'B: MemberExpression' : 0) >= 'C: Identifier')": 4,
    "(('A: Identifier' < 'B: Identifier') ? 'C: AssignmentExpression' : (('D: Identifier' > 'E: Identifier') && 'F: AssignmentExpression'))": 4,
    "(('A: Identifier' > 'B: Identifier') && 'C: AssignmentExpression')": 4,
    "(('A: Identifier' > 0) ? ('B: Identifier' - 1) : 0)": 4,
    "((('A: MemberExpression' - 'B: Identifier') + 'C: Identifier') + 'D: MemberExpression')": 4,
    "('A: Identifier' ? 'B: Identifier' : 0)": 4,
    "('A: Identifier' ? 'B: MemberExpression' : 'C: MemberExpression')": 4,
    "(('A: MemberExpression' - 'B: Identifier') + 'C: MemberExpression')": 4,
    "((('A: Identifier' >= 'B: Identifier') && ('C: Identifier' <= 'D: Identifier')) ? 'E: Identifier' : (('F: Identifier' < 'G: Identifier') ? 'H: Identifier' : 'I: Identifier'))": 4,
    "('A: CallExpression' >= 0)": 4,
    "!(('A: Identifier' in 'B: Identifier'))": 4,
    "(!('A: CallExpression') && !('B: CallExpression'))": 4,
    "(!('A: CallExpression') || 'B: CallExpression')": 4,
    "((typeof('A: Identifier') !== 'undefined') && (typeof('B: MemberExpression') !== 'undefined'))": 4,
    "(typeof('A: MemberExpression') !== 'undefined')": 4,
    "('A: Identifier' && ('B: MemberExpression' != null))": 4,
    "(('A: Identifier' != null) || ('B: Identifier' != null))": 4,
    "(typeof('A: Identifier') === 'boolean')": 4,
    "((('A: BinaryExpression' || 'B: BinaryExpression') || ('C: string' === 'D: Identifier')) || ('E: string' === 'F: Identifier'))": 4,
    "((('A: Identifier' !== 'B: string') && ('C: Identifier' !== 'D: string')) && ('E: Identifier' !== 'F: string'))": 4,
    "!(!('A: MemberExpression'))": 4,
    "(1 === 'A: Identifier')": 4,
    "('A: Identifier' - 'B: MemberExpression')": 4,
    "+('A: CallExpression')": 4,
    "((typeof('A: Identifier') === 'string') ? ('B: string' === 'C: Identifier') : true)": 4,
    "('A: MemberExpression' || 'B: CallExpression')": 3,
    "(('A: MemberExpression' === 1) && ('B: MemberExpression' === 'C: string'))": 3,
    "('A: Identifier' >= 'B: number')": 3,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && ('C: UnaryExpression' === 'string')) && ('D: MemberExpression' === 0))": 3,
    "((('A: Identifier' != null) && ('B: UnaryExpression' === 'string')) && (typeof('C: MemberExpression') === 'string'))": 3,
    "(('A: Identifier' != null) && (typeof('B: MemberExpression') === 'string'))": 3,
    "(('A: Identifier' != null) && (('B: UnaryExpression' !== 'object') || 'C: CallExpression'))": 3,
    "((typeof('A: Identifier') !== 'object') || 'B: CallExpression')": 3,
    "((('A: MemberExpression' >= 'B: number') && 'C: CallExpression') && 'D: CallExpression')": 3,
    "(('A: MemberExpression' >= 'B: number') && 'C: CallExpression')": 3,
    "('A: MemberExpression' >= 'B: number')": 3,
    "('A: TemplateLiteral' + 'B: CallExpression')": 3,
    "((false === 'A: Identifier') || ('B: Identifier' === 'C: Identifier'))": 3,
    "(false === 'A: Identifier')": 3,
    "('A: Identifier' ? 'B: string' : ('C: Identifier' && 'D: string'))": 3,
    "('A: Identifier' ? 'B: string' : false)": 3,
    "('A: MemberExpression' || 'B: ArrayExpression')": 3,
    "('A: Identifier' ? 'B: ObjectExpression' : 'C: Identifier')": 3,
    "('A: Identifier' ? 'B: CallExpression' : '')": 3,
    "(!('A: Identifier') && ('B: string' === 'C: Identifier'))": 3,
    "(('A: Identifier' != null) && ('B: MemberExpression' === 'C: string'))": 3,
    "((('A: BinaryExpression' + 'B: string') + 'C: TemplateLiteral') + 'D: string')": 3,
    "((('A: BinaryExpression' + 'B: string') + 'C: string') + 'D: TemplateLiteral')": 3,
    "('function' === 'A: Identifier')": 3,
    "('A: Identifier' ? 'B: TemplateLiteral' : 'C: TemplateLiteral')": 3,
    "(!('A: Identifier') && ('B: MemberExpression' > 0))": 3,
    "(('A: MemberExpression' === 'B: string') && 'C: MemberExpression')": 3,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && ('C: MemberExpression' === 'D: string')) && ('E: MemberExpression' === 'F: string'))": 3,
    "((('A: LogicalExpression' && 'B: BinaryExpression') && ('C: MemberExpression' === 'D: MemberExpression')) && ('E: MemberExpression' === 'F: MemberExpression'))": 3,
    "('A: CallExpression' + 1)": 3,
    "((null === 'A: Identifier') || (typeof('B: Identifier') === 'string'))": 3,
    "(-('A: Identifier') * 'B: Identifier')": 3,
    "((('A: BinaryExpression' + 'B: MemberExpression') + 'C: string') + 'D: Identifier')": 3,
    "((('A: LogicalExpression' && 'B: CallExpression') && 'C: CallExpression') && 'D: CallExpression')": 3,
    "(('A: CallExpression' && 'B: CallExpression') && 'C: CallExpression')": 3,
    "(\"function\" != typeof('A: Identifier'))": 3,
    "((typeof('A: Identifier') === 'object') && (typeof('B: MemberExpression') === 'function'))": 3,
    "((typeof('A: Identifier') === 'undefined') || (typeof('B: MemberExpression') !== 'function'))": 3,
    "('A: CallExpression' ? 'B: string' : 'C: string')": 3,
    "(!('A: Identifier') || !('B: Identifier'))": 3,
    "(('A: Identifier' !== null) && 'B: CallExpression')": 3,
    "('A: MemberExpression' && ('B: MemberExpression' !== 'C: string'))": 3,
    "('A: CallExpression' || 'B: ArrayExpression')": 3,
    "((('A: UnaryExpression' === 'object') && ('B: UnaryExpression' !== 'undefined')) ? 'C: AssignmentExpression' : (('D: BinaryExpression' && 'E: MemberExpression') ? 'F: CallExpression' : 'G: AssignmentExpression'))": 3,
    "((typeof('A: Identifier') === 'object') && (typeof('B: Identifier') !== 'undefined'))": 3,
    "((('A: UnaryExpression' === 'function') && 'B: MemberExpression') ? 'C: CallExpression' : 'D: AssignmentExpression')": 3,
    "(('A: MemberExpression' === 'B: string') && (typeof('C: MemberExpression') === 'string'))": 3,
    "(('A: MemberExpression' !== 'B: string') || ('C: MemberExpression' !== 'D: string'))": 3,
    "('A: Identifier' === ('B: Identifier' % 'C: Identifier'))": 3,
    "('A: Identifier' % 'B: Identifier')": 3,
    "((('A: BinaryExpression' || 'B: BinaryExpression') || ('C: MemberExpression' === 'D: Identifier')) || ('E: MemberExpression' === -(1)))": 2,
    "((('A: MemberExpression' > 'B: Identifier') || ('C: BinaryExpression' > 'D: Identifier')) || ('E: MemberExpression' === 'F: Identifier'))": 2,
    "(('A: MemberExpression' > 'B: Identifier') || ((0 - 'C: MemberExpression') > 'D: Identifier'))": 2,
    "((0 - 'A: MemberExpression') > 'B: Identifier')": 2,
    "(0 - 'A: MemberExpression')": 2,
    "('A: MemberExpression' === -(1))": 2,
    "('A: MemberExpression' === '')": 2,
    "(('A: string' + 'B: MemberExpression') + 'C: string')": 2,
    "('A: Identifier' || null)": 2,
    "('A: MemberExpression' || '')": 2,
    "('A: Identifier' > 'B: number')": 2,
    "(('A: string' === 'B: Identifier') && 'C: CallExpression')": 2,
    "('A: MemberExpression' !== 'B: number')": 2,
    "('A: CallExpression' ? ('B: string' + 'C: Identifier') : ('D: string' + 'E: Identifier'))": 2,
    "('A: Identifier' || 'B: ObjectExpression')": 2,
    "('A: Identifier' && 'B: ObjectExpression')": 2,
    "('A: CallExpression' ? 'B: ObjectExpression' : 'C: ObjectExpression')": 2,
    "(('A: Identifier' && 'B: Identifier') && 'C: NewExpression')": 2,
    "('A: MemberExpression' ? 'B: TemplateLiteral' : 'C: Identifier')": 2,
    "((typeof('A: Identifier') === 'string') ? ('B: string' + 'C: Identifier') : ('D: string' + 'E: Identifier'))": 2,
    "(('A: MemberExpression' > 0) || ('B: MemberExpression' > 0))": 2,
    "(('A: Identifier' && 'B: MemberExpression') || '')": 2,
    "(('A: string' + 'B: Identifier') + 'C: Identifier')": 2,
    "((typeof('A: Identifier') === 'function') ? 'B: Identifier' : 'C: Identifier')": 2,
    "(!('A: Identifier') || 'B: Identifier')": 2,
    "((typeof('A: Identifier') === 'object') && 'B: MemberExpression')": 2,
    "(('A: Identifier' && 'B: Identifier') && (typeof('C: MemberExpression') === 'string'))": 2,
    "((('A: Identifier' >= 1) && ('B: Identifier' >= 0)) && ('C: MemberExpression' !== 'D: MemberExpression'))": 2,
    "(('A: Identifier' !== 1) || ('B: Identifier' !== 1))": 2,
    "(('A: Identifier' < 0) || ('B: MemberExpression' !== 'C: MemberExpression'))": 2,
    "('A: Identifier' ? ('B: MemberExpression' || 'C: MemberExpression') : '')": 2,
    "!(!(('A: Identifier' && 'B: MemberExpression')))": 2,
    "!(('A: Identifier' && 'B: MemberExpression'))": 2,
    "((typeof('A: Identifier') === 'string') && ('B: CallExpression' || 'C: CallExpression'))": 2,
    "((!('A: Identifier') && ('B: string' === 'C: Identifier')) && 'D: CallExpression')": 2,
    "('A: Identifier' ? 1 : (('B: Identifier' != null) ? 'C: Identifier' : 'D: Identifier'))": 2,
    "(('A: Identifier' != null) ? 'B: Identifier' : 'C: Identifier')": 2,
    "((0 === 'A: Identifier') ? 'B: Identifier' : 'C: Identifier')": 2,
    "((0 === 'A: Identifier') ? 'B: Identifier' : ('C: Identifier' + 'D: Identifier'))": 2,
    "(((null == 'A: Identifier') || ('B: MemberExpression' === 'C: MemberExpression')) ? 'D: MemberExpression' : 'E: MemberExpression')": 2,
    "((null == 'A: Identifier') || ('B: MemberExpression' === 'C: MemberExpression'))": 2,
    "(('A: Identifier' != null) && ('B: MemberExpression' != null))": 2,
    "('A: Identifier' ? 'B: string' : '')": 2,
    "(('A: MemberExpression' && 'B: MemberExpression') && 'C: MemberExpression')": 2,
    "('A: MemberExpression' === 'function')": 2,
    "((('A: MemberExpression' === 'B: string') && ('C: MemberExpression' === 'D: number')) && 'E: CallExpression')": 2,
    "(('A: MemberExpression' === 'B: string') && ('C: MemberExpression' === 'D: number'))": 2,
    "((('A: LogicalExpression' && 'B: UnaryExpression') && ('C: MemberExpression' === 'D: string')) && ('E: MemberExpression' === 'F: string'))": 2,
    "(('function' === 'A: Identifier') ? 'B: string' : 'C: string')": 2,
    "('A: CallExpression' === 'B: CallExpression')": 2,
    "(('A: MemberExpression' > 1) ? 'B: string' : 'C: string')": 2,
    "((null == 'A: Identifier') || ('B: MemberExpression' == null))": 2,
    "(('A: CallExpression' || 'B: CallExpression') || 'C: CallExpression')": 2,
    "(('A: CallExpression' != null) || ('B: CallExpression' != null))": 2,
    "(('A: MemberExpression' === 'B: string') && 'C: CallExpression')": 2,
    "!(!(('A: LogicalExpression' && 'B: CallExpression')))": 2,
    "!((('A: MemberExpression' && 'B: MemberExpression') && 'C: CallExpression'))": 2,
    "(('A: MemberExpression' && 'B: MemberExpression') && 'C: CallExpression')": 2,
    "(!('A: Identifier') && ('B: Identifier' !== 'C: Identifier'))": 2,
    "((('A: MemberExpression' === 'B: string') && ('C: MemberExpression' === 'D: Identifier')) && ('E: MemberExpression' === 'F: string'))": 2,
    "((('A: MemberExpression' === 'B: string') && ('C: MemberExpression' === 'D: Identifier')) && !('E: MemberExpression'))": 2,
    "('A: Identifier' - ('B: Identifier' + 'C: Identifier'))": 2,
    "(-('A: Identifier') + ('B: Identifier' + 'C: Identifier'))": 2,
    "('A: Identifier' % 'B: number')": 2,
    "(-('A: Identifier') * 'B: number')": 2,
    "('A: MemberExpression' || 0)": 2,
    "('A: MemberExpression' ? 'B: MemberExpression' : 'C: MemberExpression')": 2,
    "((('A: CallExpression' && 'B: CallExpression') && 'C: CallExpression') && 'D: CallExpression')": 2,
    "((typeof('A: Identifier') === 'number') && 'B: CallExpression')": 2,
    "('A: Identifier' instanceof 'B: MemberExpression')": 2,
    "((('A: Identifier' && 'B: BinaryExpression') && ('C: string' in 'D: Identifier')) ? 'E: MemberExpression' : 'F: Identifier')": 2,
    "(('A: Identifier' && ('B: UnaryExpression' === 'object')) && ('C: string' in 'D: Identifier'))": 2,
    "('A: Identifier' && (typeof('B: Identifier') === 'object'))": 2,
    "(('A: Identifier' != null) ? 'B: MemberExpression' : 'C: CallExpression')": 2,
    "((('A: UnaryExpression' == \"object\") && (\"undefined\" != 'B: UnaryExpression')) ? 'C: CallExpression' : (('D: BinaryExpression' && 'E: MemberExpression') ? 'F: CallExpression' : 'G: CallExpression'))": 2,
    "((typeof('A: Identifier') == \"object\") && (\"undefined\" != typeof('B: Identifier')))": 2,
    "((('A: UnaryExpression' == \"function\") && 'B: MemberExpression') ? 'C: CallExpression' : 'D: CallExpression')": 2,
    "((typeof('A: Identifier') == \"function\") && 'B: MemberExpression')": 2,
    "('A: MemberExpression' || 'B: FunctionExpression')": 2,
    "('A: CallExpression' && 'B: AssignmentExpression')": 2,
    "(('A: MemberExpression' === 'B: MemberExpression') && 'C: CallExpression')": 2,
    "((('A: Identifier' && 'B: BinaryExpression') && 'C: CallExpression') ? 'D: Identifier' : 'E: SequenceExpression')": 2,
    "(('A: Identifier' && ('B: ThisExpression' === 'C: Identifier')) && 'D: CallExpression')": 2,
    "('A: Identifier' && ('B: ThisExpression' === 'C: Identifier'))": 2,
    "('A: ThisExpression' === 'B: Identifier')": 2,
    "((('A: UnaryExpression' == \"object\") && ('B: UnaryExpression' == \"function\")) ? 'C: FunctionExpression' : 'D: FunctionExpression')": 2,
    "((typeof('A: Identifier') == \"object\") && (typeof('B: MemberExpression') == \"function\"))": 2,
    "((('A: CallExpression' - 'B: Identifier') >= 'C: Identifier') ? 'D: CallExpression' : 'E: AssignmentExpression')": 2,
    "(('A: MemberExpression' > 0) ? 'B: AssignmentExpression' : 'C: SequenceExpression')": 2,
    "(('A: MemberExpression' === 0) ? 'B: string' : 'C: string')": 2,
    "('A: CallExpression' ? 'B: AssignmentExpression' : 'C: AssignmentExpression')": 2,
    "((('A: MemberExpression' === 'B: Identifier') && ('C: MemberExpression' === 'D: Identifier')) ? null : 'E: ObjectExpression')": 2,
    "(('A: CallExpression' > 'B: Identifier') ? 'C: Identifier' : 0)": 2,
    "('A: CallExpression' > 'B: Identifier')": 2,
    "((('A: UnaryExpression' == \"function\") && ('B: Identifier' > 0)) && ('C: Identifier' > 0))": 2,
    "((typeof('A: Identifier') == \"function\") && ('B: Identifier' > 0))": 2,
    "(((\"undefined\" != 'A: UnaryExpression') && ('B: UnaryExpression' !== 'C: MemberExpression')) && 'D: SequenceExpression')": 2,
    "((\"undefined\" != typeof('A: Identifier')) && (void(0) !== 'B: MemberExpression'))": 2,
    "(((null == 'A: Identifier') && (null == 'B: Identifier')) || (('C: Identifier' && 'D: UnaryExpression') && 'E: SequenceExpression'))": 2,
    "((null == 'A: Identifier') && (null == 'B: Identifier'))": 2,
    "(('A: string' === 'B: Identifier') ? 'C: AssignmentExpression' : 'D: AssignmentExpression')": 2,
    "((void(0) === 'A: Identifier') || 'B: Identifier')": 2,
    "('A: Identifier' ? 0 : 'B: Identifier')": 2,
    "(('A: MemberExpression' === 'B: Identifier') ? null : 'C: ObjectExpression')": 2,
    "((typeof('A: Identifier') == \"number\") && (null != 'B: MemberExpression'))": 2,
    "((('A: string' === 'B: Identifier') || ('C: string' === 'D: Identifier')) ? 'E: AssignmentExpression' : 'F: AssignmentExpression')": 2,
    "((typeof('A: MemberExpression') == \"function\") && ('B: MemberExpression' > 0))": 2,
    "(('A: CallExpression' >= 0) || 'B: AssignmentExpression')": 2,
    "('A: Identifier' ? 'B: FunctionExpression' : 'C: FunctionExpression')": 2,
    "(('A: Identifier' > 0) && ('B: Identifier' > 0))": 2,
    "((typeof('A: Identifier') === 'number') || (typeof('B: Identifier') === 'number'))": 2,
    "((void(0) === 'A: Identifier') ? true : 'B: Identifier')": 2,
    "(!('A: Identifier') ? 'B: Identifier' : 0)": 2,
    "(!('A: Identifier') ? 'B: Identifier' : 'C: string')": 2,
    "((typeof('A: Identifier') === 'number') && ('B: MemberExpression' != null))": 2,
    "('A: Identifier' && (typeof('B: Identifier') !== 'number'))": 2,
    "(!('A: Identifier') && (typeof('B: Identifier') !== 'number'))": 2,
    "('A: CallExpression' || 'B: Identifier')": 2,
    "(((null == 'A: Identifier') || ('B: UnaryExpression' === 'boolean')) || ('' === 'C: Identifier'))": 2,
    "((null == 'A: Identifier') || (typeof('B: Identifier') === 'boolean'))": 2,
    "('A: Identifier' && ('B: Identifier' !== 'C: Identifier'))": 2,
    "(('A: Identifier' && 'B: MemberExpression') || 'C: Identifier')": 2,
    "(('A: Identifier' === 'B: Identifier') && ((0 === 'C: Identifier') || ('D: MemberExpression' === 'E: Identifier')))": 2,
    "((0 === 'A: Identifier') || ('B: MemberExpression' === 'C: Identifier'))": 2,
    "(('A: Identifier' === 'B: Identifier') && ('C: UpdateExpression' === 'D: Identifier'))": 2,
    "('A: UpdateExpression' === 'B: Identifier')": 2,
    "(('A: Identifier' && 'B: MemberExpression') && 'C: CallExpression')": 2,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && ('C: Identifier' !== 'D: string')) && ('E: Identifier' !== 'F: string'))": 2,
    "((('A: LogicalExpression' && 'B: BinaryExpression') && ('C: Identifier' !== 'D: string')) && ('E: Identifier' !== 'F: string'))": 2,
    "!(('A: string' in 'B: Identifier'))": 2,
    "('A: CallExpression' ? 'B: Identifier' : null)": 2,
    "((('A: CallExpression' + 'B: MemberExpression') + 'C: string') + 'D: CallExpression')": 2,
    "(('A: CallExpression' + 'B: MemberExpression') + 'C: string')": 2,
    "('A: CallExpression' + 'B: MemberExpression')": 2,
    "('A: Identifier' ? 'B: MemberExpression' : ('C: Identifier' ? 1 : 0))": 2,
    "('A: Identifier' ? 1 : 0)": 2,
    "('A: MemberExpression' === false)": 2,
    "(typeof('A: MemberExpression') !== 'B: string')": 2,
    "('A: CallExpression' || null)": 2,
    "((('A: MemberExpression' + 'B: string') + 'C: MemberExpression') + 'D: string')": 2,
    "(('A: MemberExpression' + 'B: string') + 'C: MemberExpression')": 2,
    "('A: MemberExpression' !== 1)": 2,
    "(('A: MemberExpression' === 'B: string') ? 'C: string' : '')": 2,
    "((('A: BinaryExpression' + 'B: string') + 'C: CallExpression') + 'D: string')": 2,
    "(('A: MemberExpression' === 'B: Identifier') ? null : 'C: MemberExpression')": 2,
    "('A: MemberExpression' / 'B: Identifier')": 2,
    "((typeof('A: Identifier') === 'function') ? 'B: Identifier' : null)": 2,
    "('A: MemberExpression' <= 'B: Identifier')": 2,
    "(!('A: Identifier') || 'B: CallExpression')": 2,
    "((('A: BinaryExpression' && 'B: LogicalExpression') && ('C: MemberExpression' === 'D: string')) && ('E: MemberExpression' === 'F: string'))": 2,
    "((('A: MemberExpression' === 'B: string') && ('C: BinaryExpression' || 'D: BinaryExpression')) && ('E: MemberExpression' === 'F: string'))": 2,
    "(('A: MemberExpression' === 'B: string') && (('C: MemberExpression' === 'D: string') || ('E: MemberExpression' === 'F: string')))": 2,
    "('A: Identifier' * 'B: CallExpression')": 2,
    "(('A: Identifier' && 'B: MemberExpression') || ('C: Identifier' && 'D: MemberExpression'))": 2,
    "((+('A: CallExpression') + 'B: string') + 'C: CallExpression')": 2,
    "(+('A: CallExpression') + 'B: string')": 2,
    "('A: CallExpression' || (('B: Identifier' !== null) && 'C: CallExpression'))": 2,
    "('A: MemberExpression' + 1)": 2,
    "('A: Identifier' + 'B: MemberExpression')": 2,
    "(('A: MemberExpression' && ('B: MemberExpression' !== 'C: string')) && 'D: MemberExpression')": 2,
    "(('A: string' === 'B: Identifier') || 'C: Identifier')": 2,
    "('A: CallExpression' < 'B: Identifier')": 2,
    "('A: Identifier' ? 'B: Identifier' : ('C: string' + 'D: Identifier'))": 2,
    "('A: Identifier' ? 'B: MemberExpression' : 0)": 2,
    "((typeof('A: Identifier') === 'string') ? 'B: Identifier' : 'C: Identifier')": 2,
    "((typeof('A: Identifier') !== 'undefined') && (typeof('B: MemberExpression') === 'function'))": 2,
    "((('A: LogicalExpression' || 'B: BinaryExpression') || ('C: MemberExpression' === 'D: UnaryExpression')) && !('E: CallExpression'))": 1,
    "(('A: MemberExpression' > 0) ? 'B: TemplateLiteral' : 'C: string')": 1,
    "(('A: string' + 'B: Identifier') + 'C: CallExpression')": 1,
    "(('A: Identifier' > 0) ? (('B: string' + 'C: Identifier') + 'D: string') : 'E: string')": 1,
    "((!('A: Identifier') && ('B: Identifier' != null)) && !('C: CallExpression'))": 1,
    "(!('A: Identifier') && ('B: Identifier' != null))": 1,
    "(('A: Identifier' < 'B: MemberExpression') && !('C: MemberExpression'))": 1,
    "('A: number' - ('B: Identifier' - 'C: Identifier'))": 1,
    "(('A: Identifier' >= 'B: number') && !(('C: BinaryExpression' && 'D: BinaryExpression')))": 1,
    "!(((0 === 'A: Identifier') && ('B: string' === 'C: Identifier')))": 1,
    "((0 === 'A: Identifier') && ('B: string' === 'C: Identifier'))": 1,
    "(('A: Identifier' > 0) || ('B: Identifier' > 'C: number'))": 1,
    "((typeof('A: Identifier') === 'string') && 'B: CallExpression')": 1,
    "('A: Identifier' & 'B: Identifier')": 1,
    "(!('A: MemberExpression') && ('B: MemberExpression' !== 'C: number'))": 1,
    "('A: MemberExpression' && (('B: string' + 'C: LogicalExpression') + 'D: string'))": 1,
    "(('A: string' + ('B: MemberExpression' || 'C: MemberExpression')) + 'D: string')": 1,
    "('A: string' + ('B: MemberExpression' || 'C: MemberExpression'))": 1,
    "(('A: Identifier' !== 'B: string') && 'C: TemplateLiteral')": 1,
    "(('A: Identifier' && 'B: Identifier') && 'C: Identifier')": 1,
    "('A: Identifier' ? ('B: Identifier' ? 'C: string' : false) : ('D: Identifier' && 'E: string'))": 1,
    "(('A: Identifier' && !('B: Identifier')) ? 'C: ArrayExpression' : 'D: MemberExpression')": 1,
    "('A: Identifier' && !('B: Identifier'))": 1,
    "('A: Identifier' ? 'B: MemberExpression' : 'C: Identifier')": 1,
    "('A: Identifier' ? 'B: ArrowFunctionExpression' : ('C: Identifier' && 'D: ArrowFunctionExpression'))": 1,
    "('A: Identifier' && 'B: ArrowFunctionExpression')": 1,
    "('A: Identifier' ? 'B: ObjectExpression' : false)": 1,
    "('A: Identifier' || !('B: CallExpression'))": 1,
    "(('A: Identifier' && 'B: Identifier') && 'C: CallExpression')": 1,
    "(('A: Identifier' && 'B: CallExpression') && 'C: NewExpression')": 1,
    "(!('A: Identifier') && 'B: ObjectExpression')": 1,
    "(!('A: Identifier') || ('B: MemberExpression' === 'C: string'))": 1,
    "(('A: MemberExpression' && ('B: BinaryExpression' || 'C: BinaryExpression')) && 'D: MemberExpression')": 1,
    "('A: MemberExpression' && (('B: UnaryExpression' !== 'string') || ('C: CallExpression' !== 'D: string')))": 1,
    "((typeof('A: MemberExpression') !== 'string') || ('B: CallExpression' !== 'C: string'))": 1,
    "('A: CallExpression' || 'B: number')": 1,
    "((!('A: MemberExpression') && ('B: CallExpression' === 'C: UnaryExpression')) && ('D: CallExpression' === -(1)))": 1,
    "(!('A: MemberExpression') && ('B: CallExpression' === -(1)))": 1,
    "('A: Identifier' + 'B: TemplateLiteral')": 1,
    "('A: TemplateLiteral' + 'B: Identifier')": 1,
    "((typeof('A: Identifier') === 'object') ? 'B: number' : 'C: number')": 1,
    "('A: number' + 'B: Identifier')": 1,
    "(('A: string' === 'B: Identifier') && !('C: Identifier'))": 1,
    "('A: Identifier' ? 1 : 'B: number')": 1,
    "(('A: string' === 'B: Identifier') ? 1 : 'C: number')": 1,
    "('A: CallExpression' ? 'B: ArrayExpression' : 'C: ArrayExpression')": 1,
    "(('A: TemplateLiteral' + 'B: string') + ('C: Identifier' ? 'D: string' : ''))": 1,
    "((('A: MemberExpression' && 'B: MemberExpression') && 'C: MemberExpression') ? 'D: NewExpression' : 'E: Identifier')": 1,
    "((('A: MemberExpression' && 'B: MemberExpression') && 'C: MemberExpression') || false)": 1,
    "('A: CallExpression' && ('B: MemberExpression' > 0))": 1,
    "((('A: MemberExpression' === 'B: string') && ('C: MemberExpression' === 'D: string')) && (('E: BinaryExpression' || 'F: BinaryExpression') || ('G: MemberExpression' === null)))": 1,
    "((('A: UnaryExpression' === 'string') || ('B: UnaryExpression' === 'number')) || ('C: MemberExpression' === null))": 1,
    "((typeof('A: MemberExpression') === 'string') || (typeof('B: MemberExpression') === 'number'))": 1,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && ('C: MemberExpression' != null)) && !('D: MemberExpression'))": 1,
    "((('A: MemberExpression' === 'B: string') && ('C: MemberExpression' === 'D: string')) && ('E: MemberExpression' != null))": 1,
    "(('A: string' === 'B: Identifier') && ('C: MemberExpression' === 'D: string'))": 1,
    "(('A: MemberExpression' == null) || ('B: MemberExpression' == null))": 1,
    "((('A: MemberExpression' === 'B: string') && ('C: Identifier' === 'D: Identifier')) || (('E: MemberExpression' === 'F: string') && ('G: MemberExpression' === 'H: Identifier')))": 1,
    "(('A: MemberExpression' === 'B: string') && ('C: Identifier' === 'D: Identifier'))": 1,
    "(('A: MemberExpression' != null) && ('B: MemberExpression' === 'C: string'))": 1,
    "((('A: LogicalExpression' && 'B: BinaryExpression') && ('C: MemberExpression' === 'D: string')) && 'E: CallExpression')": 1,
    "((('A: LogicalExpression' && 'B: LogicalExpression') && !('C: MemberExpression')) && ('D: MemberExpression' === 'E: string'))": 1,
    "((('A: Identifier' && 'B: BinaryExpression') && ('C: BinaryExpression' || 'D: BinaryExpression')) && !('E: MemberExpression'))": 1,
    "(('A: Identifier' && ('B: MemberExpression' === 'C: string')) && (('D: MemberExpression' === 'E: string') || ('F: MemberExpression' === 'G: string')))": 1,
    "(('A: MemberExpression' != null) && ('B: MemberExpression' === 'C: MemberExpression'))": 1,
    "((('A: LogicalExpression' && 'B: BinaryExpression') && ('C: MemberExpression' === 'D: string')) && ('E: MemberExpression' === 'F: Identifier'))": 1,
    "((('A: LogicalExpression' && 'B: BinaryExpression') && ('C: MemberExpression' === 'D: string')) && ('E: MemberExpression' === 'F: string'))": 1,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && !('C: MemberExpression')) && ('D: MemberExpression' === 'E: string'))": 1,
    "((('A: Identifier' != null) && ('B: MemberExpression' === 'C: string')) && !('D: MemberExpression'))": 1,
    "('A: MemberExpression' !== 'function')": 1,
    "((('A: BinaryExpression' + 'B: TemplateLiteral') + 'C: CallExpression') + 'D: TemplateLiteral')": 1,
    "((('A: TemplateLiteral' + 'B: TemplateLiteral') + 'C: TemplateLiteral') + 'D: CallExpression')": 1,
    "(('A: MemberExpression' + 'B: MemberExpression') + 'C: MemberExpression')": 1,
    "((('A: string' === 'B: Identifier') || ('C: string' === 'D: Identifier')) ? 'E: string' : 'F: string')": 1,
    "(('A: Identifier' && ('B: MemberExpression' === 'C: string')) && ('function' === 'D: Identifier'))": 1,
    "(('A: string' === 'B: Identifier') ? 'C: ArrayExpression' : 'D: ArrayExpression')": 1,
    "(true === 'A: CallExpression')": 1,
    "((('A: BinaryExpression' + 'B: string') + 'C: CallExpression') + 'D: TemplateLiteral')": 1,
    "((('A: BinaryExpression' + 'B: ConditionalExpression') + 'C: string') + 'D: CallExpression')": 1,
    "((('A: BinaryExpression' + 'B: string') + ('C: BinaryExpression' ? 'D: string' : 'E: string')) + 'F: string')": 1,
    "((('A: ConditionalExpression' + 'B: Identifier') + 'C: string') + (('D: MemberExpression' > 1) ? 'E: string' : 'F: string'))": 1,
    "((('A: BinaryExpression' ? '' : 'B: BinaryExpression') + 'C: Identifier') + 'D: string')": 1,
    "((('A: MemberExpression' > 1) ? '' : ('B: Identifier' + 'C: string')) + 'D: Identifier')": 1,
    "(('A: MemberExpression' > 1) ? '' : ('B: Identifier' + 'C: string'))": 1,
    "(!('A: Identifier') && 'B: CallExpression')": 1,
    "(((null == 'A: Identifier') || ('B: MemberExpression' == null)) || ('C: MemberExpression' !== 'D: string'))": 1,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && ('C: BinaryExpression' || 'D: BinaryExpression')) && ('E: MemberExpression' === 'F: Identifier'))": 1,
    "((('A: Identifier' != null) && ('B: MemberExpression' != null)) && (('C: MemberExpression' === 'D: string') || ('E: MemberExpression' === 'F: string')))": 1,
    "(('A: Identifier' != null) && ('B: Identifier' !== 'C: MemberExpression'))": 1,
    "(('A: TemplateLiteral' + ('B: LogicalExpression' || 'C: CallExpression')) + 'D: Identifier')": 1,
    "('A: TemplateLiteral' + (('B: CallExpression' || 'C: CallExpression') || 'D: CallExpression'))": 1,
    "(('A: Identifier' && ('B: MemberExpression' === 'C: string')) && ('D: MemberExpression' === 'E: MemberExpression'))": 1,
    "(!('A: Identifier') || !('B: MemberExpression'))": 1,
    "(('A: Identifier' && !('B: CallExpression')) && !('C: CallExpression'))": 1,
    "('A: MemberExpression' instanceof 'B: Identifier')": 1,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && ('C: MemberExpression' === 'D: string')) && ('E: MemberExpression' != null))": 1,
    "(('A: Identifier' !== 'B: Identifier') && ('C: Identifier' != null))": 1,
    "((('A: LogicalExpression' && 'B: BinaryExpression') && !('C: MemberExpression')) && !(('D: LogicalExpression' && 'E: BinaryExpression')))": 1,
    "((('A: LogicalExpression' && 'B: BinaryExpression') && ('C: MemberExpression' !== 'D: string')) && !('E: MemberExpression'))": 1,
    "((('A: BinaryExpression' || 'B: BinaryExpression') && ('C: MemberExpression' === 'D: Identifier')) && ('E: MemberExpression' !== 'F: string'))": 1,
    "((('A: MemberExpression' === 'B: string') || ('C: MemberExpression' === 'D: string')) && ('E: MemberExpression' === 'F: Identifier'))": 1,
    "!((('A: BinaryExpression' && 'B: LogicalExpression') && ('C: MemberExpression' === 'D: MemberExpression')))": 1,
    "((('A: MemberExpression' != null) && ('B: BinaryExpression' || 'C: BinaryExpression')) && ('D: MemberExpression' === 'E: MemberExpression'))": 1,
    "(('A: MemberExpression' != null) && (('B: MemberExpression' === 'C: string') || ('D: MemberExpression' === 'E: string')))": 1,
    "((('A: BinaryExpression' && 'B: MemberExpression') && ('C: MemberExpression' === 'D: string')) && ('E: MemberExpression' === 'F: Identifier'))": 1,
    "((('A: MemberExpression' === 'B: string') && 'C: MemberExpression') && ('D: MemberExpression' === 'E: string'))": 1,
    "((('A: LogicalExpression' && 'B: BinaryExpression') && ('C: MemberExpression' === 'D: string')) && !('E: MemberExpression'))": 1,
    "((('A: Identifier' === 'B: Identifier') && 'C: Identifier') && 'D: MemberExpression')": 1,
    "(('A: Identifier' === 'B: Identifier') && 'C: Identifier')": 1,
    "('A: CallExpression' ? 0 : -(1))": 1,
    "((0 === 'A: Identifier') && ('B: MemberExpression' === 'C: number'))": 1,
    "(('A: Identifier' === ('B: MemberExpression' - 'C: number')) && ('D: MemberExpression' > 'E: number'))": 1,
    "('A: Identifier' === ('B: MemberExpression' - 'C: number'))": 1,
    "('A: Identifier' < ('B: MemberExpression' - 1))": 1,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && !('C: CallExpression')) && (typeof('D: MemberExpression') === 'string'))": 1,
    "((('A: UnaryExpression' === 'object') && ('B: Identifier' !== null)) && !('C: CallExpression'))": 1,
    "((('A: BinaryExpression' || 'B: BinaryExpression') && ('C: MemberExpression' === 'D: MemberExpression')) && ('E: MemberExpression' === 'F: MemberExpression'))": 1,
    "((('A: MemberExpression' === 'B: string') || ('C: MemberExpression' === 'D: string')) && ('E: MemberExpression' === 'F: MemberExpression'))": 1,
    "(('A: MemberExpression' <= 'B: MemberExpression') && ('C: MemberExpression' >= 'D: MemberExpression'))": 1,
    "('A: MemberExpression' <= 'B: MemberExpression')": 1,
    "('A: MemberExpression' >= 'B: MemberExpression')": 1,
    "((('A: MemberExpression' === 'B: string') && !('C: MemberExpression')) && 'D: CallExpression')": 1,
    "(('A: MemberExpression' === 'B: Identifier') || (('C: BinaryExpression' && 'D: BinaryExpression') && ('E: MemberExpression' === 'F: Identifier')))": 1,
    "((('A: MemberExpression' === 'B: string') && ('C: MemberExpression' === 'D: string')) && ('E: MemberExpression' === 'F: Identifier'))": 1,
    "('A: MemberExpression' && ('B: Identifier' === 'C: CallExpression'))": 1,
    "('A: Identifier' ? ('B: CallExpression' || 'C: CallExpression') : ('D: CallExpression' || 'E: CallExpression'))": 1,
    "(('A: MemberExpression' === 0) ? ('B: Identifier' <= 'C: CallExpression') : ('D: Identifier' < 'E: CallExpression'))": 1,
    "('A: Identifier' <= 'B: CallExpression')": 1,
    "('A: CallExpression' * 'B: CallExpression')": 1,
    "((('A: TemplateLiteral' + 'B: string') + 'C: string') + ('D: Identifier' ? ('E: string' + 'F: string') : ''))": 1,
    "('A: Identifier' ? ('B: string' + 'C: string') : '')": 1,
    "(('A: MemberExpression' && ('B: BinaryExpression' || 'C: BinaryExpression')) && ('D: MemberExpression' === 'E: Identifier'))": 1,
    "('A: MemberExpression' && (('B: MemberExpression' === 'C: string') || ('D: MemberExpression' === 'E: string')))": 1,
    "(('A: MemberExpression' === 'B: string') || (('C: MemberExpression' === 'D: string') && 'E: MemberExpression'))": 1,
    "((null === 'A: Identifier') ? 'B: MemberExpression' : 'C: ObjectExpression')": 1,
    "(-('A: number') * 'B: Identifier')": 1,
    "('A: MemberExpression' ? 'B: MemberExpression' : 0)": 1,
    "('A: MemberExpression' * 'B: number')": 1,
    "('A: MemberExpression' / 'B: number')": 1,
    "(('A: Identifier' !== 0) && (0 === ('B: Identifier' % 'C: number')))": 1,
    "(0 === ('A: Identifier' % 'B: number'))": 1,
    "(('A: MemberExpression' * 'B: Identifier') % 'C: MemberExpression')": 1,
    "(('A: Identifier' > 'B: Identifier') ? (('C: MemberExpression' - 'D: Identifier') + 'E: Identifier') : ('F: Identifier' - 'G: Identifier'))": 1,
    "('A: Identifier' + ('B: Identifier' * 'C: Identifier'))": 1,
    "('A: Identifier' - ('B: Identifier' * 'C: Identifier'))": 1,
    "(0 === ('A: Identifier' - 'B: Identifier'))": 1,
    "('A: Identifier' >= ('B: Identifier' + 'C: number'))": 1,
    "(!('A: Identifier') || !('B: CallExpression'))": 1,
    "(('A: Identifier' !== 'B: Identifier') || !('C: Identifier'))": 1,
    "('A: string' === 'B: ChainExpression')": 1,
    "(!('A: Identifier') || ('B: Identifier' !== 'C: MemberExpression'))": 1,
    "((('A: BinaryExpression' + 'B: string') + 'C: Identifier') + 'D: Identifier')": 1,
    "((('A: string' + 'B: CallExpression') + 'C: string') + 'D: Identifier')": 1,
    "((('A: Identifier' && 'B: CallExpression') && 'C: Identifier') && 'D: CallExpression')": 1,
    "(('A: Identifier' && 'B: CallExpression') && 'C: Identifier')": 1,
    "(('A: Identifier' > 0) && ('B: Identifier' < 'C: number'))": 1,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && 'C: CallExpression') && ('D: MemberExpression' !== true))": 1,
    "((('A: Identifier' !== null) && ('B: UnaryExpression' === 'object')) && 'C: CallExpression')": 1,
    "(('A: Identifier' !== null) && (typeof('B: Identifier') === 'object'))": 1,
    "('A: MemberExpression' !== true)": 1,
    "('A: CallExpression' - 'B: number')": 1,
    "((('A: BinaryExpression' + 'B: Identifier') + 'C: string') + 'D: MemberExpression')": 1,
    "('A: MemberExpression' ? 'B: MemberExpression' : null)": 1,
    "('A: CallExpression' > 0)": 1,
    "((('A: BinaryExpression' && 'B: CallExpression') && !('C: CallExpression')) && !('D: CallExpression'))": 1,
    "((('A: UnaryExpression' === 'number') && 'B: CallExpression') && !('C: CallExpression'))": 1,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && 'C: CallExpression') && ('D: MemberExpression' !== 'E: Identifier'))": 1,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && 'C: CallExpression') && 'D: CallExpression')": 1,
    "(('A: Identifier' < 'B: Identifier') > false)": 1,
    "(('A: string' === 'B: Identifier') ? 'C: Identifier' : 'D: Identifier')": 1,
    "(!('A: CallExpression') && 'B: CallExpression')": 1,
    "((('A: BinaryExpression' && 'B: Identifier') && !('C: CallExpression')) && 'D: SequenceExpression')": 1,
    "((('A: UnaryExpression' == \"number\") && 'B: Identifier') && !('C: CallExpression'))": 1,
    "((typeof('A: Identifier') == \"number\") && 'B: Identifier')": 1,
    "(((\"number\" != 'A: UnaryExpression') && (\"number\" != 'B: UnaryExpression')) || (('C: Identifier' && 'D: UnaryExpression') && 'E: SequenceExpression'))": 1,
    "((\"number\" != typeof('A: Identifier')) && (\"number\" != typeof('B: Identifier')))": 1,
    "('A: Identifier' && (\"number\" != typeof('B: Identifier')))": 1,
    "(!('A: Identifier') && (\"number\" != typeof('B: Identifier')))": 1,
    "('A: MemberExpression' ? 'B: CallExpression' : 'C: Identifier')": 1,
    "('A: CallExpression' ? 'B: CallExpression' : 'C: CallExpression')": 1,
    "('A: number' * ('B: number' * ('C: number' * 'D: BinaryExpression')))": 1,
    "('A: number' * ('B: number' * ('C: number' * 'D: number')))": 1,
    "('A: MemberExpression' && ('B: CallExpression' !== 0))": 1,
    "('A: CallExpression' !== 0)": 1,
    "('A: Identifier' && ('B: MemberExpression' === 'C: MemberExpression'))": 1,
    "(('A: MemberExpression' && 'B: MemberExpression') || '')": 1,
    "('A: Identifier' ? 0 : 1)": 1,
    "((typeof('A: Identifier') !== 'undefined') && 'B: MemberExpression')": 1,
    "(('A: Identifier' + ('B: Identifier' ? 'C: Identifier' : 'D: CallExpression')) + 'E: string')": 1,
    "('A: Identifier' + ('B: Identifier' ? 'C: Identifier' : 'D: CallExpression'))": 1,
    "('A: Identifier' ? 'B: Identifier' : 'C: CallExpression')": 1,
    "(!('A: Identifier') || ('B: MemberExpression' === 0))": 1,
    "(null === 'A: AssignmentExpression')": 1,
    "('A: AssignmentExpression' !== null)": 1,
    "((-(1) === 'A: Identifier') || (-(1) === 'B: Identifier'))": 1,
    "(('A: MemberExpression' === 'B: Identifier') ? 'C: Identifier' : 'D: CallExpression')": 1,
    "(!('A: MemberExpression') && ('B: Identifier' > 'C: Identifier'))": 1,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && ('C: MemberExpression' === 'D: MemberExpression')) && ('E: MemberExpression' === 'F: MemberExpression'))": 1,
    "((('A: MemberExpression' === 1) && ('B: MemberExpression' === 'C: MemberExpression')) && ('D: MemberExpression' === 'E: MemberExpression'))": 1,
    "(('A: MemberExpression' === 1) && ('B: MemberExpression' === 'C: MemberExpression'))": 1,
    "('A: Identifier' && ('B: MemberExpression' === 'C: Identifier'))": 1,
    "!(!(('A: CallExpression' & 'B: number')))": 1,
    "!(('A: CallExpression' & 'B: number'))": 1,
    "('A: CallExpression' & 'B: number')": 1,
    "('A: Identifier' && (('B: LogicalExpression' || 'C: BinaryExpression') || ('D: MemberExpression' === 'E: string')))": 1,
    "((('A: BinaryExpression' && 'B: LogicalExpression') || ('C: string' === 'D: Identifier')) || ('E: MemberExpression' === 'F: string'))": 1,
    "((('A: string' === 'B: Identifier') && ('C: LogicalExpression' || 'D: BinaryExpression')) || ('E: string' === 'F: Identifier'))": 1,
    "(('A: string' === 'B: Identifier') && (('C: LogicalExpression' || 'D: BinaryExpression') || ('E: MemberExpression' === 'F: string')))": 1,
    "((('A: LogicalExpression' || 'B: BinaryExpression') || ('C: MemberExpression' === 'D: string')) || ('E: MemberExpression' === 'F: string'))": 1,
    "((('A: BinaryExpression' || 'B: BinaryExpression') || ('C: MemberExpression' === 'D: string')) || ('E: MemberExpression' === 'F: string'))": 1,
    "('A: CallExpression' ? 'B: CallExpression' : null)": 1,
    "(('A: Identifier' !== 'B: Identifier') && 'C: CallExpression')": 1,
    "((('A: CallExpression' !== 'B: UnaryExpression') && ('C: Identifier' !== 'D: string')) && ('E: Identifier' !== 'F: string'))": 1,
    "(('A: CallExpression' !== -(1)) && ('B: Identifier' !== 'C: string'))": 1,
    "('A: CallExpression' ? null : 'B: Identifier')": 1,
    "('A: Identifier' ? null : 'B: CallExpression')": 1,
    "((('A: UnaryExpression' + 'B: string') + 'C: Identifier') + 'D: string')": 1,
    "((!('A: UnaryExpression') + 'B: string') + 'C: Identifier')": 1,
    "(!(!('A: Identifier')) + 'B: string')": 1,
    "!(!('A: Identifier'))": 1,
    "(('A: string' === 'B: Identifier') && ('C: string' === 'D: Identifier'))": 1,
    "(('A: Identifier' > 1) ? (1 - 'B: Identifier') : 'C: Identifier')": 1,
    "(1 - 'A: Identifier')": 1,
    "(('A: MemberExpression' || 'B: MemberExpression') || 'C: Identifier')": 1,
    "(('A: MemberExpression' === 'B: Identifier') ? 'C: MemberExpression' : 'D: Identifier')": 1,
    "('A: CallExpression' && ('B: Identifier' in 'C: Identifier'))": 1,
    "(('A: Identifier' !== 'B: Identifier') ? ('C: Identifier' + 'D: CallExpression') : 'E: Identifier')": 1,
    "((typeof('A: Identifier') === 'boolean') || (typeof('B: Identifier') === 'number'))": 1,
    "(('A: Identifier' + 'B: CallExpression') + 'C: CallExpression')": 1,
    "((('A: UnaryExpression' && 'B: BinaryExpression') && ('C: Identifier' !== 0)) && !(('D: CallExpression' && 'E: MemberExpression')))": 1,
    "((!('A: Identifier') && ('B: UnaryExpression' === 'number')) && ('C: Identifier' !== 0))": 1,
    "(!('A: Identifier') && (typeof('B: Identifier') === 'number'))": 1,
    "!(('A: CallExpression' && 'B: MemberExpression'))": 1,
    "((('A: Identifier' != null) && ('B: MemberExpression' === null)) && !('C: Identifier'))": 1,
    "(('A: Identifier' != null) && ('B: MemberExpression' === null))": 1,
    "(('A: string' === 'B: Identifier') && 'C: MemberExpression')": 1,
    "('A: CallExpression' ? 'B: MemberExpression' : null)": 1,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && ('C: Identifier' !== 'D: Identifier')) && (typeof('E: Identifier') !== 'string'))": 1,
    "((('A: string' === 'B: Identifier') && ('C: Identifier' !== null)) && ('D: Identifier' !== 'E: Identifier'))": 1,
    "(('A: string' === 'B: Identifier') && ('C: Identifier' !== null))": 1,
    "(('A: Identifier' !== null) && ('B: MemberExpression' === 'C: Identifier'))": 1,
    "((typeof('A: Identifier') === 'boolean') && 'B: CallExpression')": 1,
    "((('A: BinaryExpression' || 'B: BinaryExpression') && ('C: Identifier' !== null)) && ('D: MemberExpression' === 'E: Identifier'))": 1,
    "((('A: string' === 'B: Identifier') || ('C: string' === 'D: Identifier')) && ('E: Identifier' !== null))": 1,
    "('A: CallExpression' > -(1))": 1,
    "(!('A: CallExpression') && (1 === ('B: Identifier' % 'C: number')))": 1,
    "(1 === ('A: Identifier' % 'B: number'))": 1,
    "((0 > 'A: Identifier') || ('B: Identifier' > 'C: MemberExpression'))": 1,
    "(0 > 'A: Identifier')": 1,
    "(('A: Identifier' !== 'B: Identifier') || ('C: Identifier' !== 'D: Identifier'))": 1,
    "(('A: MemberExpression' != null) ? 'B: MemberExpression' : ('C: MemberExpression' === false))": 1,
    "('' + 'A: UpdateExpression')": 1,
    "(('A: MemberExpression' === 'B: Identifier') ? true : 'C: MemberExpression')": 1,
    "(('A: Identifier' !== 'B: string') && !('C: MemberExpression'))": 1,
    "((('A: UnaryExpression' === 'string') && ('B: MemberExpression' >= 'C: string')) && ('D: MemberExpression' <= 'E: string'))": 1,
    "((typeof('A: Identifier') === 'string') && ('B: MemberExpression' >= 'C: string'))": 1,
    "('A: MemberExpression' >= 'B: string')": 1,
    "('A: MemberExpression' <= 'B: string')": 1,
    "(('A: Identifier' === 'B: Identifier') || ('C: MemberExpression' === 0))": 1,
    "(('A: MemberExpression' && ('B: MemberExpression' !== 'C: string')) && ('D: MemberExpression' !== 'E: string'))": 1,
    "((typeof('A: Identifier') === 'function') && !('B: MemberExpression'))": 1,
    "('A: Identifier' || ('B: MemberExpression' > 0))": 1,
    "(('A: MemberExpression' === 'B: string') && ('C: MemberExpression' === 'D: MemberExpression'))": 1,
    "(('A: MemberExpression' === 'B: string') && ('C: MemberExpression' !== 'D: MemberExpression'))": 1,
    "((null === 'A: Identifier') || !('B: CallExpression'))": 1,
    "(('A: string' === 'B: Identifier') && ('C: MemberExpression' > 0))": 1,
    "(('A: string' === 'B: Identifier') && ('C: MemberExpression' > 1))": 1,
    "((('A: BinaryExpression' + 'B: CallExpression') + 'C: string') + 'D: CallExpression')": 1,
    "((('A: BinaryExpression' + 'B: string') + 'C: string') + 'D: CallExpression')": 1,
    "((('A: string' + 'B: MemberExpression') + 'C: string') + 'D: string')": 1,
    "(('A: MemberExpression' === 0) && ('B: MemberExpression' === 0))": 1,
    "+('A: Identifier')": 1,
    "void('A: MemberExpression')": 1,
    "(('A: MemberExpression' && 'B: MemberExpression') && !('C: MemberExpression'))": 1,
    "((('A: UnaryExpression' !== 'object') && ('B: UnaryExpression' !== 'function')) && ('C: Identifier' != null))": 1,
    "((typeof('A: Identifier') !== 'object') && (typeof('B: Identifier') !== 'function'))": 1,
    "((('A: BinaryExpression' && 'B: MemberExpression') && 'C: MemberExpression') && ('D: MemberExpression' !== 'E: MemberExpression'))": 1,
    "((('A: UnaryExpression' === 'string') && 'B: MemberExpression') && 'C: MemberExpression')": 1,
    "(('A: MemberExpression' === 'B: Identifier') && ('C: Identifier' !== 'D: Identifier'))": 1,
    "(('A: Identifier' !== null) && ('B: Identifier' !== 'C: Identifier'))": 1,
    "(('A: Identifier' && ('B: MemberExpression' || 'C: MemberExpression')) || 'D: string')": 1,
    "('A: ThisExpression' !== 'B: Identifier')": 1,
    "('A: Identifier' || (('B: Identifier' && 'C: MemberExpression') && 'D: Identifier'))": 1,
    "(('A: Identifier' && 'B: MemberExpression') && 'C: Identifier')": 1,
    "(('A: MemberExpression' > 0) && 'B: CallExpression')": 1,
    "(('A: Identifier' === 'B: Identifier') ? 'C: string' : 'D: Identifier')": 1,
    "(('A: Identifier' - 'B: MemberExpression') - 1)": 1,
    "((typeof('A: Identifier') !== 'undefined') ? 'B: Identifier' : null)": 1,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && ('C: MemberExpression' !== 'D: Identifier')) ? 'E: CallExpression' : null)": 1,
    "((('A: UnaryExpression' !== 'undefined') && ('B: MemberExpression' !== 'C: Identifier')) && ('D: MemberExpression' !== 'E: Identifier'))": 1,
    "((typeof('A: Identifier') !== 'undefined') && ('B: MemberExpression' !== 'C: Identifier'))": 1,
    "('A: CallExpression' !== null)": 1,
    "(('A: Identifier' !== null) && !(('B: Identifier' && 'C: Identifier')))": 1,
    "!(('A: Identifier' && 'B: Identifier'))": 1,
    "(('A: MemberExpression' > 'B: Identifier') && (!('C: Identifier') || 'D: CallExpression'))": 1,
    "((typeof('A: Identifier') === 'number') && ('B: Identifier' > 0))": 1,
    "((null === 'A: CallExpression') && ('B: Identifier' === 'C: CallExpression'))": 1,
    "(null === 'A: CallExpression')": 1,
    "((('A: Identifier' && 'B: BinaryExpression') && ('C: MemberExpression' !== 'D: Identifier')) && ('E: MemberExpression' !== 'F: Identifier'))": 1,
    "(('A: Identifier' && ('B: Identifier' !== 'C: Identifier')) && ('D: MemberExpression' !== 'E: Identifier'))": 1,
    "(('A: Identifier' < 0) || ('B: Identifier' > 'C: number'))": 1,
    "('A: number' / 'B: Identifier')": 1,
    "('A: Identifier' ? 'B: ObjectExpression' : null)": 1,
    "('A: Identifier' ? 'B: number' : 1)": 1,
    "(('A: CallExpression' === -(1)) ? 'B: Identifier' : 'C: Identifier')": 1,
    "(('A: Identifier' === 'B: Identifier') || ('C: MemberExpression' !== 'D: string'))": 1,
    "(('A: Identifier' * 'B: CallExpression') | 0)": 1,
    "('A: Identifier' >= 'B: MemberExpression')": 1,
    "('A: Identifier' === ('B: MemberExpression' - 1))": 1,
    "('A: CallExpression' / 'B: number')": 1,
    "('A: Identifier' + '')": 1,
    "('A: MemberExpression' ? 'B: CallExpression' : null)": 1,
    "('A: Identifier' && ('B: Identifier' !== 'C: string'))": 1,
    "(!('A: Identifier') || ('B: Identifier' && ('C: CallExpression' !== 'D: UnaryExpression')))": 1,
    "('A: Identifier' && ('B: CallExpression' !== -(1)))": 1,
    "(!('A: Identifier') || (typeof('B: Identifier') !== 'string'))": 1,
    "((('A: CallExpression' + 'B: CallExpression') + 'C: CallExpression') + 'D: CallExpression')": 1,
    "(('A: CallExpression' + 'B: CallExpression') + 'C: CallExpression')": 1,
    "(('A: Identifier' && 'B: Identifier') || (!('C: Identifier') && !('D: Identifier')))": 1,
    "('A: Identifier' * ('B: number' * 'C: number'))": 1,
    "(('A: Identifier' > 0) ? 'B: TemplateLiteral' : '')": 1,
    "(('A: Identifier' > 0) ? 'B: string' : '')": 1,
    "(('A: Identifier' + 'B: Identifier') < 0)": 1,
    "(('A: Identifier' - 'B: Identifier') > 0)": 1,
    "((('A: Identifier' - 'B: Identifier') / 'C: Identifier') - (('D: Identifier' * 'E: CallExpression') / 'F: CallExpression'))": 1,
    "(('A: Identifier' * 'B: CallExpression') / 'C: CallExpression')": 1,
    "('A: CallExpression' + ('B: CallExpression' / 'C: CallExpression'))": 1,
    "('A: CallExpression' / 'B: CallExpression')": 1,
    "('A: CallExpression' !== '')": 1,
    "(('A: string' === 'B: Identifier') ? 'C: TemplateLiteral' : 'D: TemplateLiteral')": 1,
    "(('A: MemberExpression' === 1) && ('' === 'B: CallExpression'))": 1,
    "((('A: Identifier' && 'B: MemberExpression') && 'C: MemberExpression') && ('D: MemberExpression' === 'E: string'))": 1,
    "(('A: Identifier' && 'B: MemberExpression') && 'C: MemberExpression')": 1,
    "((('A: string' + 'B: string') + 'C: string') + 'D: Identifier')": 1,
    "((('A: MemberExpression' === 'B: string') && ('C: UnaryExpression' === 'string')) && ('D: MemberExpression' === ''))": 1,
    "('A: CallExpression' ? 'B: Identifier' : 'C: Identifier')": 1,
    "(('A: MemberExpression' !== 'B: string') || !('C: CallExpression'))": 1,
    "(('A: MemberExpression' === 'B: string') && !('C: CallExpression'))": 1,
    "('A: Identifier' <= 0)": 1,
    "((('A: MemberExpression' !== 'B: string') || ('C: MemberExpression' !== 'D: string')) || ('E: MemberExpression' !== 'F: string'))": 1,
    "((('A: BinaryExpression' || 'B: BinaryExpression') || !('C: CallExpression')) || !('D: MemberExpression'))": 1,
    "((('A: MemberExpression' !== 'B: string') || ('C: MemberExpression' !== 'D: string')) || !('E: CallExpression'))": 1,
    "(('A: MemberExpression' === 'B: string') && ('C: CallExpression' || 'D: CallExpression'))": 1,
    "('A: CallExpression' ? 'B: MemberExpression' : 'C: MemberExpression')": 1,
    "((('A: Identifier' + 'B: string') + 'C: string') + 'D: string')": 1,
    "(('A: Identifier' + 'B: string') + 'C: string')": 1,
    "(('A: Identifier' !== null) && ('B: Identifier' !== null))": 1,
    "((('A: LogicalExpression' && 'B: BinaryExpression') && ('C: MemberExpression' === 'D: string')) && (('E: MemberExpression' === 'F: string') || ('G: MemberExpression' === 'H: string')))": 1,
    "('A: MemberExpression' < 1)": 1,
    "(('A: MemberExpression' < 'B: number') || 'C: CallExpression')": 1,
    "('A: MemberExpression' < 'B: number')": 1,
    "('A: Identifier' && (null === 'B: Identifier'))": 1,
    "('A: Identifier' ? 'B: CallExpression' : 'C: Identifier')": 1,
    "(('A: Identifier' != null) && ('B: MemberExpression' === true))": 1,
    "!(('A: MemberExpression' && ('B: MemberExpression' === 'C: Identifier')))": 1,
    "('A: MemberExpression' && ('B: MemberExpression' === 'C: Identifier'))": 1,
    "(typeof('A: Identifier') !== 'boolean')": 1,
    "((0 === 'A: Identifier') && (0 === 'B: Identifier'))": 1,
    "((('A: CallExpression' + 'B: string') + 'C: Identifier') + 'D: string')": 1,
    "(('A: CallExpression' + 'B: string') + 'C: Identifier')": 1,
    "(('A: MemberExpression' - 'B: MemberExpression') > 1)": 1,
    "((('A: MemberExpression' === 'B: string') || ('C: MemberExpression' === 'D: string')) && ('E: MemberExpression' !== 'F: string'))": 1,
    "('A: MemberExpression' && !('B: CallExpression'))": 1,
    "(!('A: CallExpression') && 'B: MemberExpression')": 1,
    "(('A: CallExpression' - 'B: MemberExpression') > ('C: number' * ('D: number' * 'E: number')))": 1,
    "('A: CallExpression' - 'B: MemberExpression')": 1,
    "(('A: MemberExpression' < 'B: MemberExpression') ? -(1) : 1)": 1,
    "('A: MemberExpression' < 'B: MemberExpression')": 1,
    "(('A: MemberExpression' === 'B: string') && !('C: Identifier'))": 1,
    "('A: MemberExpression' ? 'B: MemberExpression' : false)": 1,
    "(('A: CallExpression' + 'B: string') + 'C: CallExpression')": 1,
    "('A: MemberExpression' && (typeof('B: MemberExpression') === 'function'))": 1,
    "(('A: MemberExpression' !== 'B: Identifier') && !('C: CallExpression'))": 1,
    "((('A: TemplateLiteral' + 'B: string') + 'C: TemplateLiteral') + 'D: TemplateLiteral')": 1,
    "(('A: TemplateLiteral' + 'B: string') + 'C: TemplateLiteral')": 1,
    "(!('A: Identifier') || ('B: MemberExpression' !== 'C: number'))": 1,
    "((('A: Identifier' !== 'B: Identifier') && ('C: Identifier' !== null)) && (typeof('D: MemberExpression') === 'function'))": 1,
    "(('A: Identifier' !== 'B: Identifier') && ('C: Identifier' !== null))": 1,
    "(('A: CallExpression' !== -(1)) || ('B: CallExpression' !== -(1)))": 1,
    "('A: Identifier' ? ('B: Identifier' ? 'C: string' : 'D: string') : ('E: Identifier' ? 'F: string' : 'G: string'))": 1,
    "(('A: Identifier' === 'B: Identifier') && (typeof('C: Identifier') === 'string'))": 1,
    "((('A: BinaryExpression' + 'B: CallExpression') + 'C: CallExpression') + 'D: TemplateLiteral')": 1,
    "((('A: BinaryExpression' + 'B: CallExpression') + 'C: CallExpression') + 'D: CallExpression')": 1,
    "((('A: string' + 'B: CallExpression') + 'C: CallExpression') + 'D: CallExpression')": 1,
    "(('A: string' + 'B: CallExpression') + 'C: CallExpression')": 1,
    "('A: Identifier' !== 'B: CallExpression')": 1,
    "((('A: TemplateLiteral' + 'B: string') + 'C: string') + 'D: Identifier')": 1,
    "('A: AwaitExpression' || 'B: Identifier')": 1,
    "('A: TaggedTemplateExpression' + 'B: TaggedTemplateExpression')": 1,
    "('A: CallExpression' && 'B: Identifier')": 1,
    "('A: CallExpression' && !('B: Identifier'))": 1,
    "('A: CallExpression' + 'B: Identifier')": 1,
    "('A: Identifier' ? 'B: TemplateLiteral' : 'C: Identifier')": 1,
    "('A: TemplateLiteral' === 'B: MemberExpression')": 1,
    "(('A: MemberExpression' === null) && ('B: MemberExpression' === null))": 1,
    "('A: Identifier' <= 1)": 1,
    "(!('A: Identifier') && (('B: string' === 'C: Identifier') || ('D: string' === 'E: Identifier')))": 1,
    "('A: MemberExpression' ? 'B: CallExpression' : 'C: ArrayExpression')": 1,
    "(('A: string' === 'B: Identifier') || ('C: CallExpression' !== -(1)))": 1,
    "(!('A: Identifier') && ('B: MemberExpression' !== false))": 1,
    "('A: MemberExpression' !== false)": 1,
    "(('A: Identifier' || !('B: Identifier')) ? 'C: string' : 'D: string')": 1,
    "('A: Identifier' || !('B: Identifier'))": 1,
    "(('A: Identifier' && ('B: string' === 'C: Identifier')) && 'D: CallExpression')": 1,
    "('A: Identifier' && ('B: string' === 'C: Identifier'))": 1,
    "(('A: Identifier' !== -(1)) ? 'B: Identifier' : 'C: MemberExpression')": 1,
    "('A: Identifier' !== -(1))": 1,
    "(!('A: Identifier') && 'B: Identifier')": 1,
    "((('A: BinaryExpression' + 'B: CallExpression') + 'C: string') + 'D: string')": 1,
    "((('A: string' + 'B: Identifier') + 'C: string') + 'D: CallExpression')": 1,
    "(!('A: Identifier') || (typeof('B: MemberExpression') !== 'string'))": 1,
    "(typeof('A: MemberExpression') !== 'boolean')": 1,
    "((('A: string' + 'B: Identifier') + 'C: string') + 'D: string')": 1,
    "('A: MemberExpression' ? 'B: TemplateLiteral' : '')": 1,
    "((('A: MemberExpression' !== null) && ('B: BinaryExpression' || 'C: BinaryExpression')) && !('D: CallExpression'))": 1,
    "(('A: MemberExpression' !== null) && (('B: UnaryExpression' === 'object') || ('C: UnaryExpression' === 'function')))": 1,
    "((typeof('A: MemberExpression') === 'object') || (typeof('B: MemberExpression') === 'function'))": 1,
    "(typeof('A: MemberExpression') === 'object')": 1,
    "(!('A: CallExpression') && ('B: CallExpression' === -(1)))": 1,
    "(!('A: MemberExpression') && (('B: BinaryExpression' || 'C: BinaryExpression') || ('D: Identifier' === 'E: Identifier')))": 1,
    "((('A: Identifier' !== 'B: Identifier') && ('C: Identifier' !== 'D: Identifier')) && ('E: Identifier' !== 'F: Identifier'))": 1,
    "(('A: string' === 'B: Identifier') ? 'C: Identifier' : (('D: Identifier' + 'E: string') + 'F: CallExpression'))": 1,
    "(('A: Identifier' + 'B: string') + 'C: CallExpression')": 1,
    "((typeof('A: Identifier') === 'string') ? 'B: CallExpression' : 'C: Identifier')": 1,
    "('A: CallExpression' ? 'B: CallExpression' : 'C: ObjectExpression')": 1,
    "(('A: MemberExpression' === 'B: MemberExpression') && ('C: MemberExpression' === 'D: MemberExpression'))": 1,
    "('A: MemberExpression' ? 'B: CallExpression' : 1)": 1,
    "('A: MemberExpression' ? 'B: CallExpression' : 0)": 1,
    "('A: MemberExpression' && ('B: MemberExpression' === 'C: MemberExpression'))": 1
}