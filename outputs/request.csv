Found 1585 patterns and 349 unique patterns, 0 files could not be parsed:
{
    "('A: MemberExpression' + 'B: string')": 178,
    "('A: string' + 'B: MemberExpression')": 89,
    "!('A: MemberExpression')": 74,
    "('A: MemberExpression' === 'B: string')": 62,
    "-(1)": 59,
    "('A: string' + 'B: Identifier')": 52,
    "((('A: BinaryExpression' + 'B: string') + 'C: string') + 'D: string')": 49,
    "('A: CallExpression' !== -(1))": 48,
    "typeof('A: MemberExpression')": 41,
    "('A: Identifier' + 'B: string')": 36,
    "!('A: CallExpression')": 25,
    "delete('A: MemberExpression')": 23,
    "('A: string' + 'B: CallExpression')": 22,
    "typeof('A: Identifier')": 21,
    "!('A: Identifier')": 20,
    "(('A: string' + 'B: MemberExpression') + 'C: string')": 20,
    "(('A: string' + 'B: Identifier') + 'C: string')": 18,
    "('A: MemberExpression' || 'B: MemberExpression')": 17,
    "(typeof('A: MemberExpression') === 'function')": 17,
    "('A: string' === 'B: Identifier')": 15,
    "('A: MemberExpression' && 'B: MemberExpression')": 14,
    "((('A: BinaryExpression' + 'B: Identifier') + 'C: string') + 'D: Identifier')": 11,
    "('A: MemberExpression' || 'B: string')": 10,
    "('A: MemberExpression' && !('B: MemberExpression'))": 10,
    "('A: MemberExpression' || '')": 10,
    "('A: MemberExpression' || 'B: ObjectExpression')": 9,
    "('A: string' + 'B: string')": 9,
    "('A: MemberExpression' >= 'B: MemberExpression')": 9,
    "('A: MemberExpression' + 'B: Identifier')": 9,
    "-('A: number')": 9,
    "((('A: BinaryExpression' + 'B: string') + 'C: Identifier') + 'D: string')": 8,
    "(('A: Identifier' + 'B: string') + 'C: MemberExpression')": 8,
    "('A: MemberExpression' !== 'B: Identifier')": 8,
    "('A: Identifier' !== 'B: string')": 8,
    "(('A: MemberExpression' + 'B: string') + 'C: Identifier')": 8,
    "~('A: CallExpression')": 8,
    "((('A: string' + 'B: string') + 'C: string') + 'D: string')": 8,
    "(('A: string' + 'B: string') + 'C: string')": 8,
    "(('A: Identifier' + 'B: string') + 'C: Identifier')": 7,
    "('A: MemberExpression' === 'B: Identifier')": 7,
    "('A: MemberExpression' === 0)": 7,
    "('A: MemberExpression' > 0)": 7,
    "(typeof('A: Identifier') === 'function')": 6,
    "('A: Identifier' || '')": 6,
    "('A: MemberExpression' || 'B: ArrayExpression')": 6,
    "('A: CallExpression' === -(1))": 6,
    "('A: MemberExpression' && !('B: CallExpression'))": 6,
    "('A: CallExpression' + 'B: string')": 6,
    "('A: MemberExpression' >= 0)": 6,
    "('A: MemberExpression' - 'B: MemberExpression')": 5,
    "(typeof('A: MemberExpression') !== 'undefined')": 5,
    "('A: Identifier' < 'B: MemberExpression')": 5,
    "('A: CallExpression' - 'B: MemberExpression')": 5,
    "('A: MemberExpression' === ('B: string' + 'C: CallExpression'))": 5,
    "(('A: string' + 'B: CallExpression') + 'C: string')": 5,
    "(typeof('A: Identifier') === 'undefined')": 4,
    "('A: Identifier' || 'B: ObjectExpression')": 4,
    "('A: Identifier' !== 'B: Identifier')": 4,
    "((('A: Identifier' + 'B: string') + 'C: Identifier') + 'D: string')": 4,
    "('A: string' === 'B: CallExpression')": 4,
    "((('A: Identifier' + 'B: string') + 'C: MemberExpression') + 'D: string')": 4,
    "(('A: MemberExpression' + 'B: string') + 'C: MemberExpression')": 4,
    "(0 === 'A: CallExpression')": 4,
    "((('A: BinaryExpression' + 'B: string') + 'C: MemberExpression') + 'D: string')": 4,
    "('A: Identifier' ? 'B: string' : 'C: string')": 4,
    "('A: MemberExpression' || null)": 4,
    "('A: MemberExpression' !== 'B: number')": 4,
    "('A: MemberExpression' === false)": 4,
    "('A: MemberExpression' === 'B: MemberExpression')": 4,
    "(typeof('A: Identifier') === 'string')": 3,
    "(typeof('A: Identifier') !== 'string')": 3,
    "('A: Identifier' && 'B: CallExpression')": 3,
    "(('A: MemberExpression' === 'B: string') ? 'C: string' : 'D: string')": 3,
    "('A: Identifier' + 1)": 3,
    "('A: MemberExpression' || 'B: CallExpression')": 3,
    "('A: MemberExpression' || 'B: Identifier')": 3,
    "(typeof('A: MemberExpression') === 'undefined')": 3,
    "('A: CallExpression' || '')": 3,
    "('A: MemberExpression' === 'B: number')": 3,
    "('A: MemberExpression' !== 'B: MemberExpression')": 3,
    "('A: MemberExpression' !== 'B: string')": 3,
    "+('A: MemberExpression')": 3,
    "(typeof('A: MemberExpression') === 'string')": 3,
    "('A: MemberExpression' && 'B: CallExpression')": 3,
    "(!('A: MemberExpression') && 'B: MemberExpression')": 3,
    "('A: Identifier' || 'B: Identifier')": 3,
    "(('A: MemberExpression' === 0) && ('B: MemberExpression' <= 'C: number'))": 3,
    "('A: MemberExpression' <= 'B: number')": 3,
    "('A: number' === 'B: Identifier')": 3,
    "('A: Identifier' || 'B: string')": 3,
    "((('A: string' + 'B: Identifier') + 'C: string') + 'D: Identifier')": 3,
    "('' + 'A: MemberExpression')": 3,
    "(('A: CallExpression' + 'B: string') + 'C: Identifier')": 3,
    "('A: MemberExpression' >= 'B: Identifier')": 3,
    "('A: Identifier' || (typeof('B: Identifier') === 'undefined'))": 2,
    "('A: Identifier' ? 'B: CallExpression' : 'C: CallExpression')": 2,
    "((('A: BinaryExpression' + 'B: MemberExpression') + 'C: string') + 'D: Identifier')": 2,
    "('A: Identifier' === 'B: Identifier')": 2,
    "('A: Identifier' && 'B: MemberExpression')": 2,
    "((('A: MemberExpression' || 'B: MemberExpression') || 'C: MemberExpression') || 'D: MemberExpression')": 2,
    "(('A: MemberExpression' || 'B: MemberExpression') || 'C: MemberExpression')": 2,
    "(!('A: MemberExpression') && !('B: MemberExpression'))": 2,
    "((('A: BinaryExpression' + 'B: string') + ('C: MemberExpression' || '')) + 'D: string')": 2,
    "((('A: BinaryExpression' + 'B: CallExpression') + 'C: string') + 'D: MemberExpression')": 2,
    "((('A: BinaryExpression' + 'B: string') + 'C: CallExpression') + 'D: string')": 2,
    "((('A: BinaryExpression' + 'B: MemberExpression') + 'C: string') + 'D: CallExpression')": 2,
    "((('A: string' + 'B: MemberExpression') + 'C: string') + 'D: MemberExpression')": 2,
    "('A: Identifier' + 'B: MemberExpression')": 2,
    "('A: MemberExpression' || 0)": 2,
    "('A: MemberExpression' + ('B: MemberExpression' || ''))": 2,
    "('A: MemberExpression' === '')": 2,
    "('A: MemberExpression' !== null)": 2,
    "('A: MemberExpression' ? ('B: string' + 'C: MemberExpression') : '')": 2,
    "(('A: MemberExpression' && 'B: MemberExpression') && 'C: MemberExpression')": 2,
    "((('A: MemberExpression' + 'B: string') + 'C: MemberExpression') + 'D: MemberExpression')": 2,
    "(('A: Identifier' !== 'B: string') && ('C: Identifier' !== 'D: string'))": 2,
    "('A: MemberExpression' ? 'B: Identifier' : 'C: Identifier')": 2,
    "('A: MemberExpression' ? 'B: CallExpression' : 'C: CallExpression')": 2,
    "(('A: MemberExpression' >= 'B: number') && ('C: MemberExpression' < 'D: number'))": 2,
    "('A: MemberExpression' >= 'B: number')": 2,
    "('A: MemberExpression' < 'B: number')": 2,
    "('A: Identifier' && 'B: Identifier')": 2,
    "('A: MemberExpression' !== false)": 2,
    "(typeof('A: MemberExpression') !== 'string')": 2,
    "(('A: MemberExpression' === 'B: string') && ('C: MemberExpression' === 'D: string'))": 2,
    "('A: Identifier' instanceof 'B: Identifier')": 2,
    "('A: MemberExpression' ? 'B: CallExpression' : 'C: string')": 2,
    "('A: MemberExpression' ? 'B: ObjectExpression' : 'C: string')": 2,
    "(0 === 'A: Identifier')": 2,
    "('A: Identifier' % 'B: number')": 2,
    "('A: Identifier' ? 'B: number' : 'C: number')": 2,
    "('A: MemberExpression' ? 1 : 0)": 2,
    "('A: MemberExpression' ? 'B: number' : 0)": 2,
    "(-(1) * 'A: Identifier')": 2,
    "('A: MemberExpression' && ('B: CallExpression' !== -(1)))": 2,
    "(1 === 'A: Identifier')": 2,
    "(('A: string' === 'B: Identifier') ? 'C: MemberExpression' : 'D: MemberExpression')": 2,
    "('A: Identifier' < 'B: Identifier')": 2,
    "(('A: MemberExpression' === 'B: string') && ('C: Identifier' < 'D: MemberExpression'))": 2,
    "('A: MemberExpression' <= ('B: Identifier' - 'C: Identifier'))": 2,
    "('A: Identifier' - 'B: Identifier')": 2,
    "('A: MemberExpression' > 'B: MemberExpression')": 2,
    "('A: Identifier' <= 'B: Identifier')": 2,
    "(('A: Identifier' !== null) && (typeof('B: Identifier') === 'object'))": 1,
    "('A: Identifier' !== null)": 1,
    "(typeof('A: Identifier') === 'object')": 1,
    "('A: Identifier' || 'B: MemberExpression')": 1,
    "(('A: MemberExpression' === 'B: string') && 'C: CallExpression')": 1,
    "((typeof('A: Identifier') !== 'string') || (('B: Identifier' !== 'C: Identifier') && ('D: UnaryExpression' !== 'string')))": 1,
    "(('A: Identifier' !== 'B: Identifier') && (typeof('C: Identifier') !== 'string'))": 1,
    "(('A: Identifier' + 'B: string') + ('C: Identifier' || ''))": 1,
    "('A: string' + ('B: Identifier' || ''))": 1,
    "('A: Identifier' && ('B: string' === 'C: CallExpression'))": 1,
    "('A: CallExpression' && 'B: string')": 1,
    "('A: Identifier' && 'B: string')": 1,
    "((('A: string' === 'B: Identifier') || ('C: string' === 'D: Identifier')) || ('E: string' === 'F: Identifier'))": 1,
    "(('A: string' === 'B: Identifier') || ('C: string' === 'D: Identifier'))": 1,
    "(('A: Identifier' === 'B: Identifier') && ('C: Identifier' === 'D: Identifier'))": 1,
    "(!('A: MemberExpression') || 'B: MemberExpression')": 1,
    "('A: CallExpression' > -(1))": 1,
    "('A: MemberExpression' || (('B: MemberExpression' === 'C: string') ? 'D: string' : 'E: string'))": 1,
    "(('A: Identifier' > -(1)) && ('B: Identifier' === ('C: MemberExpression' - 'D: MemberExpression')))": 1,
    "('A: Identifier' > -(1))": 1,
    "('A: Identifier' === ('B: MemberExpression' - 'C: MemberExpression'))": 1,
    "(('A: MemberExpression' === 'B: Identifier') && 'C: Identifier')": 1,
    "(('A: MemberExpression' || 'B: MemberExpression') || '')": 1,
    "(('A: Identifier' !== '') && 'B: CallExpression')": 1,
    "('A: Identifier' !== '')": 1,
    "(('A: MemberExpression' || 'B: MemberExpression') || null)": 1,
    "((('A: LogicalExpression' || 'B: MemberExpression') || 'C: MemberExpression') || null)": 1,
    "((('A: LogicalExpression' || 'B: MemberExpression') || 'C: MemberExpression') || 'D: string')": 1,
    "('A: MemberExpression' ? 'B: MemberExpression' : null)": 1,
    "('A: number' * ('B: Identifier' + 1))": 1,
    "('A: Identifier' / 'B: number')": 1,
    "(('A: Identifier' ? 'B: CallExpression' : '') + 'C: string')": 1,
    "('A: Identifier' ? 'B: CallExpression' : '')": 1,
    "((('A: BinaryExpression' + 'B: MemberExpression') + 'C: string') + ('D: MemberExpression' || ''))": 1,
    "('A: Identifier' + 'B: CallExpression')": 1,
    "((('A: Identifier' + 'B: MemberExpression') + 'C: string') + ('D: MemberExpression' || ''))": 1,
    "(('A: Identifier' + 'B: MemberExpression') + 'C: string')": 1,
    "(('A: CallExpression' + ('B: MemberExpression' || 0)) / 'C: number')": 1,
    "('A: CallExpression' + ('B: MemberExpression' || 0))": 1,
    "((('A: UnaryExpression' || 'B: UnaryExpression') || !('C: MemberExpression')) || !('D: MemberExpression'))": 1,
    "((!('A: Identifier') || !('B: MemberExpression')) || !('C: MemberExpression'))": 1,
    "(!('A: Identifier') || !('B: MemberExpression'))": 1,
    "('A: MemberExpression' || (('B: MemberExpression' === 'C: string') ? 'D: number' : 'E: number'))": 1,
    "(('A: MemberExpression' === 'B: string') ? 'C: number' : 'D: number')": 1,
    "(!('A: MemberExpression') && ('B: MemberExpression' || ('C: MemberExpression' === '')))": 1,
    "('A: MemberExpression' || ('B: MemberExpression' === ''))": 1,
    "((('A: MemberExpression' !== null) && ('B: MemberExpression' !== 'C: Identifier')) && ('D: MemberExpression' !== ''))": 1,
    "(('A: MemberExpression' !== null) && ('B: MemberExpression' !== 'C: Identifier'))": 1,
    "('A: MemberExpression' !== '')": 1,
    "((('A: BinaryExpression' + 'B: ConditionalExpression') + 'C: string') + 'D: Identifier')": 1,
    "((('A: BinaryExpression' + 'B: ConditionalExpression') + ('C: Identifier' ? 'D: BinaryExpression' : '')) + 'E: string')": 1,
    "((('A: BinaryExpression' + 'B: MemberExpression') + ('C: MemberExpression' ? 'D: BinaryExpression' : '')) + ('E: Identifier' ? ('F: string' + 'G: CallExpression') : ''))": 1,
    "((('A: BinaryExpression' + 'B: string') + 'C: MemberExpression') + ('D: MemberExpression' ? ('E: string' + 'F: MemberExpression') : ''))": 1,
    "((('A: BinaryExpression' + 'B: MemberExpression') + 'C: string') + 'D: MemberExpression')": 1,
    "('A: Identifier' ? ('B: string' + 'C: CallExpression') : '')": 1,
    "((('A: BinaryExpression' + 'B: MemberExpression') + ('C: MemberExpression' ? 'D: BinaryExpression' : '')) + 'E: string')": 1,
    "((('A: Identifier' + 'B: string') + 'C: MemberExpression') + ('D: MemberExpression' ? ('E: string' + 'F: MemberExpression') : ''))": 1,
    "((typeof('A: Identifier') === 'undefined') ? 'B: MemberExpression' : 'C: Identifier')": 1,
    "((('A: MemberExpression' || 'B: MemberExpression') || ('C: MemberExpression' && 'D: BinaryExpression')) || 'E: MemberExpression')": 1,
    "(('A: MemberExpression' || 'B: MemberExpression') || ('C: MemberExpression' && ('D: UnaryExpression' !== 'boolean')))": 1,
    "('A: MemberExpression' && (typeof('B: MemberExpression') !== 'boolean'))": 1,
    "(typeof('A: MemberExpression') !== 'boolean')": 1,
    "('A: Identifier' && !('B: CallExpression'))": 1,
    "(!('A: Identifier') || ('B: CallExpression' === -(1)))": 1,
    "('A: Identifier' ? 'B: NewExpression' : 'C: ArrayExpression')": 1,
    "(typeof('A: Identifier') === 'number')": 1,
    "('A: CallExpression' / 'B: number')": 1,
    "('A: CallExpression' < 0)": 1,
    "((('A: BinaryExpression' + 'B: Identifier') + 'C: CallExpression') + 'D: Identifier')": 1,
    "((('A: Identifier' + 'B: string') + 'C: Identifier') + 'D: CallExpression')": 1,
    "('A: Identifier' === 'B: CallExpression')": 1,
    "(('A: string' === 'B: Identifier') && (('C: Identifier' !== 'D: string') || ('E: Identifier' !== 'F: Identifier')))": 1,
    "(('A: Identifier' !== 'B: string') || ('C: Identifier' !== 'D: Identifier'))": 1,
    "(('A: string' + 'B: string') + 'C: Identifier')": 1,
    "(!('A: Identifier') && (typeof('B: MemberExpression') === 'boolean'))": 1,
    "(typeof('A: MemberExpression') === 'boolean')": 1,
    "(('A: Identifier' ? 'B: string' : 'C: string') + 'D: CallExpression')": 1,
    "(('A: Identifier' ? ('B: Identifier' + 'C: string') : '') + 'D: CallExpression')": 1,
    "('A: Identifier' ? ('B: Identifier' + 'C: string') : '')": 1,
    "!(!('A: MemberExpression'))": 1,
    "((('A: MemberExpression' >= 'B: number') && ('C: MemberExpression' < 'D: number')) && 'E: CallExpression')": 1,
    "(!('A: Identifier') || !('B: CallExpression'))": 1,
    "((('A: MemberExpression' && 'B: BinaryExpression') && ('C: MemberExpression' !== 'D: number')) && ('E: MemberExpression' !== 'F: number'))": 1,
    "(('A: MemberExpression' && ('B: MemberExpression' !== 'C: string')) && ('D: MemberExpression' !== 'E: number'))": 1,
    "('A: MemberExpression' && ('B: MemberExpression' !== 'C: string'))": 1,
    "('A: MemberExpression' ? 'B: MemberExpression' : 'C: string')": 1,
    "(('A: MemberExpression' !== 'B: number') && ('C: MemberExpression' !== 'D: number'))": 1,
    "(!('A: MemberExpression') || !('B: MemberExpression'))": 1,
    "!(('A: CallExpression' === -(1)))": 1,
    "!(('A: Identifier' && 'B: Identifier'))": 1,
    "('A: MemberExpression' ? 'B: CallExpression' : 'C: ObjectExpression')": 1,
    "(!('A: MemberExpression') && ('B: MemberExpression' !== false))": 1,
    "((0 === 'A: CallExpression') || ('B: CallExpression' !== -(1)))": 1,
    "('A: CallExpression' === ('B: MemberExpression' - 1))": 1,
    "('A: MemberExpression' - 1)": 1,
    "('A: MemberExpression' + 'B: CallExpression')": 1,
    "('A: MemberExpression' + 'B: MemberExpression')": 1,
    "(!(('A: MemberExpression' || 'B: LogicalExpression')) && !('C: MemberExpression'))": 1,
    "!(('A: MemberExpression' || ('B: MemberExpression' && 'C: MemberExpression')))": 1,
    "('A: MemberExpression' || ('B: MemberExpression' && 'C: MemberExpression'))": 1,
    "((('A: MemberExpression' === 'B: string') && ('C: MemberExpression' === 'D: string')) || (('E: MemberExpression' === 'F: string') && ('G: MemberExpression' === 'H: string')))": 1,
    "(('A: Identifier' && 'B: CallExpression') && 'C: CallExpression')": 1,
    "((('A: UnaryExpression' && 'B: MemberExpression') && 'C: MemberExpression') && !('D: CallExpression'))": 1,
    "((!('A: MemberExpression') && 'B: MemberExpression') && 'C: MemberExpression')": 1,
    "(('A: MemberExpression' && !('B: MemberExpression')) ? 'C: MemberExpression' : 'D: MemberExpression')": 1,
    "(('A: string' === 'B: Identifier') ? 'C: Identifier' : 'D: MemberExpression')": 1,
    "(('A: MemberExpression' !== 'B: string') && (typeof('C: MemberExpression') !== 'undefined'))": 1,
    "(!('A: Identifier') && !('B: CallExpression'))": 1,
    "('A: Identifier' !== 'B: MemberExpression')": 1,
    "(('A: Identifier' && ('B: MemberExpression' === 'C: string')) || ('D: MemberExpression' === 'E: string'))": 1,
    "('A: Identifier' && ('B: MemberExpression' === 'C: string'))": 1,
    "('A: CallExpression' + 'B: CallExpression')": 1,
    "((('A: BinaryExpression' && 'B: UnaryExpression') && ('C: MemberExpression' === 0)) && 'D: MemberExpression')": 1,
    "((('A: MemberExpression' === 'B: Identifier') && !('C: Identifier')) && ('D: MemberExpression' === 0))": 1,
    "(('A: MemberExpression' === 'B: Identifier') && !('C: Identifier'))": 1,
    "((('A: MemberExpression' && 'B: MemberExpression') && 'C: MemberExpression') && !('D: CallExpression'))": 1,
    "('A: MemberExpression' < 0)": 1,
    "((typeof('A: MemberExpression') === 'number') && 'B: CallExpression')": 1,
    "(typeof('A: MemberExpression') === 'number')": 1,
    "((('A: MemberExpression' && 'B: MemberExpression') && ('C: MemberExpression' === 'D: string')) && 'E: MemberExpression')": 1,
    "(('A: MemberExpression' && 'B: MemberExpression') && ('C: MemberExpression' === 'D: string'))": 1,
    "((('A: MemberExpression' === 'B: Identifier') && 'C: MemberExpression') && (!('D: CallExpression') || !('E: MemberExpression')))": 1,
    "(('A: MemberExpression' === 'B: Identifier') && 'C: MemberExpression')": 1,
    "(!('A: CallExpression') || !('B: MemberExpression'))": 1,
    "('A: CallExpression' ? 'B: MemberExpression' : ('C: MemberExpression' + 'D: string'))": 1,
    "(('A: MemberExpression' && 'B: MemberExpression') ? 'C: MemberExpression' : 'D: Identifier')": 1,
    "('A: CallExpression' && !('B: MemberExpression'))": 1,
    "((('A: BinaryExpression' || 'B: LogicalExpression') || ('C: number' === 'D: Identifier')) || ('E: number' === 'F: Identifier'))": 1,
    "((('A: MemberExpression' === 'B: string') || ('C: BinaryExpression' && 'D: BinaryExpression')) || ('E: number' === 'F: Identifier'))": 1,
    "(('A: MemberExpression' === 'B: string') || (('C: Identifier' >= 'D: number') && ('E: Identifier' < 'F: number')))": 1,
    "(('A: Identifier' >= 'B: number') && ('C: Identifier' < 'D: number'))": 1,
    "('A: Identifier' >= 'B: number')": 1,
    "('A: Identifier' < 'B: number')": 1,
    "('A: MemberExpression' !== 0)": 1,
    "((('A: MemberExpression' === 'B: string') && ('C: MemberExpression' > 0)) && ('D: MemberExpression' === 'E: string'))": 1,
    "(('A: MemberExpression' === 'B: string') && ('C: MemberExpression' > 0))": 1,
    "((typeof('A: MemberExpression') === 'undefined') && !('B: MemberExpression'))": 1,
    "(('A: MemberExpression' === null) ? 'B: CallExpression' : '')": 1,
    "('A: MemberExpression' === null)": 1,
    "(!('A: MemberExpression') || ('B: Identifier' !== 'C: string'))": 1,
    "(!('A: Identifier') && 'B: MemberExpression')": 1,
    "('' === 'A: Identifier')": 1,
    "((typeof('A: Identifier') === 'string') ? 'B: CallExpression' : 'C: CallExpression')": 1,
    "(typeof('A: Identifier') === 'boolean')": 1,
    "(('A: MemberExpression' === 'B: number') || ('C: MemberExpression' === 'D: string'))": 1,
    "('A: MemberExpression' && 'B: Identifier')": 1,
    "(('A: string' + 'B: MemberExpression') + 'C: Identifier')": 1,
    "('A: MemberExpression' && !('B: Identifier'))": 1,
    "(!('A: MemberExpression') && 'B: Identifier')": 1,
    "(!('A: MemberExpression') && !('B: Identifier'))": 1,
    "('A: Identifier' !== 0)": 1,
    "((('A: Identifier' !== 'B: string') && ('C: Identifier' !== 'D: string')) && ('E: Identifier' !== 'F: string'))": 1,
    "('A: MemberExpression' && ('B: CallExpression' >= 0))": 1,
    "('A: CallExpression' >= 0)": 1,
    "('A: MemberExpression' instanceof 'B: MemberExpression')": 1,
    "((typeof('A: MemberExpression') === 'function') ? 'B: CallExpression' : ('C: string' + 'D: MemberExpression'))": 1,
    "('A: MemberExpression' instanceof 'B: Identifier')": 1,
    "((('A: CallExpression' + 'B: string') + 'C: Identifier') + 'D: string')": 1,
    "(+('A: MemberExpression') || 0)": 1,
    "('A: Identifier' > 'B: number')": 1,
    "('A: string' + ('B: Identifier' + 1))": 1,
    "((0 === 'A: Identifier') || ('B: number' === 'C: Identifier'))": 1,
    "(+('A: MemberExpression') === 'B: Identifier')": 1,
    "('A: MemberExpression' - 'B: number')": 1,
    "(('A: Identifier' * 'B: Identifier') & 'C: Identifier')": 1,
    "('A: Identifier' * 'B: Identifier')": 1,
    "(('A: Identifier' % 'B: number') + 'C: number')": 1,
    "('A: MemberExpression' === 1)": 1,
    "('A: MemberExpression' > 1)": 1,
    "(('A: CallExpression' >= 'B: number') ? 'C: ArrayExpression' : 'D: ArrayExpression')": 1,
    "('A: CallExpression' >= 'B: number')": 1,
    "('A: MemberExpression' ? 'B: MemberExpression' : (('C: MemberExpression' && 'D: MemberExpression') ? 'E: number' : 'F: number'))": 1,
    "(('A: MemberExpression' && 'B: MemberExpression') ? 'C: number' : 'D: number')": 1,
    "(('A: string' === 'B: CallExpression') ? 'C: object' : 'D: object')": 1,
    "('A: CallExpression' && 'B: CallExpression')": 1,
    "(('A: MemberExpression' === 'B: string') || ('C: MemberExpression' === ('D: BinaryExpression' + 'E: string')))": 1,
    "('A: MemberExpression' === (('B: string' + 'C: Identifier') + 'D: string'))": 1,
    "('A: Identifier' + 'B: Identifier')": 1,
    "('A: MemberExpression' ? 'B: CallExpression' : 'C: Identifier')": 1,
    "(('A: MemberExpression' !== 'B: string') || ('C: MemberExpression' !== false))": 1,
    "(('A: Identifier' ? 'B: string' : 'C: string') + 'D: string')": 1,
    "('A: Identifier' ? ('' + 'B: MemberExpression') : 'C: Identifier')": 1,
    "('A: Identifier' && !('B: Identifier'))": 1,
    "('A: MemberExpression' > 'B: number')": 1,
    "('A: string' + ('B: MemberExpression' || ''))": 1,
    "('A: string' + ('B: MemberExpression' || 'C: string'))": 1,
    "('A: number' * 'B: CallExpression')": 1,
    "('A: number' * 'B: Identifier')": 1,
    "((('A: Identifier' % 'B: number') ? 'C: MemberExpression' : 'D: MemberExpression') + 'E: string')": 1,
    "(('A: Identifier' % 'B: number') ? 'C: MemberExpression' : 'D: MemberExpression')": 1,
    "('A: Identifier' || 1)": 1,
    "((0 === 'A: Identifier') ? 'B: Identifier' : (('C: Identifier' + 'D: string') + ('E: Identifier' + 1)))": 1,
    "(('A: Identifier' + 'B: string') + ('C: Identifier' + 1))": 1,
    "(('A: Identifier' === ('B: Identifier' - 1)) ? 'C: Identifier' : (('D: Identifier' + 'E: string') + ('F: Identifier' + 'G: number')))": 1,
    "('A: Identifier' === ('B: Identifier' - 1))": 1,
    "('A: Identifier' - 1)": 1,
    "(('A: Identifier' + 'B: string') + ('C: Identifier' + 'D: number'))": 1,
    "('A: Identifier' + 'B: number')": 1,
    "(('A: MemberExpression' === 'B: string') || ('C: MemberExpression' === 'D: string'))": 1,
    "((typeof('A: Identifier') === 'function') && ('B: MemberExpression' === 'C: string'))": 1,
    "('A: MemberExpression' === true)": 1,
    "('A: Identifier' !== true)": 1,
    "(true === 'A: Identifier')": 1,
    "('A: MemberExpression' > 'B: Identifier')": 1,
    "(('A: MemberExpression' === 'B: MemberExpression') ? 'C: number' : 1)": 1,
    "('A: Identifier' ? ('B: string' + 'C: MemberExpression') : (('D: MemberExpression' + 'E: string') + 'F: Identifier'))": 1
}