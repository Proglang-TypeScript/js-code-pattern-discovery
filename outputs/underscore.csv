Found 6995 patterns and 910 unique patterns, 0 files could not be parsed:
{
    "!('A: CallExpression')": 435,
    "('A: Identifier' < 'B: Identifier')": 319,
    "void(0)": 268,
    "typeof('A: Identifier')": 248,
    "(null == 'A: Identifier')": 225,
    "!('A: Identifier')": 182,
    "-(1)": 175,
    "!(1)": 93,
    "('A: string' + 'B: Identifier')": 87,
    "+('A: Identifier')": 78,
    "('A: MemberExpression' === 'B: Identifier')": 76,
    "('A: Identifier' + 'B: Identifier')": 74,
    "('A: Identifier' - 1)": 64,
    "(('A: string' + 'B: Identifier') + 'C: string')": 63,
    "('A: Identifier' - 'B: Identifier')": 54,
    "!(0)": 54,
    "('A: Identifier' >= 0)": 50,
    "('A: Identifier' instanceof 'B: Identifier')": 49,
    "((null == 'A: Identifier') || 'B: Identifier')": 49,
    "('A: Identifier' === 'B: Identifier')": 49,
    "('A: Identifier' + 1)": 47,
    "('A: Identifier' !== 'B: Identifier')": 46,
    "!('A: MemberExpression')": 45,
    "('A: MemberExpression' - 1)": 45,
    "-('A: Identifier')": 41,
    "('A: Identifier' < 'B: MemberExpression')": 40,
    "-('A: number')": 39,
    "('A: Identifier' > 'B: Identifier')": 38,
    "('A: Identifier' ? 'B: MemberExpression' : 'C: Identifier')": 37,
    "('A: Identifier' != null)": 37,
    "(typeof('A: Identifier') !== 'undefined')": 36,
    "(!('A: CallExpression') && 'B: CallExpression')": 35,
    "(void(0) === 'A: Identifier')": 35,
    "('A: Identifier' && 'B: MemberExpression')": 35,
    "('A: MemberExpression' - 'B: Identifier')": 35,
    "('A: Identifier' > 0)": 34,
    "('A: MemberExpression' || 'B: Identifier')": 34,
    "('A: Identifier' || 'B: Identifier')": 33,
    "typeof('A: MemberExpression')": 33,
    "('A: string' + 'B: CallExpression')": 32,
    "('A: MemberExpression' !== 'B: Identifier')": 30,
    "('A: string' + 'B: MemberExpression')": 29,
    "('A: string' === 'B: Identifier')": 28,
    "('A: CallExpression' && 'B: CallExpression')": 27,
    "('A: MemberExpression' === 'B: MemberExpression')": 25,
    "('A: string' + 'B: string')": 25,
    "(('A: Identifier' >= 0) && ('B: Identifier' < 'C: Identifier'))": 23,
    "(('A: string' + 'B: CallExpression') + 'C: string')": 22,
    "('A: Identifier' || 'B: ArrayExpression')": 22,
    "('A: Identifier' ? 'B: CallExpression' : 'C: CallExpression')": 22,
    "(typeof('A: Identifier') === 'function')": 22,
    "('A: CallExpression' && !('B: CallExpression'))": 21,
    "('A: CallExpression' ? 'B: CallExpression' : 'C: Identifier')": 21,
    "(typeof('A: Identifier') == 'number')": 21,
    "(1 / 'A: Identifier')": 21,
    "('A: Identifier' + 'B: string')": 21,
    "(null != 'A: Identifier')": 21,
    "(1 / 0)": 21,
    "('A: Identifier' || 'B: AssignmentExpression')": 21,
    "('A: Identifier' in 'B: Identifier')": 20,
    "('A: string' in 'B: Identifier')": 20,
    "((('A: BinaryExpression' + 'B: string') + 'C: Identifier') + 'D: string')": 20,
    "('A: MemberExpression' !== 'B: MemberExpression')": 19,
    "('A: Identifier' && 'B: CallExpression')": 19,
    "('A: MemberExpression' === 0)": 19,
    "('A: CallExpression' || 'B: CallExpression')": 18,
    "!(!('A: Identifier'))": 18,
    "delete('A: MemberExpression')": 18,
    "('A: CallExpression' ? 'B: Identifier' : 'C: Identifier')": 17,
    "(0 === 'A: Identifier')": 17,
    "('A: Identifier' < 'B: number')": 16,
    "(typeof('A: Identifier') != 'object')": 16,
    "('A: MemberExpression' && 'B: MemberExpression')": 16,
    "('A: Identifier' % 'B: number')": 16,
    "(\"undefined\" != typeof('A: Identifier'))": 16,
    "('A: MemberExpression' > 1)": 15,
    "('A: Identifier' <= 0)": 15,
    "('A: Identifier' ? 'B: CallExpression' : 'C: Identifier')": 15,
    "(typeof('A: Identifier') == \"number\")": 15,
    "(('A: string' + 'B: MemberExpression') + 'C: string')": 14,
    "(('A: Identifier' > 0) ? 0 : ('B: Identifier' - 1))": 14,
    "((null == 'A: Identifier') ? void(0) : 'B: MemberExpression')": 14,
    "('A: Identifier' < 1)": 14,
    "((null == 'A: Identifier') || ('B: MemberExpression' < 1))": 14,
    "('A: MemberExpression' < 1)": 14,
    "(((null == 'A: Identifier') || 'B: Identifier') ? void(0) : 'C: ArrayExpression')": 14,
    "(((null == 'A: Identifier') || 'B: Identifier') ? 1 : 'C: Identifier')": 14,
    "('A: CallExpression' === 'B: CallExpression')": 14,
    "('A: CallExpression' ? 'B: Identifier' : 'C: CallExpression')": 14,
    "('A: MemberExpression' - 'B: MemberExpression')": 14,
    "('' + 'A: Identifier')": 13,
    "('A: Identifier' !== 0)": 13,
    "(typeof('A: Identifier') == 'function')": 13,
    "(null === 'A: Identifier')": 13,
    "((('A: string' + 'B: Identifier') + 'C: string') + 'D: Identifier')": 13,
    "(typeof('A: Identifier') === \"undefined\")": 13,
    "('A: MemberExpression' > 0)": 13,
    "('A: Identifier' > 1)": 12,
    "('A: string' === 'B: CallExpression')": 12,
    "('A: ThisExpression' instanceof 'B: Identifier')": 12,
    "(0 === ('A: Identifier' % 'B: number'))": 12,
    "('A: CallExpression' || 'B: AssignmentExpression')": 12,
    "(-(1) / 0)": 12,
    "('A: MemberExpression' === 'B: number')": 11,
    "('A: Identifier' && 'B: Identifier')": 11,
    "('A: Identifier' !== 'B: CallExpression')": 11,
    "(\"function\" === 'A: Identifier')": 11,
    "(typeof('A: Identifier') == \"object\")": 11,
    "('A: CallExpression' >= 0)": 10,
    "('A: CallExpression' + 'B: string')": 10,
    "('A: Identifier' === 'B: CallExpression')": 10,
    "('A: MemberExpression' || 0)": 10,
    "('A: CallExpression' ? 'B: CallExpression' : 'C: CallExpression')": 10,
    "(-('A: Identifier') === 'B: Identifier')": 10,
    "-(0)": 10,
    "('A: MemberExpression' ? 'B: string' : 'C: string')": 10,
    "('A: Identifier' != 'B: Identifier')": 10,
    "('A: Identifier' || 'B: CallExpression')": 9,
    "!(('A: Identifier' instanceof 'B: Identifier'))": 9,
    "('A: CallExpression' - 1)": 9,
    "('A: MemberExpression' || 'B: FunctionExpression')": 9,
    "('A: Identifier' || 0)": 9,
    "('A: Identifier' + 'B: MemberExpression')": 9,
    "('A: MemberExpression' === false)": 9,
    "('A: number' * 'B: Identifier')": 9,
    "('A: MemberExpression' > 'B: MemberExpression')": 9,
    "(\"object\" != typeof('A: Identifier'))": 9,
    "(\"\" + 'A: Identifier')": 9,
    "('A: Identifier' && 'B: AssignmentExpression')": 9,
    "((('A: BinaryExpression' + 'B: string') + 'C: MemberExpression') + 'D: string')": 8,
    "(('A: Identifier' && 'B: Identifier') && 'C: Identifier')": 8,
    "(('A: Identifier' != null) && 'B: CallExpression')": 8,
    "((('A: UnaryExpression' == 'object') && ('B: MemberExpression' === 'C: Identifier')) && 'D: Identifier')": 8,
    "((typeof('A: Identifier') == 'object') && ('B: MemberExpression' === 'C: Identifier'))": 8,
    "(typeof('A: Identifier') == 'object')": 8,
    "('A: CallExpression' - 'B: Identifier')": 8,
    "(0 === 'A: CallExpression')": 8,
    "(+('A: Identifier') !== +('B: Identifier'))": 8,
    "(+('A: Identifier') === +('B: Identifier'))": 8,
    "('A: Identifier' !== 'B: MemberExpression')": 8,
    "((null == 'A: Identifier') || (('B: BinaryExpression' && 'C: BinaryExpression') && ('D: Identifier' != null)))": 8,
    "((('A: UnaryExpression' == 'number') && ('B: UnaryExpression' != 'object')) && ('C: Identifier' != null))": 8,
    "((typeof('A: Identifier') == 'number') && (typeof('B: MemberExpression') != 'object'))": 8,
    "(typeof('A: MemberExpression') != 'object')": 8,
    "('A: Identifier' + 'B: CallExpression')": 8,
    "(('A: Identifier' + 'B: Identifier') / 'C: number')": 8,
    "(!('A: Identifier') && 'B: Identifier')": 8,
    "('A: number' === ('B: MemberExpression' * 'C: MemberExpression'))": 8,
    "('A: MemberExpression' * 'B: MemberExpression')": 8,
    "(typeof('A: Identifier') != 'undefined')": 8,
    "!(!('A: MemberExpression'))": 8,
    "(\"object\" === 'A: Identifier')": 8,
    "('A: MemberExpression' ? 'B: CallExpression' : 'C: Identifier')": 7,
    "(('A: CallExpression' && 'B: MemberExpression') || 'C: Identifier')": 7,
    "('A: CallExpression' && 'B: MemberExpression')": 7,
    "(('A: Identifier' < 'B: number') || (null == 'C: Identifier'))": 7,
    "(('A: Identifier' >= 0) ? 'B: Identifier' : 'C: CallExpression')": 7,
    "(('A: Identifier' >= 0) ? 'B: CallExpression' : (('C: Identifier' + 'D: Identifier') + 1))": 7,
    "(('A: Identifier' + 'B: Identifier') + 1)": 7,
    "(('A: MemberExpression' === 'B: Identifier') ? 'C: Identifier' : -(1))": 7,
    "(('A: Identifier' > 0) ? 'B: Identifier' : ('C: Identifier' - 1))": 7,
    "('A: MemberExpression' >= 'B: number')": 7,
    "('A: Identifier' <= 'B: Identifier')": 7,
    "('A: Identifier' ? 'B: Identifier' : void(0))": 7,
    "('A: CallExpression' && ('B: CallExpression' || 'C: CallExpression'))": 7,
    "('A: Identifier' ? 'B: ArrayExpression' : 'C: ObjectExpression')": 7,
    "(('A: Identifier' !== 'B: Identifier') || !('C: CallExpression'))": 7,
    "((null == 'A: Identifier') ? 'B: number' : 'C: Identifier')": 7,
    "((('A: LogicalExpression' || 'B: LogicalExpression') || 'C: CallExpression') || 'D: ObjectExpression')": 7,
    "((('A: LogicalExpression' && 'B: Identifier') || ('C: LogicalExpression' && 'D: Identifier')) || 'E: CallExpression')": 7,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && 'C: Identifier') || (('D: BinaryExpression' && 'E: BinaryExpression') && 'F: Identifier'))": 7,
    "('A: UpdateExpression' < 1)": 7,
    "('A: UpdateExpression' > 0)": 7,
    "('A: Identifier' <= 1)": 7,
    "((null == 'A: Identifier') || ('B: Identifier' < 1))": 7,
    "('A: MemberExpression' - (('B: BinaryExpression' || 'C: Identifier') ? 1 : 'D: Identifier'))": 7,
    "((null == 'A: Identifier') ? 'B: Identifier' : 'C: CallExpression')": 7,
    "('A: MemberExpression' === 1)": 7,
    "(('A: CallExpression' || 'B: CallExpression') || 'C: CallExpression')": 7,
    "((null == 'A: Identifier') || (null == 'B: Identifier'))": 7,
    "(('A: Identifier' && ('B: string' == 'C: Identifier')) && 'D: CallExpression')": 7,
    "('A: Identifier' && ('B: string' == 'C: Identifier'))": 7,
    "('A: string' == 'B: Identifier')": 7,
    "(1 / +('A: Identifier'))": 7,
    "(!('A: Identifier') && 'B: CallExpression')": 7,
    "(('A: MemberExpression' === 'B: MemberExpression') && ('C: MemberExpression' === 'D: MemberExpression'))": 7,
    "(('A: Identifier' !== 'B: Identifier') && !(('C: LogicalExpression' && 'D: BinaryExpression')))": 7,
    "!((('A: LogicalExpression' && 'B: CallExpression') && ('C: Identifier' instanceof 'D: Identifier')))": 7,
    "((('A: CallExpression' && 'B: BinaryExpression') && 'C: CallExpression') && ('D: Identifier' instanceof 'E: Identifier'))": 7,
    "(('A: CallExpression' && ('B: Identifier' instanceof 'C: Identifier')) && 'D: CallExpression')": 7,
    "('A: CallExpression' && ('B: Identifier' instanceof 'C: Identifier'))": 7,
    "((!('A: CallExpression') && 'B: CallExpression') && !('C: CallExpression'))": 7,
    "typeof('A: object')": 7,
    "(('A: MemberExpression' !== 'B: MemberExpression') || !(('C: Identifier' in 'D: Identifier')))": 7,
    "!(('A: Identifier' in 'B: Identifier'))": 7,
    "('A: Identifier' ? ('B: CallExpression' && !('C: CallExpression')) : ('D: CallExpression' && 'E: CallExpression'))": 7,
    "(('A: MemberExpression' === 'B: Identifier') ? 'C: MemberExpression' : 'D: MemberExpression')": 7,
    "('A: Identifier' ? 0 : 1)": 7,
    "('A: CallExpression' * (('B: Identifier' - 'C: Identifier') + 1))": 7,
    "(('A: Identifier' - 'B: Identifier') + 1)": 7,
    "(('A: Identifier' < 'B: Identifier') ? -(1) : 1)": 7,
    "(('A: Identifier' - 'B: Identifier') / 'C: Identifier')": 7,
    "((null == 'A: Identifier') ? ('B: MemberExpression' - 1) : +('C: Identifier'))": 7,
    "('A: CallExpression' ? 'B: MemberExpression' : 'C: MemberExpression')": 7,
    "(('A: Identifier' > 'B: Identifier') || (void(0) === 'C: Identifier'))": 7,
    "(('A: Identifier' < 'B: Identifier') || (void(0) === 'C: Identifier'))": 7,
    "('A: CallExpression' < 'B: Identifier')": 7,
    "((('A: string' + 'B: string') + 'C: Identifier') + 'D: string')": 7,
    "(('A: string' + 'B: string') + 'C: Identifier')": 7,
    "('A: Identifier' - ('B: Identifier' - 'C: Identifier'))": 7,
    "(('A: Identifier' <= 0) || ('B: Identifier' > 'C: Identifier'))": 7,
    "('A: CallExpression' ? 'B: Identifier' : 'C: ArrayExpression')": 7,
    "('A: Identifier' && !('B: Identifier'))": 7,
    "('A: Identifier' ? ('B: Identifier' + 'C: Identifier') : 'D: Identifier')": 7,
    "(('A: Identifier' && 'B: MemberExpression') || 0)": 7,
    "((typeof('A: Identifier') == 'function') ? 'B: CallExpression' : 'C: MemberExpression')": 7,
    "('A: MemberExpression' === null)": 7,
    "(('A: Identifier' + 'B: string') + 'C: Identifier')": 7,
    "('A: MemberExpression' + 'B: string')": 7,
    "('A: MemberExpression' / 'B: number')": 7,
    "(('A: Identifier' - 'B: Identifier') - 'C: Identifier')": 7,
    "('A: Identifier' !== -(1))": 6,
    "(typeof('A: Identifier') != 'function')": 6,
    "('A: number' === 'B: Identifier')": 6,
    "('A: MemberExpression' * 'B: Identifier')": 6,
    "((('A: BinaryExpression' + 'B: Identifier') + 'C: string') + 'D: Identifier')": 6,
    "(('A: string' + 'B: string') + 'C: string')": 6,
    "('A: CallExpression' !== -(1))": 6,
    "((('A: BinaryExpression' + 'B: string') + 'C: CallExpression') + 'D: string')": 6,
    "((('A: UnaryExpression' == \"object\") && ('B: MemberExpression' === 'C: Identifier')) && 'D: Identifier')": 6,
    "((typeof('A: Identifier') == \"object\") && ('B: MemberExpression' === 'C: Identifier'))": 6,
    "((null != 'A: Identifier') && 'B: CallExpression')": 6,
    "(('A: Identifier' instanceof 'B: Identifier') && 'C: AssignmentExpression')": 6,
    "(+('A: Identifier') != +('B: Identifier'))": 6,
    "(+('A: Identifier') == +('B: Identifier'))": 6,
    "((null == 'A: Identifier') && 'B: SequenceExpression')": 6,
    "(!(1) === 'A: MemberExpression')": 6,
    "('A: Identifier' || 'B: SequenceExpression')": 6,
    "((null == 'A: Identifier') || (('B: BinaryExpression' && 'C: BinaryExpression') && (null != 'D: Identifier')))": 6,
    "((('A: UnaryExpression' == \"number\") && (\"object\" != 'B: UnaryExpression')) && (null != 'C: Identifier'))": 6,
    "((typeof('A: Identifier') == \"number\") && (\"object\" != typeof('B: MemberExpression')))": 6,
    "(\"object\" != typeof('A: MemberExpression'))": 6,
    "(null != 'A: AssignmentExpression')": 6,
    "('A: Identifier' === (-(1) / 0))": 6,
    "('A: Identifier' === (1 / 0))": 6,
    "('A: CallExpression' ? 'B: SequenceExpression' : 'C: SequenceExpression')": 6,
    "(('A: MemberExpression' > 1) && 'B: AssignmentExpression')": 6,
    "(((null == 'A: Identifier') || ('B: MemberExpression' < 1)) ? (('C: BinaryExpression' || 'D: Identifier') ? void(0) : 'E: ArrayExpression') : (('F: BinaryExpression' || 'G: Identifier') ? 'H: MemberExpression' : 'I: CallExpression'))": 6,
    "(((null == 'A: Identifier') || 'B: Identifier') ? 'C: MemberExpression' : 'D: CallExpression')": 6,
    "('A: CallExpression' || 'B: SequenceExpression')": 6,
    "((null != 'A: Identifier') && 'B: AssignmentExpression')": 6,
    "('A: string' !== 'B: Identifier')": 6,
    "('A: MemberExpression' === true)": 5,
    "(false === 'A: Identifier')": 5,
    "('A: Identifier' ? 'B: Identifier' : 'C: Identifier')": 5,
    "(('A: string' in 'B: Identifier') && ('C: string' in 'D: Identifier'))": 5,
    "('function' === 'A: Identifier')": 5,
    "('object' === 'A: Identifier')": 5,
    "('A: Identifier' ? 'B: Identifier' : 'C: CallExpression')": 5,
    "!(('A: ThisExpression' instanceof 'B: Identifier'))": 5,
    "('A: MemberExpression' + 'B: MemberExpression')": 5,
    "('A: MemberExpression' === 'B: string')": 5,
    "(typeof('A: MemberExpression') === \"function\")": 5,
    "((typeof('A: Identifier') === \"undefined\") ? \"undefined\" : 'B: CallExpression')": 5,
    "('A: MemberExpression' < 'B: number')": 5,
    "(typeof('A: MemberExpression') === \"number\")": 5,
    "('A: CallExpression' - 'B: MemberExpression')": 5,
    "('A: MemberExpression' + 1)": 5,
    "('A: CallExpression' !== 'B: CallExpression')": 5,
    "(('A: MemberExpression' > 'B: MemberExpression') ? 'C: Identifier' : 'D: Identifier')": 5,
    "(typeof('A: Identifier') == \"function\")": 5,
    "((('A: string' + 'B: MemberExpression') + 'C: string') + 'D: MemberExpression')": 4,
    "((('A: Identifier' in 'B: Identifier') && ('C: MemberExpression' !== 'D: MemberExpression')) && !('E: CallExpression'))": 4,
    "(('A: Identifier' in 'B: Identifier') && ('C: MemberExpression' !== 'D: MemberExpression'))": 4,
    "(!('A: Identifier') || ('B: MemberExpression' === void(0)))": 4,
    "('A: MemberExpression' === void(0))": 4,
    "((null == 'A: Identifier') ? '' : ('' + 'B: Identifier'))": 4,
    "(('A: Identifier' >= 0) ? ('B: Identifier' + 'C: Identifier') : -(1))": 4,
    "((('A: UnaryExpression' == 'number') && ('B: Identifier' >= 0)) && ('C: Identifier' <= 'D: Identifier'))": 4,
    "((typeof('A: Identifier') == 'number') && ('B: Identifier' >= 0))": 4,
    "(!('A: Identifier') && ('B: Identifier' !== 0))": 4,
    "((typeof('A: Identifier') !== 'undefined') ? 'B: MemberExpression' : null)": 4,
    "((typeof('A: Identifier') !== 'undefined') && 'B: CallExpression')": 4,
    "((typeof('A: Identifier') != 'number') || 'B: Identifier')": 4,
    "(typeof('A: Identifier') != 'number')": 4,
    "(('A: Identifier' !== void(0)) && ('B: Identifier' !== -(1)))": 4,
    "('A: Identifier' !== void(0))": 4,
    "(((true === 'A: Identifier') || (false === 'B: Identifier')) || ('C: string' === 'D: CallExpression'))": 4,
    "((true === 'A: Identifier') || (false === 'B: Identifier'))": 4,
    "(true === 'A: Identifier')": 4,
    "((('A: Identifier' != null) && 'B: CallExpression') && 'C: CallExpression')": 4,
    "!(!(('A: Identifier' && 'B: BinaryExpression')))": 4,
    "!(('A: Identifier' && ('B: MemberExpression' === 1)))": 4,
    "('A: Identifier' && ('B: MemberExpression' === 1))": 4,
    "((typeof('A: Identifier') == 'number') && (('B: CallExpression' || 'C: CallExpression') || 'D: CallExpression'))": 4,
    "(('A: Identifier' !== 0) || ((1 / 'B: Identifier') === (1 / 'C: Identifier')))": 4,
    "((1 / 'A: Identifier') === (1 / 'B: Identifier'))": 4,
    "((('A: Identifier' !== 'function') && ('B: Identifier' !== 'object')) && (typeof('C: Identifier') != 'object'))": 4,
    "(('A: Identifier' !== 'function') && ('B: Identifier' !== 'object'))": 4,
    "('A: Identifier' !== 'function')": 4,
    "('A: Identifier' !== 'object')": 4,
    "(('' + 'A: Identifier') === ('' + 'B: Identifier'))": 4,
    "((+('A: Identifier') === 0) ? ((1 / 'B: UnaryExpression') === (1 / 'C: Identifier')) : (+('D: Identifier') === +('E: Identifier')))": 4,
    "(+('A: Identifier') === 0)": 4,
    "((1 / +('A: Identifier')) === (1 / 'B: Identifier'))": 4,
    "((typeof('A: Identifier') != 'object') || (typeof('B: Identifier') != 'object'))": 4,
    "((('A: Identifier' !== 'B: Identifier') && !('C: LogicalExpression')) && (('D: string' in 'E: Identifier') && ('F: string' in 'G: Identifier')))": 4,
    "!(('A: CallExpression' && 'B: CallExpression'))": 4,
    "((('A: UnaryExpression' != 'function') && ('B: UnaryExpression' != 'object')) && (typeof('C: Identifier') != 'function'))": 4,
    "((typeof('A: object') != 'function') && (typeof('B: Identifier') != 'object'))": 4,
    "(typeof('A: object') != 'function')": 4,
    "((typeof('A: Identifier') == 'function') || false)": 4,
    "(('function' === 'A: Identifier') || (('object' === 'B: Identifier') && !('C: UnaryExpression')))": 4,
    "(('object' === 'A: Identifier') && !(!('B: Identifier')))": 4,
    "(('A: Identifier' != null) && ('B: Identifier' > 'C: Identifier'))": 4,
    "(('A: Identifier' > 'B: Identifier') || (('C: UnaryExpression' === 'D: Identifier') && ('E: UnaryExpression' === 'F: Identifier')))": 4,
    "((-('A: Identifier') === 'B: Identifier') && (-('C: Identifier') === 'D: Identifier'))": 4,
    "('' + ('A: Identifier' ? 'B: CallExpression' : 'C: Identifier'))": 4,
    "(('A: Identifier' != null) && ('B: Identifier' < 'C: Identifier'))": 4,
    "(('A: Identifier' < 'B: Identifier') || (('C: Identifier' === 'D: Identifier') && ('E: Identifier' === 'F: Identifier')))": 4,
    "(('A: Identifier' === 'B: Identifier') && ('C: Identifier' === 'D: Identifier'))": 4,
    "(('A: MemberExpression' === false) ? 0 : 'B: CallExpression')": 4,
    "(!('A: Identifier') && ('B: MemberExpression' === false))": 4,
    "(!('A: Identifier') && ('B: MemberExpression' !== false))": 4,
    "('A: MemberExpression' !== false)": 4,
    "((('A: string' === 'B: Identifier') || ('C: string' === 'D: Identifier')) && ('E: MemberExpression' === 0))": 4,
    "(('A: string' === 'B: Identifier') || ('C: string' === 'D: Identifier'))": 4,
    "(!('A: Identifier') || ('B: Identifier' !== 'C: Identifier'))": 4,
    "('A: UpdateExpression' + '')": 4,
    "('A: Identifier' - 'B: number')": 4,
    "+('A: NewExpression')": 4,
    "(typeof('A: Identifier') === 'object')": 4,
    "(typeof('A: Identifier') === \"function\")": 4,
    "('A: Identifier' !== null)": 4,
    "(typeof('A: Identifier') !== \"undefined\")": 4,
    "(('A: MemberExpression' + 'B: string') + 'C: MemberExpression')": 4,
    "((('A: string' + 'B: string') + 'C: MemberExpression') + 'D: string')": 4,
    "(('A: string' + 'B: string') + 'C: MemberExpression')": 4,
    "('A: Identifier' >= ('B: MemberExpression' / 'C: number'))": 4,
    "('A: Identifier' * 'B: Identifier')": 3,
    "+(0)": 3,
    "('A: Identifier' > 'B: number')": 3,
    "(('A: string' === 'B: Identifier') ? true : null)": 3,
    "('A: CallExpression' > 'B: number')": 3,
    "('A: MemberExpression' || 'B: MemberExpression')": 3,
    "('A: CallExpression' + 'B: MemberExpression')": 3,
    "('A: MemberExpression' * 'B: number')": 3,
    "(typeof('A: Identifier') !== 'function')": 3,
    "('A: MemberExpression' < 'B: MemberExpression')": 3,
    "(typeof('A: MemberExpression') !== \"undefined\")": 3,
    "('A: Identifier' << 'B: number')": 3,
    "('A: MemberExpression' > 'B: number')": 3,
    "(\"function\" === 'A: CallExpression')": 3,
    "('A: CallExpression' !== \"string\")": 3,
    "('A: CallExpression' !== \"function\")": 3,
    "(typeof('A: Identifier') === 'undefined')": 3,
    "('A: MemberExpression' !== 0)": 3,
    "('A: MemberExpression' && 'B: CallExpression')": 3,
    "('A: MemberExpression' && ('B: MemberExpression' > 0))": 3,
    "('A: Identifier' instanceof 'B: MemberExpression')": 3,
    "('A: MemberExpression' === \"\")": 3,
    "('A: CallExpression' > -(1))": 3,
    "((('A: BinaryExpression' + 'B: CallExpression') + 'C: string') + 'D: string')": 3,
    "(('A: Identifier' + 'B: Identifier') - 'C: Identifier')": 3,
    "('A: Identifier' >= 'B: Identifier')": 3,
    "((\"undefined\" != typeof('A: Identifier')) ? 'B: MemberExpression' : null)": 3,
    "((\"function\" === 'A: Identifier') || ((\"object\" === 'B: Identifier') && !('C: UnaryExpression')))": 3,
    "((\"object\" === 'A: Identifier') && !(!('B: Identifier')))": 3,
    "((('A: UnaryExpression' === 'B: Identifier') || ('C: UnaryExpression' === 'D: Identifier')) || ('E: string' === 'F: CallExpression'))": 3,
    "((!(0) === 'A: Identifier') || (!(1) === 'B: Identifier'))": 3,
    "(!(0) === 'A: Identifier')": 3,
    "(!(1) === 'A: Identifier')": 3,
    "!((!('A: Identifier') || (1 !== 'B: MemberExpression')))": 3,
    "(!('A: Identifier') || (1 !== 'B: MemberExpression'))": 3,
    "(1 !== 'A: MemberExpression')": 3,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && (\"function\" != 'C: UnaryExpression')) && 'D: AssignmentExpression')": 3,
    "(((\"function\" != 'A: UnaryExpression') && (\"object\" != 'B: UnaryExpression')) && (\"function\" != typeof('C: Identifier')))": 3,
    "((\"function\" != typeof('A: object')) && (\"object\" != typeof('B: Identifier')))": 3,
    "(\"function\" != typeof('A: object'))": 3,
    "(\"function\" != typeof('A: Identifier'))": 3,
    "((typeof('A: Identifier') == \"function\") || !(1))": 3,
    "((\"undefined\" != typeof('A: Identifier')) && 'B: CallExpression')": 3,
    "(((null != 'A: Identifier') && 'B: CallExpression') && 'C: CallExpression')": 3,
    "((('A: UnaryExpression' == \"number\") && ('B: Identifier' >= 0)) && ('C: Identifier' <= 'D: Identifier'))": 3,
    "((typeof('A: Identifier') == \"number\") && ('B: Identifier' >= 0))": 3,
    "(!(0) === 'A: MemberExpression')": 3,
    "(('A: CallExpression' && !('B: CallExpression')) && 'C: CallExpression')": 3,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && !('C: CallExpression')) && 'D: CallExpression')": 3,
    "((('A: AssignmentExpression' in 'B: Identifier') && ('C: MemberExpression' !== 'D: MemberExpression')) && !('E: CallExpression'))": 3,
    "(('A: AssignmentExpression' in 'B: Identifier') && ('C: MemberExpression' !== 'D: MemberExpression'))": 3,
    "('A: AssignmentExpression' in 'B: Identifier')": 3,
    "((('A: UnaryExpression' == \"number\") && ('B: LogicalExpression' || 'C: CallExpression')) ? (0 === 'D: Identifier') : (0 === 'E: CallExpression'))": 3,
    "((typeof('A: Identifier') == \"number\") && (('B: CallExpression' || 'C: CallExpression') || 'D: CallExpression'))": 3,
    "(('A: Identifier' instanceof 'B: Identifier') ? 'C: Identifier' : (('D: ThisExpression' instanceof 'E: Identifier') ? void('F: AssignmentExpression') : 'G: NewExpression'))": 3,
    "(('A: ThisExpression' instanceof 'B: Identifier') ? void('C: AssignmentExpression') : 'D: NewExpression')": 3,
    "void('A: AssignmentExpression')": 3,
    "((0 !== 'A: Identifier') || ((1 / 'B: Identifier') == (1 / 'C: Identifier')))": 3,
    "(0 !== 'A: Identifier')": 3,
    "((1 / 'A: Identifier') == (1 / 'B: Identifier'))": 3,
    "((('A: BinaryExpression' || 'B: BinaryExpression') || ('C: UnaryExpression' == \"object\")) && 'D: CallExpression')": 3,
    "(((\"function\" === 'A: Identifier') || (\"object\" === 'B: Identifier')) || (typeof('C: Identifier') == \"object\"))": 3,
    "((\"function\" === 'A: Identifier') || (\"object\" === 'B: Identifier'))": 3,
    "((\"\" + 'A: Identifier') == (\"\" + 'B: Identifier'))": 3,
    "((+('A: Identifier') != +('B: Identifier')) ? (+('C: Identifier') != +('D: Identifier')) : (('E: UnaryExpression' == 0) ? ('F: BinaryExpression' == 'G: BinaryExpression') : ('H: UnaryExpression' == 'I: UnaryExpression')))": 3,
    "((+('A: Identifier') == 0) ? ((1 / 'B: UnaryExpression') == (1 / 'C: Identifier')) : (+('D: Identifier') == +('E: Identifier')))": 3,
    "(+('A: Identifier') == 0)": 3,
    "((1 / +('A: Identifier')) == (1 / 'B: Identifier'))": 3,
    "((\"object\" != typeof('A: Identifier')) || (\"object\" != typeof('B: Identifier')))": 3,
    "((('A: BinaryExpression' && 'B: UnaryExpression') && ('C: string' in 'D: Identifier')) && ('E: string' in 'F: Identifier'))": 3,
    "((('A: Identifier' !== 'B: Identifier') && !('C: LogicalExpression')) && ('D: string' in 'E: Identifier'))": 3,
    "('A: AssignmentExpression' !== 'B: MemberExpression')": 3,
    "(!('A: CallExpression') || !('B: CallExpression'))": 3,
    "(('A: Identifier' && ('B: UnaryExpression' !== 'C: MemberExpression')) || 'D: AssignmentExpression')": 3,
    "('A: Identifier' && (void(0) !== 'B: MemberExpression'))": 3,
    "(void(0) !== 'A: MemberExpression')": 3,
    "('A: CallExpression' ? ('B: CallExpression' ? 'C: CallExpression' : 'D: CallExpression') : 'E: Identifier')": 3,
    "((null == 'A: Identifier') ? 'B: Identifier' : ('C: CallExpression' ? 'D: CallExpression' : ('E: LogicalExpression' ? 'F: CallExpression' : 'G: CallExpression')))": 3,
    "('A: CallExpression' ? 'B: CallExpression' : (('C: CallExpression' && 'D: UnaryExpression') ? 'E: CallExpression' : 'F: CallExpression'))": 3,
    "(('A: CallExpression' && !('B: CallExpression')) ? 'C: CallExpression' : 'D: CallExpression')": 3,
    "(('A: MemberExpression' !== 'B: Identifier') ? 'C: CallExpression' : 'D: CallExpression')": 3,
    "((null == 'A: Identifier') ? 'B: Identifier' : 'C: FunctionExpression')": 3,
    "((null == 'A: Identifier') ? \"\" : (\"\" + 'B: Identifier'))": 3,
    "((!('A: Identifier') && 'B: Identifier') && 'C: AssignmentExpression')": 3,
    "('A: Identifier' ? 'B: AssignmentExpression' : ('C: Identifier' ? 'D: AssignmentExpression' : ('E: Identifier' && 'F: AssignmentExpression')))": 3,
    "('A: Identifier' ? 'B: AssignmentExpression' : ('C: Identifier' && 'D: AssignmentExpression'))": 3,
    "((void(0) === 'A: Identifier') && 'B: SequenceExpression')": 3,
    "('A: UpdateExpression' + \"\")": 3,
    "('A: Identifier' || (0 === 'B: Identifier'))": 3,
    "(\"\" + ('A: Identifier' ? 'B: CallExpression' : 'C: Identifier'))": 3,
    "((!(1) === 'A: MemberExpression') ? 0 : 'B: CallExpression')": 3,
    "(('A: Identifier' || ('B: UnaryExpression' !== 'C: MemberExpression')) || 'D: AssignmentExpression')": 3,
    "('A: Identifier' || (!(1) !== 'B: MemberExpression'))": 3,
    "(!(1) !== 'A: MemberExpression')": 3,
    "((('A: Identifier' <= 0) || ('B: Identifier' > 'C: Identifier')) ? 'D: SequenceExpression' : (('E: Identifier' || 'F: BinaryExpression') || 'G: AssignmentExpression'))": 3,
    "('A: Identifier' && 'B: SequenceExpression')": 3,
    "(('A: Identifier' || ('B: UnaryExpression' === 'C: MemberExpression')) || 'D: AssignmentExpression')": 3,
    "('A: Identifier' || (!(1) === 'B: MemberExpression'))": 3,
    "(('A: Identifier' > 'B: Identifier') ? 'C: AssignmentExpression' : 'D: SequenceExpression')": 3,
    "(('A: UpdateExpression' > 0) && 'B: AssignmentExpression')": 3,
    "(('A: Identifier' <= 1) && 'B: AssignmentExpression')": 3,
    "(('A: CallExpression' < 'B: Identifier') ? 'C: AssignmentExpression' : 'D: AssignmentExpression')": 3,
    "(('A: Identifier' > 0) ? 'B: AssignmentExpression' : 'C: AssignmentExpression')": 3,
    "(('A: AssignmentExpression' >= 0) ? ('B: Identifier' + 'C: Identifier') : -(1))": 3,
    "('A: AssignmentExpression' >= 0)": 3,
    "((void(0) !== 'A: Identifier') && (-(1) !== 'B: Identifier'))": 3,
    "(void(0) !== 'A: Identifier')": 3,
    "(-(1) !== 'A: Identifier')": 3,
    "(((\"number\" != 'A: UnaryExpression') || 'B: Identifier') && 'C: AssignmentExpression')": 3,
    "((\"number\" != typeof('A: Identifier')) || 'B: Identifier')": 3,
    "(\"number\" != typeof('A: Identifier'))": 3,
    "('A: CallExpression' ? 'B: AssignmentExpression' : 'C: SequenceExpression')": 3,
    "(('A: Identifier' && 'B: MemberExpression') && 'C: AssignmentExpression')": 3,
    "(((null != 'A: AssignmentExpression') && ('B: Identifier' > 'C: Identifier')) && 'D: AssignmentExpression')": 3,
    "((null != 'A: AssignmentExpression') && ('B: Identifier' > 'C: Identifier'))": 3,
    "((('A: AssignmentExpression' > 'B: Identifier') || ('C: BinaryExpression' && 'D: BinaryExpression')) && 'E: SequenceExpression')": 3,
    "(('A: AssignmentExpression' > 'B: Identifier') || (('C: Identifier' === 'D: BinaryExpression') && ('E: Identifier' === 'F: BinaryExpression')))": 3,
    "('A: AssignmentExpression' > 'B: Identifier')": 3,
    "(('A: Identifier' === ('B: UnaryExpression' / 0)) && ('C: Identifier' === ('D: UnaryExpression' / 0)))": 3,
    "(((null != 'A: AssignmentExpression') && ('B: Identifier' < 'C: Identifier')) && 'D: AssignmentExpression')": 3,
    "((null != 'A: AssignmentExpression') && ('B: Identifier' < 'C: Identifier'))": 3,
    "((('A: AssignmentExpression' < 'B: Identifier') || ('C: BinaryExpression' && 'D: BinaryExpression')) && 'E: SequenceExpression')": 3,
    "(('A: AssignmentExpression' < 'B: Identifier') || (('C: Identifier' === 'D: BinaryExpression') && ('E: Identifier' === 'F: BinaryExpression')))": 3,
    "('A: AssignmentExpression' < 'B: Identifier')": 3,
    "(('A: Identifier' === (1 / 0)) && ('B: Identifier' === (1 / 0)))": 3,
    "('A: Identifier' ? ('B: CallExpression' ? 'C: CallExpression' : ('D: CallExpression' ? 'E: CallExpression' : 'F: ConditionalExpression')) : 'G: ArrayExpression')": 3,
    "('A: CallExpression' ? 'B: CallExpression' : ('C: CallExpression' ? 'D: CallExpression' : ('E: CallExpression' ? 'F: CallExpression' : 'G: CallExpression')))": 3,
    "('A: CallExpression' ? 'B: CallExpression' : ('C: CallExpression' ? 'D: CallExpression' : 'E: CallExpression'))": 3,
    "('A: CallExpression' ? 'B: CallExpression' : 'C: AssignmentExpression')": 3,
    "('A: CallExpression' ? 'B: UpdateExpression' : 'C: AssignmentExpression')": 3,
    "((null == 'A: Identifier') ? 0 : ('B: CallExpression' ? 'C: MemberExpression' : 'D: MemberExpression'))": 3,
    "('A: CallExpression' && 'B: AssignmentExpression')": 3,
    "(('A: Identifier' && !('B: Identifier')) ? 'C: SequenceExpression' : ('D: Identifier' ? ('E: CallExpression' || 'F: SequenceExpression') : ('G: CallExpression' || 'H: CallExpression')))": 3,
    "(('A: Identifier' && ('B: Identifier' === 'C: Identifier')) || 'D: CallExpression')": 3,
    "('A: Identifier' && ('B: Identifier' === 'C: Identifier'))": 3,
    "('A: Identifier' ? ('B: CallExpression' || 'C: SequenceExpression') : ('D: CallExpression' || 'E: CallExpression'))": 3,
    "(('A: Identifier' < 'B: Identifier') && 'C: CallExpression')": 3,
    "(('A: Identifier' === 'B: Identifier') && 'C: CallExpression')": 3,
    "('A: Identifier' ? 'B: AssignmentExpression' : 'C: AssignmentExpression')": 3,
    "((null != 'A: Identifier') && 'B: SequenceExpression')": 3,
    "((('A: BinaryExpression' && 'B: BinaryExpression') || (0 !== 'C: MemberExpression')) || delete('D: MemberExpression'))": 3,
    "((('A: string' !== 'B: Identifier') && ('C: string' !== 'D: Identifier')) || (0 !== 'E: MemberExpression'))": 3,
    "(('A: string' !== 'B: Identifier') && ('C: string' !== 'D: Identifier'))": 3,
    "(0 !== 'A: MemberExpression')": 3,
    "('A: Identifier' !== 'B: string')": 2,
    "('A: string' + ('B: CallExpression' ? 'C: string' : 'D: Identifier'))": 2,
    "('A: CallExpression' ? 'B: string' : 'C: Identifier')": 2,
    "('A: Identifier' && ('B: number' === ('C: MemberExpression' * 'D: MemberExpression')))": 2,
    "(('A: string' === 'B: Identifier') ? 'C: ArrayExpression' : 'D: ArrayExpression')": 2,
    "(('A: Identifier' % 'B: number') !== 0)": 2,
    "(('A: CallExpression' > 'B: number') ? 'C: string' : 'D: string')": 2,
    "('A: Identifier' & 1)": 2,
    "('A: CallExpression' + 'B: CallExpression')": 2,
    "('A: NewExpression' - 'B: Identifier')": 2,
    "('A: Identifier' <= 'B: number')": 2,
    "('A: ThisExpression' + 'B: Identifier')": 2,
    "(('A: CallExpression' + 'B: string') + 'C: CallExpression')": 2,
    "('A: CallExpression' || 'B: ArrayExpression')": 2,
    "(('A: MemberExpression' === 'B: number') && ('C: ThisExpression' === 'D: Identifier'))": 2,
    "('A: ThisExpression' === 'B: Identifier')": 2,
    "(('A: string' + 'B: Identifier') + 'C: Identifier')": 2,
    "((('A: BinaryExpression' + 'B: string') + 'C: string') + 'D: string')": 2,
    "void(1)": 2,
    "!('A: UpdateExpression')": 2,
    "('A: MemberExpression' || false)": 2,
    "('A: Identifier' && (typeof('B: MemberExpression') !== \"undefined\"))": 2,
    "('A: number' + 'B: Identifier')": 2,
    "(\"object\" === (('A: UnaryExpression' === \"undefined\") ? \"undefined\" : 'B: CallExpression'))": 2,
    "('A: Identifier' && ('B: MemberExpression' === null))": 2,
    "((null === 'A: Identifier') && ('B: MemberExpression' === 'C: Identifier'))": 2,
    "(('A: string' in 'B: Identifier') ? 'C: MemberExpression' : 'D: MemberExpression')": 2,
    "('A: Identifier' + \"\")": 2,
    "('A: MemberExpression' && ('B: MemberExpression' > 'C: MemberExpression'))": 2,
    "('A: CallExpression' === 'B: MemberExpression')": 2,
    "('A: Identifier' - 'B: MemberExpression')": 2,
    "(\"string\" === 'A: Identifier')": 2,
    "('A: Identifier' || 1)": 2,
    "('A: Identifier' ? 'B: CallExpression' : 'C: ArrayExpression')": 2,
    "((('A: Identifier' !== null) && 'B: MemberExpression') || 'C: MemberExpression')": 2,
    "(('A: Identifier' !== null) && 'B: MemberExpression')": 2,
    "('A: Identifier' && !('B: CallExpression'))": 2,
    "((typeof('A: Identifier') === 'undefined') ? 'undefined' : 'B: CallExpression')": 2,
    "('A: MemberExpression' || 'B: string')": 2,
    "(\"undefined\" === 'A: CallExpression')": 2,
    "(!('A: MemberExpression') && !('B: MemberExpression'))": 2,
    "('A: MemberExpression' && !('B: MemberExpression'))": 2,
    "('A: MemberExpression' <= 0)": 2,
    "('A: Identifier' && ('B: MemberExpression' === 0))": 2,
    "(('A: MemberExpression' > 0) ? 'B: MemberExpression' : !('C: MemberExpression'))": 2,
    "((('A: BinaryExpression' + 'B: MemberExpression') + 'C: string') + ('D: MemberExpression' || 'E: Identifier'))": 2,
    "('A: MemberExpression' === 'B: CallExpression')": 2,
    "('A: MemberExpression' || 'B: CallExpression')": 2,
    "(('A: Identifier' && 'B: MemberExpression') || 'C: Identifier')": 2,
    "(('A: MemberExpression' && ('B: MemberExpression' > 0)) && !('C: CallExpression'))": 2,
    "(\"\" === 'A: Identifier')": 2,
    "((('A: ThisExpression' instanceof 'B: Identifier') && 'C: MemberExpression') || 'D: MemberExpression')": 2,
    "(('A: ThisExpression' instanceof 'B: Identifier') && 'C: MemberExpression')": 2,
    "(\"string\" === 'A: CallExpression')": 2,
    "((\"function\" === 'A: Identifier') && ('B: Identifier' instanceof 'C: Identifier'))": 2,
    "((('A: Identifier' instanceof 'B: MemberExpression') && ('C: MemberExpression' === 'D: MemberExpression')) && ('E: MemberExpression' === 'F: MemberExpression'))": 2,
    "(('A: Identifier' instanceof 'B: MemberExpression') && ('C: MemberExpression' === 'D: MemberExpression'))": 2,
    "(true === 'A: CallExpression')": 2,
    "((('A: BinaryExpression' + 'B: MemberExpression') + 'C: string') + 'D: Identifier')": 2,
    "((typeof('A: Identifier') !== \"undefined\") && 'B: Identifier')": 2,
    "('A: MemberExpression' || (('B: MemberExpression' + 'C: string') + 'D: MemberExpression'))": 2,
    "('A: MemberExpression' !== 'B: string')": 2,
    "('A: MemberExpression' || 'B: ArrayExpression')": 2,
    "('A: MemberExpression' ? 'B: string' : \"\")": 2,
    "((('A: BinaryExpression' + 'B: ConditionalExpression') + 'C: string') + 'D: Identifier')": 2,
    "((('A: BinaryExpression' + 'B: string') + ('C: BinaryExpression' ? 'D: LogicalExpression' : \"\")) + 'E: string')": 2,
    "('A: AssignmentExpression' && 'B: string')": 2,
    "((('A: BinaryExpression' + 'B: ConditionalExpression') + 'C: string') + 'D: CallExpression')": 2,
    "('A: Identifier' ? 'B: string' : \"\")": 2,
    "('A: CallExpression' || 'B: MemberExpression')": 2,
    "((('A: BinaryExpression' + 'B: string') + 'C: string') + 'D: CallExpression')": 2,
    "((('A: MemberExpression' + 'B: MemberExpression') + 'C: MemberExpression') + 'D: MemberExpression')": 2,
    "(('A: MemberExpression' + 'B: MemberExpression') + 'C: MemberExpression')": 2,
    "('A: Identifier' ? 'B: string' : 'C: string')": 2,
    "(typeof('A: MemberExpression') !== \"boolean\")": 2,
    "(('A: Identifier' > 0) ? 'B: MemberExpression' : -(1))": 2,
    "((!('A: Identifier') || !('B: Identifier')) || ('C: CallExpression' !== 'D: CallExpression'))": 2,
    "(!('A: Identifier') || !('B: Identifier'))": 2,
    "((('A: Identifier' - 'B: Identifier') / 'C: number') + 'D: Identifier')": 2,
    "(('A: Identifier' - 'B: Identifier') / 'C: number')": 2,
    "('A: Identifier' >= 1)": 2,
    "(-('A: Identifier') + 'B: Identifier')": 2,
    "('A: Identifier' <= ('B: Identifier' - 'C: Identifier'))": 2,
    "((-('A: Identifier') === 'B: Identifier') || (('C: Identifier' !== 'D: Identifier') && ('E: MemberExpression' < 'F: MemberExpression')))": 2,
    "(('A: Identifier' !== 'B: Identifier') && ('C: MemberExpression' < 'D: MemberExpression'))": 2,
    "((('A: Identifier' < 'B: Identifier') && ('C: Identifier' < 'D: Identifier')) && ('E: CallExpression' === 'F: CallExpression'))": 2,
    "(('A: Identifier' < 'B: Identifier') && ('C: Identifier' < 'D: Identifier'))": 2,
    "((('A: Identifier' >= 0) && ('B: Identifier' < 'C: Identifier')) && ('D: MemberExpression' !== -(1)))": 2,
    "('A: MemberExpression' !== -(1))": 2,
    "(('A: Identifier' - 'B: Identifier') - 1)": 2,
    "('A: MemberExpression' <= 'B: CallExpression')": 2,
    "(('A: MemberExpression' === 'B: Identifier') && ('C: MemberExpression' === 'D: Identifier'))": 2,
    "(('A: Identifier' >= ('B: MemberExpression' / 'C: number')) || ('D: Identifier' >= ('E: MemberExpression' / 'F: number')))": 2,
    "(-(1) === 'A: Identifier')": 2,
    "('A: Identifier' < ('B: MemberExpression' - 1))": 2,
    "((('A: Identifier' - 'B: Identifier') - 'C: Identifier') - 1)": 2,
    "('A: Identifier' ? 1 : 0)": 2,
    "((('A: UnaryExpression' == \"object\") && (\"undefined\" != 'B: UnaryExpression')) ? 'C: AssignmentExpression' : (('D: BinaryExpression' && 'E: MemberExpression') ? 'F: CallExpression' : 'G: SequenceExpression'))": 2,
    "((typeof('A: Identifier') == \"object\") && (\"undefined\" != typeof('B: Identifier')))": 2,
    "((('A: UnaryExpression' == \"function\") && 'B: MemberExpression') ? 'C: CallExpression' : 'D: SequenceExpression')": 2,
    "((typeof('A: Identifier') == \"function\") && 'B: MemberExpression')": 2,
    "((\"undefined\" != typeof('A: Identifier')) ? 'B: Identifier' : ('C: Identifier' || 'D: Identifier'))": 2,
    "('A: Identifier' ? 'B: FunctionExpression' : 'C: Identifier')": 2,
    "('A: Identifier' ? 'B: FunctionExpression' : 'C: CallExpression')": 2,
    "((('A: UnaryExpression' === 'object') && ('B: UnaryExpression' !== 'undefined')) ? 'C: AssignmentExpression' : (('D: BinaryExpression' && 'E: MemberExpression') ? 'F: CallExpression' : 'G: SequenceExpression'))": 2,
    "((typeof('A: Identifier') === 'object') && (typeof('B: Identifier') !== 'undefined'))": 2,
    "((('A: UnaryExpression' === 'function') && 'B: MemberExpression') ? 'C: CallExpression' : 'D: SequenceExpression')": 2,
    "((typeof('A: Identifier') === 'function') && 'B: MemberExpression')": 2,
    "((typeof('A: Identifier') !== 'undefined') ? 'B: Identifier' : ('C: Identifier' || 'D: Identifier'))": 2,
    "('A: CallExpression' || '')": 1,
    "('A: CallExpression' ? '' : 'B: string')": 1,
    "('' === 'A: CallExpression')": 1,
    "('A: Identifier' ? '' : 'B: string')": 1,
    "(('A: CallExpression' + 'B: string') + 'C: MemberExpression')": 1,
    "(!('A: MemberExpression') || !('B: MemberExpression'))": 1,
    "(1 === 'A: CallExpression')": 1,
    "((typeof('A: Identifier') == 'number') ? -(1) : 'B: number')": 1,
    "(1 / 'A: MemberExpression')": 1,
    "typeof('A: ThisExpression')": 1,
    "('A: CallExpression' + 1)": 1,
    "('A: MemberExpression' * (('B: MemberExpression' + 'C: MemberExpression') + 'D: number'))": 1,
    "(('A: MemberExpression' + 'B: MemberExpression') + 'C: number')": 1,
    "('A: Identifier' + ('B: MemberExpression' * 'C: Identifier'))": 1,
    "('A: number' === ('B: number' * 'C: Identifier'))": 1,
    "('A: Identifier' + 'B: ThisExpression')": 1,
    "(('A: Identifier' > 1) ? null : true)": 1,
    "('A: Identifier' === ('B: MemberExpression' - 1))": 1,
    "('A: CallExpression' ? 'B: CallExpression' : void(0))": 1,
    "(typeof('A: Identifier') == 'undefined')": 1,
    "('A: string' + ('B: MemberExpression' || 'C: Identifier'))": 1,
    "(('A: string' === 'B: Identifier') || ('C: Identifier' === ('D: string' + 'E: MemberExpression')))": 1,
    "('A: Identifier' === ('B: string' + 'C: MemberExpression'))": 1,
    "((('A: Identifier' + 'B: string') + 'C: Identifier') + 'D: string')": 1,
    "typeof('A: CallExpression')": 1,
    "(('A: MemberExpression' + 'B: string') + 'C: CallExpression')": 1,
    "(('A: Identifier' < 'B: number') ? 'C: Identifier' : ('D: CallExpression' + 'E: CallExpression'))": 1,
    "(('A: NewExpression' - 'B: Identifier') < 'C: Identifier')": 1,
    "(('A: NewExpression' - 'B: Identifier') < 'C: number')": 1,
    "((typeof('A: Identifier') === 'object') ? 'B: CallExpression' : void(0))": 1,
    "(('A: MemberExpression' === 'B: string') && ('C: MemberExpression' === 'D: string'))": 1,
    "('A: CallExpression' instanceof 'B: Identifier')": 1,
    "('A: NewExpression' instanceof 'B: Identifier')": 1,
    "(('A: number' * 'B: number') - ('C: number' / 'D: number'))": 1,
    "('A: number' * 'B: number')": 1,
    "('A: number' / 'B: number')": 1,
    "((typeof('A: Identifier') != 'undefined') && 'B: MemberExpression')": 1,
    "((typeof('A: Identifier') != 'undefined') ? 'B: Identifier' : 'C: Identifier')": 1,
    "(('A: Identifier' - 'B: Identifier') <= 'C: number')": 1,
    "('A: CallExpression' >= 'B: Identifier')": 1,
    "('A: CallExpression' > 0)": 1,
    "('A: CallExpression' - 'B: CallExpression')": 1,
    "(('A: Identifier' <= 0) && ('B: Identifier' > -('C: number')))": 1,
    "('A: Identifier' > -('B: number'))": 1,
    "('A: UpdateExpression' < 'B: number')": 1,
    "((('A: BinaryExpression' + 'B: Identifier') + 'C: Identifier') + 'D: string')": 1,
    "((('A: string' + 'B: Identifier') + 'C: Identifier') + 'D: Identifier')": 1,
    "('A: CallExpression' === -(1))": 1,
    "((('A: string' + 'B: string') + 'C: string') + 'D: string')": 1,
    "(('A: Identifier' && 'B: CallExpression') ? 'C: MemberExpression' : 'D: Identifier')": 1,
    "((('A: UnaryExpression' === \"function\") && ('B: UnaryExpression' === 'C: string')) ? 'D: FunctionExpression' : 'E: FunctionExpression')": 1,
    "((typeof('A: Identifier') === \"function\") && (typeof('B: MemberExpression') === 'C: string'))": 1,
    "(typeof('A: MemberExpression') === 'B: string')": 1,
    "((('A: LogicalExpression' && 'B: BinaryExpression') && ('C: Identifier' !== 'D: MemberExpression')) ? 'E: string' : typeof('F: Identifier'))": 1,
    "((('A: Identifier' && 'B: BinaryExpression') && ('C: MemberExpression' === 'D: Identifier')) && ('E: Identifier' !== 'F: MemberExpression'))": 1,
    "(('A: Identifier' && ('B: UnaryExpression' === \"function\")) && ('C: MemberExpression' === 'D: Identifier'))": 1,
    "('A: Identifier' && (typeof('B: Identifier') === \"function\"))": 1,
    "((('A: Identifier' && 'B: BinaryExpression') && ('C: UnaryExpression' === \"function\")) && (typeof('D: MemberExpression') === \"function\"))": 1,
    "(('A: Identifier' && ('B: UnaryExpression' !== \"undefined\")) && (typeof('C: MemberExpression') === \"function\"))": 1,
    "('A: Identifier' && ('B: MemberExpression' !== 'C: Identifier'))": 1,
    "('A: CallExpression' ? 'B: ArrayExpression' : 'C: ObjectExpression')": 1,
    "(('A: Identifier' === 'B: CallExpression') ? 'C: CallExpression' : 'D: Identifier')": 1,
    "!(('A: Identifier' && ('B: UnaryExpression' !== \"undefined\")))": 1,
    "((('A: Identifier' << 'B: number') - 'C: Identifier') + 'D: CallExpression')": 1,
    "(('A: Identifier' << 'B: number') - 'C: Identifier')": 1,
    "(((null === 'A: Identifier') && ('B: MemberExpression' === 'C: Identifier')) || ((null === 'D: Identifier') && ('E: MemberExpression' === 'F: Identifier')))": 1,
    "(('A: MemberExpression' !== 'B: Identifier') || ('C: MemberExpression' !== 'D: Identifier'))": 1,
    "(('A: MemberExpression' === 'B: MemberExpression') && ('C: CallExpression' === 'D: CallExpression'))": 1,
    "(false === 'A: CallExpression')": 1,
    "((('A: LogicalExpression' && 'B: BinaryExpression') && ('C: UnaryExpression' === \"function\")) && ('D: CallExpression' === 'E: CallExpression'))": 1,
    "((('A: BinaryExpression' && 'B: BinaryExpression') && ('C: UnaryExpression' === \"function\")) && (typeof('D: MemberExpression') === \"function\"))": 1,
    "((('A: MemberExpression' !== 'B: Identifier') && ('C: UnaryExpression' !== \"undefined\")) && (typeof('D: MemberExpression') === \"function\"))": 1,
    "(('A: MemberExpression' !== 'B: Identifier') && (typeof('C: MemberExpression') !== \"undefined\"))": 1,
    "(('A: Identifier' === 'B: CallExpression') && 'C: CallExpression')": 1,
    "(('A: MemberExpression' !== 'B: MemberExpression') && !('C: CallExpression'))": 1,
    "(('A: MemberExpression' === 'B: number') || 'C: CallExpression')": 1,
    "(('A: Identifier' && 'B: MemberExpression') && 'C: MemberExpression')": 1,
    "(('A: Identifier' && 'B: MemberExpression') && !('C: MemberExpression'))": 1,
    "(('A: string' === 'B: CallExpression') || (('C: BinaryExpression' && 'D: BinaryExpression') && ('E: MemberExpression' ? 'F: BinaryExpression' : 'G: LogicalExpression')))": 1,
    "((('A: UnaryExpression' === \"number\") && ('B: MemberExpression' !== 'C: Identifier')) && ('D: MemberExpression' ? ('E: CallExpression' === 'F: MemberExpression') : ('G: BinaryExpression' && 'H: BinaryExpression')))": 1,
    "((typeof('A: MemberExpression') === \"number\") && ('B: MemberExpression' !== 'C: Identifier'))": 1,
    "('A: MemberExpression' ? ('B: CallExpression' === 'C: MemberExpression') : ((null === 'D: CallExpression') && ('E: MemberExpression' === 'F: Identifier')))": 1,
    "((null === 'A: CallExpression') && ('B: MemberExpression' === 'C: Identifier'))": 1,
    "(null === 'A: CallExpression')": 1,
    "(('A: string' + ('B: Identifier' - 'C: MemberExpression')) + 'D: string')": 1,
    "('A: string' + ('B: Identifier' - 'C: MemberExpression'))": 1,
    "((\"string\" === 'A: Identifier') ? 'B: Identifier' : 'C: MemberExpression')": 1,
    "((('A: MemberExpression' !== 'B: Identifier') && ('C: MemberExpression' !== 'D: Identifier')) && ('E: MemberExpression' === 'F: Identifier'))": 1,
    "(('A: MemberExpression' !== 'B: Identifier') && ('C: MemberExpression' !== 'D: Identifier'))": 1,
    "('A: MemberExpression' + ('B: Identifier' || 0))": 1,
    "(('A: Identifier' in 'B: Identifier') && !('C: CallExpression'))": 1,
    "('A: Identifier' && ('B: Identifier' !== 'C: string'))": 1,
    "((('A: string' + 'B: MemberExpression') + 'C: string') + 'D: CallExpression')": 1,
    "(('A: MemberExpression' === 'B: number') || ('C: MemberExpression' === 'D: number'))": 1,
    "((('A: BinaryExpression' + 'B: string') + 'C: Identifier') + 'D: Identifier')": 1,
    "((('A: Identifier' + 'B: Identifier') + 'C: string') + 'D: Identifier')": 1,
    "(('A: Identifier' + 'B: Identifier') + 'C: string')": 1,
    "((0 === 'A: Identifier') ? 'B: string' : ('C: string' + 'D: Identifier'))": 1,
    "((('A: MemberExpression' > 0) && ('B: MemberExpression' !== 'C: Identifier')) ? 'D: MemberExpression' : 'E: ObjectExpression')": 1,
    "(('A: MemberExpression' > 0) && ('B: MemberExpression' !== 'C: Identifier'))": 1,
    "('A: MemberExpression' ? 'B: MemberExpression' : null)": 1,
    "(('A: Identifier' !== null) ? 'B: CallExpression' : 'C: Identifier')": 1,
    "('A: Identifier' ? false : 'B: Identifier')": 1,
    "((('A: MemberExpression' > 'B: number') && ('C: MemberExpression' !== 'D: Identifier')) ? 'E: MemberExpression' : 'F: ObjectExpression')": 1,
    "(('A: MemberExpression' > 'B: number') && ('C: MemberExpression' !== 'D: Identifier'))": 1,
    "((typeof('A: Identifier') === \"function\") ? 'B: ArrayExpression' : 'C: ArrayExpression')": 1,
    "(('A: Identifier' !== null) && (('object' === 'B: Identifier') || ('function' === 'C: Identifier')))": 1,
    "(('object' === 'A: Identifier') || ('function' === 'B: Identifier'))": 1,
    "((typeof('A: Identifier') !== 'undefined') ? 'B: Identifier' : 'C: Identifier')": 1,
    "('A: Identifier' || 'B: ObjectExpression')": 1,
    "((('A: UnaryExpression' === 'undefined') && ('B: UnaryExpression' !== 'undefined')) && ('C: string' === 'D: CallExpression'))": 1,
    "((typeof('A: Identifier') === 'undefined') && (typeof('B: Identifier') !== 'undefined'))": 1,
    "((('A: UnaryExpression' !== 'undefined') && ('B: UnaryExpression' !== 'undefined')) && (typeof('C: Identifier') !== 'undefined'))": 1,
    "((typeof('A: Identifier') !== 'undefined') && (typeof('B: Identifier') !== 'undefined'))": 1,
    "('A: UpdateExpression' % 'B: number')": 1,
    "(('A: Identifier' === 'B: Identifier') && (typeof('C: Identifier') === 'function'))": 1,
    "(('A: Identifier' && ('object' === 'B: ConditionalExpression')) && ('C: MemberExpression' === 'D: Identifier'))": 1,
    "('A: Identifier' && ('object' === ('B: BinaryExpression' ? 'undefined' : 'C: CallExpression')))": 1,
    "('object' === (('A: UnaryExpression' === 'undefined') ? 'undefined' : 'B: CallExpression'))": 1,
    "('A: string' + ('B: MemberExpression' || 'C: string'))": 1,
    "((('A: MemberExpression' === 'B: MemberExpression') && ('C: Identifier' === 'D: Identifier')) && ('E: MemberExpression' === 'F: Identifier'))": 1,
    "(('A: MemberExpression' === 'B: MemberExpression') && ('C: Identifier' === 'D: Identifier'))": 1,
    "((0 === 'A: Identifier') && 'B: MemberExpression')": 1,
    "(('A: MemberExpression' === 'B: Identifier') && ('C: Identifier' < 'D: MemberExpression'))": 1,
    "(('A: Identifier' === 'B: Identifier') && ('C: MemberExpression' !== 'D: Identifier'))": 1,
    "((typeof('A: Identifier') !== 'function') && 'B: CallExpression')": 1,
    "(('A: ThisExpression' instanceof 'B: Identifier') ? 'C: CallExpression' : 'D: CallExpression')": 1,
    "(('A: string' === 'B: Identifier') && !('C: MemberExpression'))": 1,
    "((typeof('A: Identifier') !== \"undefined\") ? 'B: Identifier' : 'C: Identifier')": 1,
    "('A: CallExpression' || \"\")": 1,
    "(('A: Identifier' === 'B: Identifier') ? 'C: number' : 'D: Identifier')": 1,
    "((!('A: MemberExpression') && !('B: MemberExpression')) && !('C: MemberExpression'))": 1,
    "(('A: MemberExpression' || 0) + 1)": 1,
    "((!('A: MemberExpression') || ('B: MemberExpression' <= 0)) || ('C: Identifier' < 'D: MemberExpression'))": 1,
    "(!('A: MemberExpression') || ('B: MemberExpression' <= 0))": 1,
    "((!('A: MemberExpression') && !('B: MemberExpression')) && ('C: MemberExpression' === 0))": 1,
    "('A: CallExpression' * (('B: MemberExpression' - 'C: Identifier') + 1))": 1,
    "(('A: MemberExpression' - 'B: Identifier') + 1)": 1,
    "('A: CallExpression' || -(1))": 1,
    "('A: Identifier' >>> 'B: number')": 1,
    "('A: Identifier' < 0)": 1,
    "('A: Identifier' / 'B: number')": 1,
    "(typeof('A: MemberExpression') !== \"function\")": 1,
    "((('A: string' + 'B: Identifier') + 'C: string') + 'D: MemberExpression')": 1,
    "((('A: string' + 'B: BinaryExpression') + 'C: string') + 'D: MemberExpression')": 1,
    "(('A: string' + ('B: MemberExpression' + 1)) + 'C: string')": 1,
    "('A: string' + ('B: MemberExpression' + 1))": 1,
    "(('A: MemberExpression' === 0) && ('B: MemberExpression' !== 0))": 1,
    "((('A: string' === 'B: Identifier') && ('C: MemberExpression' !== 'D: BinaryExpression')) && (('E: MemberExpression' > 0) || ('F: CallExpression' > 'G: number')))": 1,
    "(('A: string' === 'B: Identifier') && ('C: MemberExpression' !== ('D: CallExpression' - 1)))": 1,
    "('A: MemberExpression' !== ('B: CallExpression' - 1))": 1,
    "(('A: MemberExpression' > 0) || ('B: CallExpression' > 'C: number'))": 1,
    "((('A: Identifier' + 'B: string') + 'C: MemberExpression') + 'D: string')": 1,
    "(('A: Identifier' + 'B: string') + 'C: MemberExpression')": 1,
    "('A: string' + ('B: string' + 'C: Identifier'))": 1,
    "('A: MemberExpression' && ('B: MemberExpression' === null))": 1,
    "(('A: MemberExpression' !== null) && ('B: MemberExpression' !== 'C: MemberExpression'))": 1,
    "('A: MemberExpression' !== null)": 1,
    "(('A: MemberExpression' === null) && !('B: MemberExpression'))": 1,
    "('A: Identifier' ? 0 : 'B: MemberExpression')": 1,
    "('A: Identifier' && ('B: MemberExpression' === 'C: CallExpression'))": 1,
    "('A: MemberExpression' && +('B: CallExpression'))": 1,
    "+('A: CallExpression')": 1,
    "('A: MemberExpression' && !(!('B: Identifier')))": 1,
    "('A: ThisExpression' !== 'B: MemberExpression')": 1,
    "('A: Identifier' || 'B: string')": 1,
    "('A: Identifier' || null)": 1,
    "((('A: BinaryExpression' + 'B: MemberExpression') + 'C: string') + (('D: Identifier' && 'E: MemberExpression') || 'F: Identifier'))": 1,
    "((('A: string' + 'B: ConditionalExpression') + 'C: string') + 'D: MemberExpression')": 1,
    "(('A: string' + ('B: UnaryExpression' ? 'C: string' : 'D: CallExpression')) + 'E: string')": 1,
    "('A: string' + (!('B: Identifier') ? 'C: string' : 'D: CallExpression'))": 1,
    "(!('A: Identifier') ? 'B: string' : 'C: CallExpression')": 1,
    "('A: MemberExpression' ? 'B: CallExpression' : null)": 1,
    "('A: CallExpression' || ('B: MemberExpression' && 'C: CallExpression'))": 1,
    "('A: CallExpression' !== 'B: string')": 1,
    "((typeof('A: Identifier') === \"number\") && ('B: Identifier' > 0))": 1,
    "(typeof('A: Identifier') === \"number\")": 1,
    "('A: MemberExpression' < 0)": 1,
    "(typeof('A: Identifier') !== \"number\")": 1,
    "((\"undefined\" === 'A: CallExpression') || (\"\" === 'B: Identifier'))": 1,
    "(('A: ThisExpression' instanceof 'B: Identifier') ? 'C: ThisExpression' : 'D: MemberExpression')": 1,
    "((('A: Identifier' instanceof 'B: Identifier') && 'C: MemberExpression') || 'D: MemberExpression')": 1,
    "(('A: Identifier' instanceof 'B: Identifier') && 'C: MemberExpression')": 1,
    "('A: Identifier' ? 'B: string' : ('C: string' + 'D: CallExpression'))": 1,
    "(!('A: Identifier') ? 'B: string' : ('C: string' + 'D: CallExpression'))": 1,
    "('A: Identifier' == 'B: Identifier')": 1,
    "((\"function\" === 'A: Identifier') && (true === 'B: CallExpression'))": 1,
    "('A: MemberExpression' ? 'B: CallExpression' : 'C: string')": 1,
    "('A: MemberExpression' ? 'B: CallExpression' : \"\")": 1,
    "((('A: UnaryExpression' !== \"undefined\") && 'B: Identifier') && 'C: MemberExpression')": 1,
    "((typeof('A: Identifier') === \"function\") && 'B: MemberExpression')": 1,
    "(('A: Identifier' && 'B: MemberExpression') && ('C: Identifier' instanceof 'D: MemberExpression'))": 1,
    "(('A: Identifier' > 1) ? ('B: Identifier' - 1) : 0)": 1,
    "!(('A: MemberExpression' && ('B: MemberExpression' !== 'C: string')))": 1,
    "('A: MemberExpression' && ('B: MemberExpression' !== 'C: string'))": 1,
    "('A: Identifier' || ('B: Identifier' > 1))": 1,
    "(('A: Identifier' || 0) + 'B: number')": 1,
    "(('A: MemberExpression' === \"\") && ('B: MemberExpression' === 0))": 1,
    "((typeof('A: Identifier') === \"undefined\") || (typeof('B: Identifier') === \"undefined\"))": 1,
    "('A: MemberExpression' == null)": 1,
    "((typeof('A: Identifier') !== \"undefined\") && 'B: MemberExpression')": 1,
    "(typeof('A: Identifier') !== \"string\")": 1,
    "(('A: MemberExpression' === 1) || 'B: CallExpression')": 1,
    "((typeof('A: Identifier') === \"undefined\") || !('B: MemberExpression'))": 1,
    "(('A: MemberExpression' ? 'B: string' : \"\") + 'C: Identifier')": 1,
    "('A: Identifier' || (('B: UnaryExpression' === \"undefined\") && !('C: CallExpression')))": 1,
    "((typeof('A: Identifier') === \"undefined\") && !('B: CallExpression'))": 1,
    "((typeof('A: MemberExpression') === \"function\") ? 'B: CallExpression' : 'C: CallExpression')": 1,
    "(typeof('A: Identifier') === \"string\")": 1,
    "(!('A: MemberExpression') || (typeof('B: MemberExpression') === \"string\"))": 1,
    "(typeof('A: MemberExpression') === \"string\")": 1,
    "((('A: BinaryExpression' + 'B: Identifier') + 'C: string') + 'D: CallExpression')": 1,
    "((('A: BinaryExpression' + 'B: ConditionalExpression') + ('C: MemberExpression' ? 'D: string' : \"\")) + 'E: string')": 1,
    "((('A: BinaryExpression' + 'B: string') + ('C: MemberExpression' ? 'D: BinaryExpression' : \"\")) + ('E: MemberExpression' ? 'F: string' : \"\"))": 1,
    "((('A: BinaryExpression' + 'B: Identifier') + 'C: string') + ('D: MemberExpression' ? ('E: BinaryExpression' + 'F: string') : \"\"))": 1,
    "('A: MemberExpression' ? (('B: string' + 'C: CallExpression') + 'D: string') : \"\")": 1,
    "((('A: BinaryExpression' + 'B: Identifier') + 'C: string') + 'D: MemberExpression')": 1,
    "((('A: string' + 'B: Identifier') + 'C: string') + (('D: MemberExpression' === 'E: MemberExpression') ? ('F: AssignmentExpression' && 'G: string') : \"\"))": 1,
    "(('A: MemberExpression' === 'B: MemberExpression') ? ('C: AssignmentExpression' && 'D: string') : \"\")": 1,
    "((('A: string' + 'B: CallExpression') + 'C: string') + (('D: MemberExpression' === 'E: Identifier') ? ('F: AssignmentExpression' && 'G: string') : \"\"))": 1,
    "(('A: MemberExpression' === 'B: Identifier') ? ('C: AssignmentExpression' && 'D: string') : \"\")": 1,
    "('A: MemberExpression' && !('B: Identifier'))": 1,
    "('A: MemberExpression' ? ('B: MemberExpression' || true) : 'C: Identifier')": 1,
    "('A: MemberExpression' || true)": 1,
    "(('A: MemberExpression' === 'B: string') && ('C: string' in 'D: MemberExpression'))": 1,
    "('A: string' in 'B: MemberExpression')": 1,
    "('A: Identifier' || false)": 1,
    "('A: Identifier' && ('B: CallExpression' > -(1)))": 1,
    "!('A: AssignmentExpression')": 1,
    "(!('A: Identifier') && 'B: MemberExpression')": 1,
    "('A: AssignmentExpression' != null)": 1,
    "('A: CallExpression' && ('B: MemberExpression' !== 'C: Identifier'))": 1,
    "('A: MemberExpression' !== true)": 1,
    "((('A: BinaryExpression' + 'B: MemberExpression') + 'C: MemberExpression') + 'D: CallExpression')": 1,
    "((('A: MemberExpression' + 'B: string') + 'C: MemberExpression') + 'D: MemberExpression')": 1,
    "((\"\" === 'A: Identifier') ? 'B: Identifier' : 'C: Identifier')": 1,
    "(('A: MemberExpression' === 0) ? 'B: Identifier' : 'C: Identifier')": 1,
    "('A: MemberExpression' || \"\")": 1,
    "('A: MemberExpression' !== \"\")": 1,
    "((('A: BinaryExpression' + 'B: string') + ('C: Identifier' ? 'D: string' : \"\")) + 'E: string')": 1,
    "((('A: BinaryExpression' + 'B: MemberExpression') + 'C: string') + ('D: Identifier' ? 'E: string' : \"\"))": 1,
    "((('A: BinaryExpression' + 'B: string') + 'C: string') + 'D: MemberExpression')": 1,
    "((('A: string' + 'B: ConditionalExpression') + 'C: string') + 'D: string')": 1,
    "(('A: string' + ('B: Identifier' ? 'C: string' : \"\")) + 'D: string')": 1,
    "('A: string' + ('B: Identifier' ? 'C: string' : \"\"))": 1,
    "(('A: MemberExpression' === 'B: number') || !('C: Identifier'))": 1,
    "(('A: MemberExpression' === 'B: number') && 'C: Identifier')": 1,
    "(!('A: Identifier') || ('B: CallExpression' > -(1)))": 1,
    "('A: MemberExpression' && ('B: Identifier' !== 'C: Identifier'))": 1,
    "(('A: Identifier' === 'B: Identifier') && 'C: MemberExpression')": 1,
    "('A: Identifier' || ('B: MemberExpression' !== 'C: MemberExpression'))": 1,
    "('A: Identifier' ? \"\" : 'B: string')": 1,
    "('A: string' + ('B: CallExpression' || 'C: MemberExpression'))": 1,
    "((('A: string' + 'B: CallExpression') + 'C: string') + 'D: MemberExpression')": 1,
    "(!('A: Identifier') || ('B: MemberExpression' <= 0))": 1,
    "((('A: string' + 'B: CallExpression') + 'C: string') + 'D: CallExpression')": 1,
    "((('A: string' + 'B: CallExpression') + 'C: string') + 'D: string')": 1,
    "(('A: MemberExpression' === \"\") || ('B: MemberExpression' === 'C: string'))": 1,
    "('A: Identifier' && (!('B: Identifier') || ('C: MemberExpression' === false)))": 1,
    "(!('A: Identifier') || ('B: MemberExpression' === false))": 1,
    "('A: CallExpression' || ('B: MemberExpression' ? 'C: string' : 'D: string'))": 1,
    "(!('A: MemberExpression') && 'B: CallExpression')": 1,
    "((typeof('A: MemberExpression') === \"number\") && (typeof('B: MemberExpression') === \"number\"))": 1,
    "(!('A: CallExpression') && !('B: CallExpression'))": 1,
    "((('A: Identifier' > 0) ? 'B: string' : \"\") + 'C: Identifier')": 1,
    "(('A: Identifier' > 0) ? 'B: string' : \"\")": 1,
    "((typeof('A: MemberExpression') !== \"boolean\") && (typeof('B: MemberExpression') !== \"boolean\"))": 1,
    "('A: MemberExpression' !== ('B: MemberExpression' + 'C: MemberExpression'))": 1,
    "(('A: CallExpression' !== -(1)) || ('B: CallExpression' !== -(1)))": 1,
    "((('A: BinaryExpression' + 'B: MemberExpression') + 'C: string') + 'D: string')": 1,
    "(!('A: MemberExpression') && 'B: MemberExpression')": 1,
    "((('A: string' + 'B: string') + 'C: CallExpression') + 'D: string')": 1,
    "(('A: string' + 'B: string') + 'C: CallExpression')": 1,
    "('A: Identifier' ? (('B: BinaryExpression' + 'C: Identifier') + 'D: string') : \"\")": 1,
    "((('A: BinaryExpression' + 'B: string') + 'C: string') + 'D: Identifier')": 1,
    "((('A: string' + 'B: Identifier') + 'C: string') + 'D: string')": 1,
    "((('A: string' + 'B: Identifier') + 'C: MemberExpression') + 'D: string')": 1,
    "(('A: string' + 'B: Identifier') + 'C: MemberExpression')": 1,
    "('A: MemberExpression' && ('B: string' === 'C: Identifier'))": 1,
    "!((('A: Identifier' && 'B: MemberExpression') && ('C: MemberExpression' > 0)))": 1,
    "(('A: Identifier' && 'B: MemberExpression') && ('C: MemberExpression' > 0))": 1,
    "('A: Identifier' && ('B: MemberExpression' === 'C: string'))": 1,
    "(('A: Identifier' > 'B: number') ? ('C: Identifier' - 'D: number') : 0)": 1,
    "('A: Identifier' !== true)": 1,
    "('A: CallExpression' + 'B: number')": 1,
    "((null === 'A: Identifier') || (null === 'B: Identifier'))": 1,
    "(('A: MemberExpression' < 'B: number') && ('C: Identifier' || 'D: Identifier'))": 1,
    "('A: Identifier' && (('B: LogicalExpression' && 'C: Identifier') || ('D: BinaryExpression' && 'E: BinaryExpression')))": 1,
    "((('A: LogicalExpression' && 'B: Identifier') && 'C: Identifier') || (('D: MemberExpression' < 'E: number') && ('F: number' === 'G: BinaryExpression')))": 1,
    "((('A: Identifier' && 'B: Identifier') && 'C: Identifier') && 'D: Identifier')": 1,
    "(('A: MemberExpression' < 'B: number') && ('C: number' === ('D: BinaryExpression' + 'E: Identifier')))": 1,
    "('A: number' === (('B: BinaryExpression' + 'C: Identifier') + 'D: Identifier'))": 1,
    "((('A: Identifier' + 'B: Identifier') + 'C: Identifier') + 'D: Identifier')": 1,
    "(('A: Identifier' + 'B: Identifier') + 'C: Identifier')": 1,
    "(('A: Identifier' && ('B: MemberExpression' > 'C: number')) && ('D: MemberExpression' > 'E: number'))": 1,
    "('A: Identifier' && ('B: MemberExpression' > 'C: number'))": 1,
    "(('A: MemberExpression' < 'B: number') || (('C: MemberExpression' * 'D: number') < 'E: MemberExpression'))": 1,
    "(('A: MemberExpression' * 'B: number') < 'C: MemberExpression')": 1,
    "('A: AssignmentExpression' !== -(1))": 1,
    "('A: MemberExpression' < ('B: Identifier' + 'C: Identifier'))": 1,
    "(('A: MemberExpression' * 'B: number') >= 'C: MemberExpression')": 1,
    "(!('A: Identifier') && !('B: Identifier'))": 1,
    "(('A: Identifier' >= 1) && ('B: Identifier' >= 1))": 1,
    "('A: CallExpression' > 'B: Identifier')": 1,
    "(('A: Identifier' && ('B: MemberExpression' <= 'C: CallExpression')) && ('D: MemberExpression' <= 'E: CallExpression'))": 1,
    "('A: Identifier' && ('B: MemberExpression' <= 'C: CallExpression'))": 1,
    "((0 === 'A: Identifier') || (0 === 'B: Identifier'))": 1,
    "((0 === 'A: Identifier') || ('B: CallExpression' === 'C: CallExpression'))": 1,
    "('A: MemberExpression' ? 'B: CallExpression' : ('C: MemberExpression' !== 'D: Identifier'))": 1,
    "(('A: Identifier' + 'B: Identifier') > 1)": 1,
    "(('A: Identifier' !== 0) && ('B: Identifier' !== 0))": 1,
    "((('A: BinaryExpression' - 'B: Identifier') > 0) && ('C: MemberExpression' === 'D: Identifier'))": 1,
    "((('A: Identifier' - 'B: Identifier') - 'C: Identifier') > 0)": 1,
    "((('A: BinaryExpression' + 'B: ConditionalExpression') + ('C: Identifier' ? 1 : 0)) + 1)": 1,
    "((('A: BinaryExpression' - 'B: Identifier') + ('C: Identifier' ? 1 : 0)) + ('D: Identifier' ? 1 : 0))": 1,
    "((('A: Identifier' - 'B: Identifier') - 'C: Identifier') + ('D: Identifier' ? 1 : 0))": 1,
    "(('A: Identifier' !== 0) && ('B: MemberExpression' === 'C: Identifier'))": 1,
    "('A: MemberExpression' + 'B: CallExpression')": 1
}